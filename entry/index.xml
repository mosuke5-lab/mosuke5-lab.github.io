<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Entries on Goldstine研究所</title>
    <link>https://blog.mosuke.tech/entry/</link>
    <description>Recent content in Entries on Goldstine研究所</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 16 May 2022 18:37:40 +0900</lastBuildDate><atom:link href="https://blog.mosuke.tech/entry/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Admission Webhookを作って遊んで、その仕組みを理解しよう（動作編）</title>
      <link>https://blog.mosuke.tech/entry/2022/05/15/admission-webhook-2/</link>
      <pubDate>Mon, 16 May 2022 18:37:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/05/15/admission-webhook-2/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
前回は、Admission Webhookの説明編を書きました。今回は実際に動かしていくことをやっていきたいと思います。&lt;/p&gt;
&lt;div class=&#34;belg-link row&#34;&gt;
  &lt;div class=&#34;belg-left col-md-2 d-none d-md-block&#34;&gt;
    &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/05/15/admission-webhook-1/&#34; target=&#34;_blank&#34;&gt;
      &lt;img class=&#34;belg-site-image&#34; src=&#34;https://blog.mosuke.tech/image/logo.png&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;belg-right col-md-10&#34;&gt;
  &lt;div class=&#34;belg-title&#34;&gt;
      &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/05/15/admission-webhook-1/&#34; target=&#34;_blank&#34;&gt;Admission Webhookを作って遊んで、その仕組みを理解しよう（説明編） · Goldstine研究所&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;belg-description&#34;&gt;Kubernetesの運用には欠かせなくなってくる拡張。そのひとつであるAdmission Webhookを作って遊んでみるというものです。本記事は説明編で、動作編にも続きます。&lt;/div&gt;
    &lt;div class=&#34;belg-site&#34;&gt;
      &lt;img src=&#34;https://blog.mosuke.tech/image/favicon.ico&#34; class=&#34;belg-site-icon&#34;&gt;
      &lt;span class=&#34;belg-site-name&#34;&gt;Goldstine研究所&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Admission Webhookを作って遊んで、その仕組みを理解しよう（説明編）</title>
      <link>https://blog.mosuke.tech/entry/2022/05/15/admission-webhook-1/</link>
      <pubDate>Sun, 15 May 2022 18:38:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/05/15/admission-webhook-1/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
今回はKubernetesの拡張する仕組みの一つであるAdmission Webhookをスクラッチで作ることで、その仕組や作り方を理解しようというものです。自分自身はじめて試みて詰まったところなど多数あったので、その整理も兼ねて書きます。
いままで、ドキュメントや文献を読んで、Admission webhookというものの存在やなんとなくの仕組みは理解しているつもりでした。一方で、実際に作ってみると見えていなかった要素もわかってきました。&lt;/p&gt;
&lt;p&gt;Kubernetesを運用すると、業務に合わせた機能拡張はほぼ必須と言っても過言ではなく、一度自分の手で作っていくことはとても有益と思います。&lt;/p&gt;
&lt;p&gt;後編はこちら。&lt;/p&gt;
&lt;div class=&#34;belg-link row&#34;&gt;
  &lt;div class=&#34;belg-left col-md-2 d-none d-md-block&#34;&gt;
    &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/05/15/admission-webhook-2/&#34; target=&#34;_blank&#34;&gt;
      &lt;img class=&#34;belg-site-image&#34; src=&#34;https://blog.mosuke.tech/image/logo.png&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;belg-right col-md-10&#34;&gt;
  &lt;div class=&#34;belg-title&#34;&gt;
      &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/05/15/admission-webhook-2/&#34; target=&#34;_blank&#34;&gt;Admission Webhookを作って遊んで、その仕組みを理解しよう（動作編） · Goldstine研究所&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;belg-description&#34;&gt;Kubernetesの運用には欠かせなくなってくる拡張。そのひとつであるAdmission Webhookを作って遊んでみるというものです。本記事は実際に作って動かす動作編です。&lt;/div&gt;
    &lt;div class=&#34;belg-site&#34;&gt;
      &lt;img src=&#34;https://blog.mosuke.tech/image/favicon.ico&#34; class=&#34;belg-site-icon&#34;&gt;
      &lt;span class=&#34;belg-site-name&#34;&gt;Goldstine研究所&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ITエンジニアが副業に挑戦してみた感想をまとめるよ</title>
      <link>https://blog.mosuke.tech/entry/2022/04/18/first-side-work/</link>
      <pubDate>Mon, 18 Apr 2022 18:37:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/04/18/first-side-work/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
今回はひさびさにキャリア系のことについて書いていきたいと思います。
3月いっぱいで9ヶ月ほど続けていた副業が一段落したので、その感想やお金の話などをお知らせしたいと思います。
この30年間賃金の上がらない日本をなんとかすべく、副業で所得を増やす人が増えてほしいです。
とはいえ、いいことばかりでもないので率直な感想や意見を書き残していこうと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Goならわかるシステムプログラミング：第6章 TCPソケットとHTTPの実装</title>
      <link>https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-6/</link>
      <pubDate>Tue, 01 Mar 2022 23:40:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-6/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
「Goならわかるシステムプログラミング」を読み進めています。とてもいい本です。
読み進めながら実験したことなどを書いていきます。同じ本を読んでいる人の参考（寄り道？）になればと思います。
今回は「TCPソケットとHTTPの実装」です。&lt;/p&gt;
&lt;div class=&#34;belg-link row&#34;&gt;
  &lt;div class=&#34;belg-right col-md-12&#34;&gt;
  &lt;div class=&#34;belg-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E7%AC%AC2%E7%89%88-%E6%B8%8B%E5%B7%9D%E3%82%88%E3%81%97%E3%81%8D/dp/4908686122?keywords=go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0&amp;amp;qid=1649828170&amp;amp;sprefix=go%E3%81%AA%E3%82%89,aps,295&amp;amp;sr=8-1&amp;amp;linkCode=sl1&amp;amp;tag=mosuke5-22&amp;amp;linkId=657574facc6fad628c327647d446818a&amp;amp;language=ja_JP&amp;amp;ref_=as_li_ss_tl&#34; target=&#34;_blank&#34;&gt;Goならわかるシステムプログラミング 第2版 | 渋川よしき, ごっちん |本 | 通販 | Amazon&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;belg-description&#34;&gt;Amazonで渋川よしき, ごっちんのGoならわかるシステムプログラミング 第2版。アマゾンならポイント還元本が多数。渋川よしき, ごっちん作品ほか、お急ぎ便対象商品は当日お届けも可能。またGoならわかるシステムプログラミング 第2版もアマゾン配送商品なら通常配送無料。&lt;/div&gt;
    &lt;div class=&#34;belg-site&#34;&gt;
      &lt;span class=&#34;belg-site-name&#34;&gt;www.amazon.co.jp&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h5&gt;Goならわかるシステムプログラミングの学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-2/&#34;&gt;第2章 io.Writer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-3/&#34;&gt;第3章 io.Reader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-4/&#34;&gt;第4章 チャネル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-5/&#34;&gt;第5章 システムコール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-6/&#34;&gt;第6章 TCPソケットとHTTPの実装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Coming soon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>Goならわかるシステムプログラミング：第5章 システムコール</title>
      <link>https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-5/</link>
      <pubDate>Tue, 01 Mar 2022 23:39:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-5/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
「Goならわかるシステムプログラミング」を読み進めています。とてもいい本です。
読み進めながら実験していることを書いていきます。同じ本を読んでいる人の参考（寄り道？）になればと思います。
今回は「システムコール」です。&lt;/p&gt;
&lt;div class=&#34;belg-link row&#34;&gt;
  &lt;div class=&#34;belg-right col-md-12&#34;&gt;
  &lt;div class=&#34;belg-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E7%AC%AC2%E7%89%88-%E6%B8%8B%E5%B7%9D%E3%82%88%E3%81%97%E3%81%8D/dp/4908686122?keywords=go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0&amp;amp;qid=1649828170&amp;amp;sprefix=go%E3%81%AA%E3%82%89,aps,295&amp;amp;sr=8-1&amp;amp;linkCode=sl1&amp;amp;tag=mosuke5-22&amp;amp;linkId=657574facc6fad628c327647d446818a&amp;amp;language=ja_JP&amp;amp;ref_=as_li_ss_tl&#34; target=&#34;_blank&#34;&gt;Goならわかるシステムプログラミング 第2版 | 渋川よしき, ごっちん |本 | 通販 | Amazon&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;belg-description&#34;&gt;Amazonで渋川よしき, ごっちんのGoならわかるシステムプログラミング 第2版。アマゾンならポイント還元本が多数。渋川よしき, ごっちん作品ほか、お急ぎ便対象商品は当日お届けも可能。またGoならわかるシステムプログラミング 第2版もアマゾン配送商品なら通常配送無料。&lt;/div&gt;
    &lt;div class=&#34;belg-site&#34;&gt;
      &lt;span class=&#34;belg-site-name&#34;&gt;www.amazon.co.jp&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h5&gt;Goならわかるシステムプログラミングの学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-2/&#34;&gt;第2章 io.Writer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-3/&#34;&gt;第3章 io.Reader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-4/&#34;&gt;第4章 チャネル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-5/&#34;&gt;第5章 システムコール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-6/&#34;&gt;第6章 TCPソケットとHTTPの実装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Coming soon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>Goならわかるシステムプログラミング：第4章 チャネル</title>
      <link>https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-4/</link>
      <pubDate>Tue, 01 Mar 2022 23:38:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-4/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
「Goならわかるシステムプログラミング」を読み進めています。とてもいい本です。
読み進めながら実験していることを書いていきます。同じ本を読んでいる人の参考（寄り道？）になればと思います。
今回は「低レベルアクセスへの入り口3：チャネル」です。&lt;/p&gt;
&lt;div class=&#34;belg-link row&#34;&gt;
  &lt;div class=&#34;belg-right col-md-12&#34;&gt;
  &lt;div class=&#34;belg-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E7%AC%AC2%E7%89%88-%E6%B8%8B%E5%B7%9D%E3%82%88%E3%81%97%E3%81%8D/dp/4908686122?keywords=go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0&amp;amp;qid=1649828170&amp;amp;sprefix=go%E3%81%AA%E3%82%89,aps,295&amp;amp;sr=8-1&amp;amp;linkCode=sl1&amp;amp;tag=mosuke5-22&amp;amp;linkId=657574facc6fad628c327647d446818a&amp;amp;language=ja_JP&amp;amp;ref_=as_li_ss_tl&#34; target=&#34;_blank&#34;&gt;Goならわかるシステムプログラミング 第2版 | 渋川よしき, ごっちん |本 | 通販 | Amazon&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;belg-description&#34;&gt;Amazonで渋川よしき, ごっちんのGoならわかるシステムプログラミング 第2版。アマゾンならポイント還元本が多数。渋川よしき, ごっちん作品ほか、お急ぎ便対象商品は当日お届けも可能。またGoならわかるシステムプログラミング 第2版もアマゾン配送商品なら通常配送無料。&lt;/div&gt;
    &lt;div class=&#34;belg-site&#34;&gt;
      &lt;span class=&#34;belg-site-name&#34;&gt;www.amazon.co.jp&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h5&gt;Goならわかるシステムプログラミングの学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-2/&#34;&gt;第2章 io.Writer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-3/&#34;&gt;第3章 io.Reader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-4/&#34;&gt;第4章 チャネル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-5/&#34;&gt;第5章 システムコール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-6/&#34;&gt;第6章 TCPソケットとHTTPの実装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Coming soon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>Goならわかるシステムプログラミング：第3章 io.Reader</title>
      <link>https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-3/</link>
      <pubDate>Tue, 01 Mar 2022 23:37:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-3/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
「Goならわかるシステムプログラミング」を読み進めています。とてもいい本です。
読み進めながら実験していることを書いていきます。同じ本を読んでいる人の参考（寄り道？）になればと思います。
今回は「低レベルアクセスへの入り口2：io.Reader」です。&lt;/p&gt;
&lt;div class=&#34;belg-link row&#34;&gt;
  &lt;div class=&#34;belg-right col-md-12&#34;&gt;
  &lt;div class=&#34;belg-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E7%AC%AC2%E7%89%88-%E6%B8%8B%E5%B7%9D%E3%82%88%E3%81%97%E3%81%8D/dp/4908686122?keywords=go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0&amp;amp;qid=1649828170&amp;amp;sprefix=go%E3%81%AA%E3%82%89,aps,295&amp;amp;sr=8-1&amp;amp;linkCode=sl1&amp;amp;tag=mosuke5-22&amp;amp;linkId=657574facc6fad628c327647d446818a&amp;amp;language=ja_JP&amp;amp;ref_=as_li_ss_tl&#34; target=&#34;_blank&#34;&gt;Goならわかるシステムプログラミング 第2版 | 渋川よしき, ごっちん |本 | 通販 | Amazon&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;belg-description&#34;&gt;Amazonで渋川よしき, ごっちんのGoならわかるシステムプログラミング 第2版。アマゾンならポイント還元本が多数。渋川よしき, ごっちん作品ほか、お急ぎ便対象商品は当日お届けも可能。またGoならわかるシステムプログラミング 第2版もアマゾン配送商品なら通常配送無料。&lt;/div&gt;
    &lt;div class=&#34;belg-site&#34;&gt;
      &lt;span class=&#34;belg-site-name&#34;&gt;www.amazon.co.jp&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h5&gt;Goならわかるシステムプログラミングの学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-2/&#34;&gt;第2章 io.Writer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-3/&#34;&gt;第3章 io.Reader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-4/&#34;&gt;第4章 チャネル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-5/&#34;&gt;第5章 システムコール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-6/&#34;&gt;第6章 TCPソケットとHTTPの実装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Coming soon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>Goならわかるシステムプログラミング：第2章 io.Writer</title>
      <link>https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-2/</link>
      <pubDate>Tue, 01 Mar 2022 18:37:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-2/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
「Goならわかるシステムプログラミング」を読み進めています。とてもいい本です。
読み進めながら実験していることを書いていきます。同じ本を読んでいる人の参考（寄り道？）になればと思います。
今回は第2章の「低レベルアクセスへの入り口1：io.Writer」です。&lt;/p&gt;
&lt;div class=&#34;belg-link row&#34;&gt;
  &lt;div class=&#34;belg-right col-md-12&#34;&gt;
  &lt;div class=&#34;belg-title&#34;&gt;
      &lt;a href=&#34;https://www.amazon.co.jp/Go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E7%AC%AC2%E7%89%88-%E6%B8%8B%E5%B7%9D%E3%82%88%E3%81%97%E3%81%8D/dp/4908686122?keywords=go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0&amp;amp;qid=1649828170&amp;amp;sprefix=go%E3%81%AA%E3%82%89,aps,295&amp;amp;sr=8-1&amp;amp;linkCode=sl1&amp;amp;tag=mosuke5-22&amp;amp;linkId=657574facc6fad628c327647d446818a&amp;amp;language=ja_JP&amp;amp;ref_=as_li_ss_tl&#34; target=&#34;_blank&#34;&gt;Goならわかるシステムプログラミング 第2版 | 渋川よしき, ごっちん |本 | 通販 | Amazon&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;belg-description&#34;&gt;Amazonで渋川よしき, ごっちんのGoならわかるシステムプログラミング 第2版。アマゾンならポイント還元本が多数。渋川よしき, ごっちん作品ほか、お急ぎ便対象商品は当日お届けも可能。またGoならわかるシステムプログラミング 第2版もアマゾン配送商品なら通常配送無料。&lt;/div&gt;
    &lt;div class=&#34;belg-site&#34;&gt;
      &lt;span class=&#34;belg-site-name&#34;&gt;www.amazon.co.jp&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h5&gt;Goならわかるシステムプログラミングの学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-2/&#34;&gt;第2章 io.Writer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-3/&#34;&gt;第3章 io.Reader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-4/&#34;&gt;第4章 チャネル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-5/&#34;&gt;第5章 システムコール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2022/04/13/go-system-programming-6/&#34;&gt;第6章 TCPソケットとHTTPの実装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Coming soon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る</title>
      <link>https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/</link>
      <pubDate>Tue, 01 Mar 2022 18:37:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
最近Tektonをより実践に向けて検証することが多くなってきました。
今回は、ビルドの高速化に役立つキャッシュの方法について紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Argo CD、外部クラスタへのデプロイと認証の仕組み</title>
      <link>https://blog.mosuke.tech/entry/2022/02/08/argocd-deploy-to-external-cluster/</link>
      <pubDate>Tue, 08 Feb 2022 14:16:45 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/02/08/argocd-deploy-to-external-cluster/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Argo CD学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/13/argocd/&#34;&gt;Argo CD、Operatorでのインストールと主要コンポーネントの解説&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/06/argocd-application/&#34;&gt;Argo CD、Kustomizeを使った複数環境へのデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/06/argocd-sync-action/&#34;&gt;Argo CD、Syncの実行方法やタイミングについての検討&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/06/12/argocd-resourcehooks/&#34;&gt;Argo CD、Resource Hooksを使ってデプロイを高度化する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/02/08/argocd-deploy-to-external-cluster/&#34;&gt;Argo CD、外部クラスタへのデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;関連記事: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
今回はArgo CDを用いて、外部のKubernetesクラスタへアプリケーションをデプロイすることについて動きを確認します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて</title>
      <link>https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/</link>
      <pubDate>Mon, 24 Jan 2022 10:52:13 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
このシリーズの中で&lt;a href=&#34;https://hub.tekton.dev/tekton/task/git-clone&#34;&gt;git-clone&lt;/a&gt;タスクを利用してきましたが、いままではパブリックなレポジトリを対象に扱ってきましたが、実運用では当然ながらプライベートレポジトリを活用するはずです。
プライベートレポジトリを使っていくにはどうしたらいいのか、その場合の挙動などを確認しておきます。&lt;/p&gt;
&lt;p&gt;Tektonパイプラインで、git-cloneタスクを使う場合、git-cloneタスクに実装される &lt;code&gt;ssh-directory&lt;/code&gt; 設定を使うか、Tektonで用意した認証の仕組みを使うかのどちらかになると思います。それぞれの方法について見ていきましょう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenShift、プロジェクトスコープのノードセレクターの挙動確認</title>
      <link>https://blog.mosuke.tech/entry/2022/01/20/openshift-project-scoped-nodeselector/</link>
      <pubDate>Thu, 20 Jan 2022 15:07:28 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2022/01/20/openshift-project-scoped-nodeselector/</guid>
      <description>&lt;p&gt;あけましておめでとうございます。もーすけです。&lt;br&gt;
今年もよろしくおねがいします。&lt;/p&gt;
&lt;p&gt;OpenShiftのプロジェクトスコープのノードセレクターに関する雑多なメモです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「己」2021年振り返り</title>
      <link>https://blog.mosuke.tech/entry/2021/12/31/reflection/</link>
      <pubDate>Fri, 31 Dec 2021 00:15:22 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/12/31/reflection/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
毎年恒例、年末の振り返りをしていこうと思います。過去の振り返りについては以下を参照してください。
今年は「己」を一文字にしました。「己（おのれ）」「自己」といった意味からとっています。その理由は、後述しますが、仕事やなにかのスキルよりも自分の生活や内面とよく向き合った1年のように感じたからです。&lt;br&gt;
振り返ってみると、なんだか出来事としてはいろいろあったのでつらつらと書き残します。&lt;/p&gt;
&lt;h4 id=&#34;過去の振り返りブログ&#34;&gt;過去の振り返りブログ&lt;/h4&gt;
&lt;p&gt;気になる過去の振り返りはこちらです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2014年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2015/01/01/161826/&#34;&gt;2014年を思い返して&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2015年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2015/12/28/150042/&#34;&gt;2015年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2016年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2016/12/25/142744/&#34;&gt;「嵐」2016年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2017年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2017/12/29/reflection/&#34;&gt;「進」2017年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2018/12/31/reflection/&#34;&gt;「策」2018年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2019/12/31/reflection/&#34;&gt;「捉」2019年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2020年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/12/31/reflection/&#34;&gt;「絆」2020年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>OpenShift、Routerシャーディングを使って用途ごとにアクセス経路を分ける</title>
      <link>https://blog.mosuke.tech/entry/2021/12/28/openshift-router-sharding/</link>
      <pubDate>Tue, 28 Dec 2021 17:24:16 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/12/28/openshift-router-sharding/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日もOpenShift関連のTipsについてアウトプットします。
Ingress Controller(Router)のシャーディング（分割）についてです。
半分は自分の備忘録ではありますが、同じような境遇の方の参考になればと思います。&lt;/p&gt;
&lt;p&gt;本ブログでは、OpenShift 4.9 on AWSの環境を用いていますが、オンプレミスなど他の環境でも活用できます。もちろんAWS環境とオンプレミス環境では若干Ingressの実装に差はでますが、大きくは変わらないと思います。&lt;/p&gt;
&lt;p&gt;※いろいろまだ書き残したことがあるので随時更新します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenShift、送信元IPアドレスで制限がかかった環境でのIPIインストールの注意事項</title>
      <link>https://blog.mosuke.tech/entry/2021/12/22/openshift-ipi-limited-sourceip/</link>
      <pubDate>Wed, 22 Dec 2021 15:55:22 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/12/22/openshift-ipi-limited-sourceip/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
最近ハマったOpenShiftのネタを雑にアウトプットします。
送信元IPアドレスでAWSリソース操作に制限がかけられている環境での、IPI方式を用いたOpenShiftを構築する際の注意事項です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「OpenShift徹底入門」という書籍を執筆しました</title>
      <link>https://blog.mosuke.tech/entry/2021/12/20/openshift-tettei-nyumon/</link>
      <pubDate>Mon, 20 Dec 2021 21:32:02 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/12/20/openshift-tettei-nyumon/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
この度「&lt;a href=&#34;https://amzn.to/3Ekifri&#34; target=&#34;_blank&#34;&gt;OpenShift徹底入門&lt;/a&gt;」というOpenShiftの書籍を執筆しましたのでお知らせします。
2022年1月19日発売です。ブログ執筆時点では予約段階ですが、ぜひぜひご購入ください！&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;ついに「OpenShift徹底入門」予約開始しました〜！自分も何章か執筆しました。書き始めてから約1年で発売なので、長かった！がんばったと思います😃 &lt;a href=&#34;https://t.co/Cgfe6hn3Z5&#34;&gt;https://t.co/Cgfe6hn3Z5&lt;/a&gt;&lt;/p&gt;&amp;mdash; もーすけ (@mosuke5) &lt;a href=&#34;https://twitter.com/mosuke5/status/1461257300149104642?ref_src=twsrc%5Etfw&#34;&gt;November 18, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes環境についてTerratestでテストを書く</title>
      <link>https://blog.mosuke.tech/entry/2021/10/28/kubernetes-test-by-terratest/</link>
      <pubDate>Thu, 28 Oct 2021 23:11:43 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/10/28/kubernetes-test-by-terratest/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
今回は&lt;a href=&#34;https://github.com/gruntwork-io/terratest&#34; target=&#34;_blank&#34;&gt;Terratest&lt;/a&gt; を用いたKubernetes環境のテストについて検討します。&lt;/p&gt;
&lt;p&gt;TerratestはGruntwork.ioが作成しているインフラのテスティングソフトウェアです。
もともとは、Terraformで作成したクラウド環境のテストとして発達がしましたが、いまの時代となってKubernetes環境やコンテナイメージもテストできるようになっています。&lt;/p&gt;
&lt;p&gt;Kubernetesマニフェストにより、宣言的にインフラ環境を表現できるようになってきているととはいえ、その結果が期待通りに動作しているのかは日々の悩みのタネであることはかわりません。
Terratestがこの悩みを解消するのにイケてそうなので調査してみます。&lt;/p&gt;
&lt;p&gt;かつて仮想サーバでアプリケーションを運用している時代に、Serverspecを用いてテスト駆動のインフラ構築を行っていてとても気持ちがよかったので、そのレイヤーが移ってきているとも考えられます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alibaba Cloud、Container Registryのビルドを中国外で行う意味</title>
      <link>https://blog.mosuke.tech/entry/2021/09/17/ali-container-registry-build/</link>
      <pubDate>Fri, 17 Sep 2021 17:21:43 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/09/17/ali-container-registry-build/</guid>
      <description>&lt;p&gt;もーすけです。&lt;br&gt;
本日は、Alibaba CloudのContainer Registryのビルド機能についてのナレッジをためていきます。
前回も書きましたが、Serverless Kubernetesの構築を最近行っており関連のトピックについて書く頻度が増えそうです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alibaba Cloud、Serverless KubernetesのマルチAZ対応について</title>
      <link>https://blog.mosuke.tech/entry/2021/09/12/ask-multiaz/</link>
      <pubDate>Sun, 12 Sep 2021 17:27:08 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/09/12/ask-multiaz/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日は、Alibaba CloudのServerless Kubernetes（ASK）のマルチAZ対応について、ナレッジをためていきます。
前回も書きましたが、Serverless Kubernetesの構築を最近行っており関連のトピックについて書く頻度が増えそうです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubeletのログ管理を追ってみる</title>
      <link>https://blog.mosuke.tech/entry/2021/09/08/kubelet-log-management/</link>
      <pubDate>Wed, 08 Sep 2021 10:36:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/09/08/kubelet-log-management/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
今回はKubeletのログ管理について調べたことを残します。
Kubernetesにおけるログ管理については以前もブログを書いてきましたが、どちらかというとアプリ目線でのことで、実際のところKubeletがどうログ管理しているかよくわかっていなかったので調査してみました。
きっかけは、KubernetesのPodのログはローテートされるのか？ずっと標準出力にログを吐き続けたらストレージはどうなるのか？そのあたり気になったことです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alibaba Cloud, Kubernetesのイメージキャッシュ機能を検証する</title>
      <link>https://blog.mosuke.tech/entry/2021/09/04/alibabacloud-image-cache/</link>
      <pubDate>Sat, 04 Sep 2021 16:11:27 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/09/04/alibabacloud-image-cache/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
Alibaba CloudのServerless Kubernetesを使ったシステム構築に取り組んでいて、Alibaba Cloud固有のKubernetesまわりの仕組みについて検証したことをまとめていきます。
今回は、ImageCacheについてです。&lt;/p&gt;
&lt;p&gt;そもそも、Serverless Kubernetesって？という方は、少し古いですが以下を参照ください。（アップデートしたい…）
一言でいうとノードレスのKubernetesで、EKS on Fargateなどに近い仕組みです。&lt;/p&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/7YPxzJxZzDfOlL&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/mosuke5/alibaba-cloud-serverless-kubernetes&#34; title=&#34;Alibaba Cloud Serverless Kubernetes 徹底解説&#34; target=&#34;_blank&#34;&gt;Alibaba Cloud Serverless Kubernetes 徹底解説&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;https://www.slideshare.net/mosuke5&#34; target=&#34;_blank&#34;&gt;Shinya Mori (@mosuke5)&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;</description>
    </item>
    
    <item>
      <title>OpenShift、スタティックルートの追加方法と確認事項について</title>
      <link>https://blog.mosuke.tech/entry/2021/08/31/openshift-add-static-route/</link>
      <pubDate>Tue, 31 Aug 2021 14:46:13 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/08/31/openshift-add-static-route/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
あまりここのブログネタにしないようなトピックですが、ちょっと機会があって軽くまとめておこうと思います。
OpenShiftのノードへスタティックルート（static route、ルーティング設定）を追加する方法と関連することがらについてです。&lt;/p&gt;
&lt;p&gt;解決方法だけいえば、以下のSolutionがそのまま活用できますが、それに伴ってなにがおこるのか？なにを確認したらよいのか？と関連付けたかったためにこのメモを残します。&lt;/p&gt;
&lt;div class=&#34;belg-link row&#34;&gt;
  &lt;div class=&#34;belg-left col-md-2 d-none d-md-block&#34;&gt;
    &lt;a href=&#34;https://access.redhat.com/solutions/5876771&#34; target=&#34;_blank&#34;&gt;
      &lt;img class=&#34;belg-site-image&#34; src=&#34;https://access.redhat.com/webassets/avalon/g/shadowman-200.png&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;belg-right col-md-10&#34;&gt;
    &lt;div class=&#34;belg-title&#34;&gt;
      &lt;a href=&#34;https://access.redhat.com/solutions/5876771&#34; target=&#34;_blank&#34;&gt;Create static routes post cluster installation for a specific worker pool - Red Hat Customer Portal&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;belg-description&#34;&gt;How could a user include static route on the node running with two interfaces? The static route would be required for the machine to communicate with the machines in the private network, can this be added to the rhcos nodes post cluster installation?&lt;/div&gt;
    &lt;div class=&#34;belg-site&#34;&gt;
      &lt;img src=&#34;https://access.redhat.com/webassets/avalon/g/favicon.ico&#34; class=&#34;belg-site-icon&#34;&gt;
      &lt;span class=&#34;belg-site-name&#34;&gt;Red Hat Customer Portal&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes、ExternalName Serviceの検証と利用時の注意事項</title>
      <link>https://blog.mosuke.tech/entry/2021/08/26/kubernetes-externalname-service/</link>
      <pubDate>Thu, 26 Aug 2021 15:50:25 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/08/26/kubernetes-externalname-service/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
いろいろとKubernetesナレッジは溜まってきているのですが、なかなかアウトプットができていないこの頃です。本日は、KubernetesのServiceタイプのひとつである「ExternalName」について解説したいと思います。
基礎的な内容ではありますが、よく説明することが多かったのでまとめます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SREは何を目指せばいいか？Google流から大事なことを学ぼう。</title>
      <link>https://blog.mosuke.tech/entry/2021/07/21/sre/</link>
      <pubDate>Wed, 21 Jul 2021 17:48:41 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/07/21/sre/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
今回はしばらくの間、積み読となっていた「&lt;a href=&#34;https://amzn.to/2TpNDTD&#34; target=&#34;_blank&#34;&gt;SRE サイトリライアビリティエンジニアリング&lt;/a&gt;」を読んだので、SREの生みの親が考えるその思想まとめます。（なんと購入したのは2018年3月で、3年4か月越しにまともに読むことになりました汗）&lt;/p&gt;
&lt;p&gt;いまや、多くの企業でSREを名乗る職種がでています。
しかし、名前を変えただけのことも多くあると思っているので、SREの真髄はどこにあるのか？我々はなにを考えなければないらないのか？探っていきたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alibaba CloudのALBとは？AWSのALBとの違い</title>
      <link>https://blog.mosuke.tech/entry/2021/07/03/ali-alb/</link>
      <pubDate>Sat, 03 Jul 2021 19:50:03 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/07/03/ali-alb/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
ひさびさにAlibaba Cloud関連の情報を更新します。
2021年1月頃にALB（Application Load Balancer）がリリースしました。本日は、ALBについて、そしてCLB（Classic　Load Balancer、従来のSLB）はかなり高機能だったのでどう違うのかなどみていきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Argo CD、Resource Hooksを使ってデプロイを高度化する</title>
      <link>https://blog.mosuke.tech/entry/2021/06/12/argocd-resourcehooks/</link>
      <pubDate>Sat, 12 Jun 2021 18:24:10 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/06/12/argocd-resourcehooks/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Argo CD学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/13/argocd/&#34;&gt;Argo CD、Operatorでのインストールと主要コンポーネントの解説&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/06/argocd-application/&#34;&gt;Argo CD、Kustomizeを使った複数環境へのデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/06/argocd-sync-action/&#34;&gt;Argo CD、Syncの実行方法やタイミングについての検討&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/06/12/argocd-resourcehooks/&#34;&gt;Argo CD、Resource Hooksを使ってデプロイを高度化する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/02/08/argocd-deploy-to-external-cluster/&#34;&gt;Argo CD、外部クラスタへのデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;関連記事: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
Argo CD学習シリーズをやっていきます。
今回は、Argo CDのResource Hooksという仕組みについて解説します。
前回にやったArgo CDのSyncと密接に関連するトピックです。
運用レベルでArgo CDを使っていく場合、避けて通れない内容になってきます。
Argo CDを使った本格運用に向けて学んでいきましょう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「ユニコーン企業のひみつ」を読んで、我々はなにをすればいいのだろうか？</title>
      <link>https://blog.mosuke.tech/entry/2021/06/06/competing-with-unicorns/</link>
      <pubDate>Sun, 06 Jun 2021 18:40:35 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/06/06/competing-with-unicorns/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日は、2021年4月に発売された「&lt;a href=&#34;https://amzn.to/3fTPYyA&#34; target=&#34;_blank&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;」を読みましたので、書籍の内容や自分なりの考えをまとめてみます。
現代となっては、アメリカのGAFAをはじめとしたテック企業のビジネス脅威を感じないことはないと思います。
彼らに対抗するため、日本企業はどんなふうに戦えばいいのか？そんなヒントになる本です。&lt;/p&gt;
&lt;p&gt;この本は発売と同時に多くの方がレビューを書いているので、ぜひ他の人の書評もたくさん読んでみてください。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>本ブログが暗号通貨BATの支援受付をサポートしました</title>
      <link>https://blog.mosuke.tech/entry/2021/05/18/support-brave-bat/</link>
      <pubDate>Tue, 18 May 2021 22:42:16 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/05/18/support-brave-bat/</guid>
      <description>&lt;p&gt;こんちには、もーすけです。&lt;br&gt;
本日は、ブログというよりお知らせとなります。&lt;/p&gt;
&lt;p&gt;2021年5月18日より、Goldstine研究所では、&lt;a href=&#34;https://brave.com/ja/&#34;&gt;Brave社&lt;/a&gt;が展開する「Brave認証クリエイター」に参加しました。
それにより、暗号通貨BAT（Basic Attention Token）での支援チップの受付ができるようになりました。Braveブラウザを利用している人は、少しでも本ブログが役に立ったなと思ったらぜひチップを送ってください（笑）ますます頑張っていこうと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討</title>
      <link>https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd/</link>
      <pubDate>Fri, 07 May 2021 15:40:04 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
今回は、クラウドネイティブな環境でのCI/CDツールとして有名なTektonとArgo CD、これらの組み合わせした場合のパイプラインフローを検討してみます。どのように使い分けていくことができるのか考えていきたいと思います。
本記事はTekton学習シリーズとして行ったわけではないですが、関連トピックとして番外編扱いにしておきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>第3回: Argo CD、Syncの実行方法やタイミングについての検討</title>
      <link>https://blog.mosuke.tech/entry/2021/05/06/argocd-sync-action/</link>
      <pubDate>Thu, 06 May 2021 13:11:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/05/06/argocd-sync-action/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Argo CD学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/13/argocd/&#34;&gt;Argo CD、Operatorでのインストールと主要コンポーネントの解説&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/06/argocd-application/&#34;&gt;Argo CD、Kustomizeを使った複数環境へのデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/06/argocd-sync-action/&#34;&gt;Argo CD、Syncの実行方法やタイミングについての検討&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/06/12/argocd-resourcehooks/&#34;&gt;Argo CD、Resource Hooksを使ってデプロイを高度化する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/02/08/argocd-deploy-to-external-cluster/&#34;&gt;Argo CD、外部クラスタへのデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;関連記事: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
Argo CD学習シリーズどんどんやっていきます。
今回は、Argo CDがアプリケーションをSync（同期）するタイミングに関する検討です。
軽めの話題ですが、実運用を検討する上で重要になるのでしっかりおさえておきましょう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>第2回: Argo CD、Kustomizeを使った複数環境へのデプロイ</title>
      <link>https://blog.mosuke.tech/entry/2021/05/06/argocd-application/</link>
      <pubDate>Thu, 06 May 2021 09:46:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/05/06/argocd-application/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Argo CD学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/13/argocd/&#34;&gt;Argo CD、Operatorでのインストールと主要コンポーネントの解説&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/06/argocd-application/&#34;&gt;Argo CD、Kustomizeを使った複数環境へのデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/06/argocd-sync-action/&#34;&gt;Argo CD、Syncの実行方法やタイミングについての検討&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/06/12/argocd-resourcehooks/&#34;&gt;Argo CD、Resource Hooksを使ってデプロイを高度化する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/02/08/argocd-deploy-to-external-cluster/&#34;&gt;Argo CD、外部クラスタへのデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;関連記事: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。
Argo CD学習シリーズの続きを行っていきたいと思います。
前回はチュートリアル的に動かしてみるところまで行いましたが、もう少し細かなアプリケーションの設定を見ていきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenShiftの新機能、ユーザ定義プロジェクトの監視ってどこまでできる？</title>
      <link>https://blog.mosuke.tech/entry/2021/04/24/openshift-monitoring-your-own-service/</link>
      <pubDate>Sat, 24 Apr 2021 14:05:54 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/04/24/openshift-monitoring-your-own-service/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日は、OpenShift 4.6から新規に追加された「ユーザ定義プロジェクトの監視機能 (Monitoring for user-defined project)」ってなんなのか？どこまでできるのか？と気になってので検証してみます。正式な機能名があるわけではなさそうなので、本ブログでは「ユーザ定義プロジェクトの監視」ということにしておきます。&lt;/p&gt;
&lt;p&gt;ちなみに本ブログを読みすすめる上で、&lt;code&gt;$ コマンド&lt;/code&gt; はクラスタ管理者の操作、&lt;code&gt;% コマンド&lt;/code&gt; はユーザ（開発者）の操作として記述しているので注意してください。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubernetesのロギングパターンは結局どれを採用したらいいの？</title>
      <link>https://blog.mosuke.tech/entry/2021/04/18/kubernetes-application-logging/</link>
      <pubDate>Sun, 18 Apr 2021 14:44:58 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/04/18/kubernetes-application-logging/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日は、Kubernetes上で動くアプリケーションのロギングについて考えていきたいと思います。
以前に&lt;a href=&#34;https://blog.mosuke.tech/entry/2019/07/12/sidecar-fluentd-to-cloudwatchlogs/&#34;&gt;「Sidecar方式のFluentdでCloudWatch logsへログを集約することについての検討」&lt;/a&gt;という記事を書いたのですが、この記事では、ロギングパターンのひとつであるSidecar方式（サイドカー方式）の検討についてのみ触れており、「で、結局どうしたらいいの？」という部分がたりなかったためです。&lt;br&gt;
本記事では、その他の方式も含めて、どれを採用したらいいのか？という考え方についてまとめていきたいとおもいます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>第1回: Argo CD、Operatorでのインストールと主要コンポーネントの解説</title>
      <link>https://blog.mosuke.tech/entry/2021/04/13/argocd/</link>
      <pubDate>Tue, 13 Apr 2021 10:21:39 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/04/13/argocd/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Argo CD学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/13/argocd/&#34;&gt;Argo CD、Operatorでのインストールと主要コンポーネントの解説&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/06/argocd-application/&#34;&gt;Argo CD、Kustomizeを使った複数環境へのデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/06/argocd-sync-action/&#34;&gt;Argo CD、Syncの実行方法やタイミングについての検討&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/06/12/argocd-resourcehooks/&#34;&gt;Argo CD、Resource Hooksを使ってデプロイを高度化する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/02/08/argocd-deploy-to-external-cluster/&#34;&gt;Argo CD、外部クラスタへのデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;関連記事: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
前回の「Tekton学習シリーズ」に続きArgo CD学習シリーズをやっていきます。
わたしは、Argo CDを何年か前に検証で確認はしていたのですが、だいぶ忘れてしまったい、改めてまとめなおしたいと思っています。
初回は、インストールと概念編です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、interceptorを使ってイベントトリガーを進化させる</title>
      <link>https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/</link>
      <pubDate>Thu, 08 Apr 2021 21:47:39 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日もTekton学習シリーズをやっていきます。今回も前回の内容の続きになるので、はじめてTekton Triggersをさわるよという方は第10回の記事をやっておくとよいです。&lt;/p&gt;
&lt;p&gt;前回、クラスタの外部からcurlを用いてHTTPリクエストを発行して、そのイベントをトリガーにパイプラインを実行しました。実運用では、GitレポジトリからのWebhookでパイプラインを動かしたいですよね？&lt;br&gt;
しかし、前回のままでは認証も実装しておらず、そのまま外部公開してしまうのは危険な状態です。というわけで、interceptorという機能を使って、認証や特定のイベントのみにパイプラインを実行する方法などをみていきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、トリガーを使って外部イベントでパイプラインを実行する</title>
      <link>https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/</link>
      <pubDate>Tue, 06 Apr 2021 17:20:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
今回も、Tekton学習シリーズをやっていきます。Tekton Triggersを用いて、WebhookイベントからTektonパイプラインを実行する方法をみていきます。
利用するパイプラインは前回の第9回のものを利用しますので、まだやってない人は第9回を事前に済ませておきましょう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、アプリケーションをKubernetesクラスタへデプロイする</title>
      <link>https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/</link>
      <pubDate>Mon, 22 Mar 2021 21:38:02 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。本日もTekton学習シリーズやっていきます。&lt;br&gt;
第9回目は、ついにアプリケーションをKubernetesクラスタにデプロイします。
今回は第8回の続きになりますので、まだ第8回を実施していない人は先にみておいてください。
前回は、GitHubのレポジトリからソースコードをダウンロードしてきて、コンテナイメージをビルドし、イメージレジストリに格納するところまでやりました。
今回は、そのビルドしたイメージをKubernetesクラスタにデプロイします。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、ClusterTaskとTekton Hubを理解する</title>
      <link>https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/</link>
      <pubDate>Sun, 21 Mar 2021 17:24:57 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
Tekton学習シリーズ、どんどん進めていきましょう。第8回は、ClusterTaskとTekton Hubについてです。
今までの内容より軽い内容になっています。これまで学習を進めてきた方ならすぐに理解できるはずです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）</title>
      <link>https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/</link>
      <pubDate>Sat, 20 Mar 2021 00:36:10 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日もTekton学習フェーズやっていきます。第7回では、カタログの活用とTektonを使っていく上で必ず通るであろうイメージビルドについてあわせてやっていきたいと思います。
本日のゴールは、Tektonが公開しているカタログ（公開Task）を用いて、任意のGitレポジトリにあるDockerfileをビルドしてレジストリにPushするまです。ではよろしくおねがいします。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する</title>
      <link>https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/</link>
      <pubDate>Wed, 17 Mar 2021 17:17:12 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日もTekton学習シリーズやっていきましょう。第6回はPipelineでWorkspaceを利用してTask間でデータを連携する方法についてです。
あるTaskで作ったデータを別のTaskで利用することはパイプラインを作っていく上で非常に重要です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>squidを使ってプロキシ環境の再現検証に活用する</title>
      <link>https://blog.mosuke.tech/entry/2021/03/16/squid/</link>
      <pubDate>Tue, 16 Mar 2021 19:05:38 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/16/squid/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。  squidを使った検証は年に1回くらいは出てくるのですが、やるたびに忘れるのでメモします。
ちなみに、squidを使う理由としてはいろいろなのですが、だいたい以下のような理由です。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顧客のシステムを使う際にIPアドレス制限がかかっており、特定のサーバからアクセスさせたい&lt;/li&gt;
&lt;li&gt;顧客のネットワーク環境ではプロキシを利用しており、それゆえに環境を再現するためにプロキシを立てたい&lt;/li&gt;
&lt;li&gt;システムにアクセスするのにクラウドのリージョン間専用線を通して接続したい&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Kubernetesのノード障害時のPodの動きについての検証</title>
      <link>https://blog.mosuke.tech/entry/2021/03/11/kubernetes-node-down/</link>
      <pubDate>Thu, 11 Mar 2021 00:13:19 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/11/kubernetes-node-down/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日はKubernetesのノード障害が起きたときのPodの挙動について確認します。
いままで、ノード障害が起きたときのPodの挙動、スケジューリングについて誤った認識をしていました。
お恥ずかしい限りなのですが、同じような誤った認識をしているかたに向けて確認したことを解説します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、TaskをまとめてPipelineとして実行する</title>
      <link>https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/</link>
      <pubDate>Sun, 07 Mar 2021 23:13:07 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;はい、もーすけです。&lt;br&gt;
Tekton学習シリーズ第5回をやっていきます。
本日はいよいよTaskをまとめPipelineをやっていきます。Taskの仕様を理解できていればおそらくそこまで難しくないと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、TaskでPipelineResouceを利用したときの挙動を確認する</title>
      <link>https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/</link>
      <pubDate>Sun, 07 Mar 2021 15:27:50 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日もTekton学習シリーズやっていきます。第4回は、TaskにPipelineResourceを追加してみます。
CIパイプライン内でGitレポジトリのソースコードを扱うことは一般的です。その方法や、設定するとなにが起きるのか見ていきましょう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、Tasksにパラメータを設定する</title>
      <link>https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/</link>
      <pubDate>Sat, 06 Mar 2021 22:43:43 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
今回はTektonのTaskにパラメータを引き渡す方法についてみていきます。
前回までは、Taskにべた書きしたコマンドを実行しましたが、パラメータ指定し変数化する方法を確認します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、TaskのStepの実行順序について確認する</title>
      <link>https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/</link>
      <pubDate>Sat, 06 Mar 2021 16:34:41 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;前回、TektonのOperatorを使ったインストールについて解説しました。
今回は、もうすこしTaskの動きを確認してみます。具体的には、Task内のStepの役割や、複数のStepがある場合の実行順序の制御方法などについて確認してみます。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34; data-iframely-url=&#34;//cdn.iframe.ly/aQ48OK3&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Redis on Kubernetesの検討ポイントとredis-ha Helm chart</title>
      <link>https://blog.mosuke.tech/entry/2021/03/03/redis-on-kubernetes/</link>
      <pubDate>Wed, 03 Mar 2021 11:40:54 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/03/redis-on-kubernetes/</guid>
      <description>&lt;p&gt;もーすけです。最近は、お金の勉強ばかりしてます。&lt;br&gt;
住宅ローンをきっかけに、いままでやってきた株や投資信託のポートフォリオを見直して、確定申告やら、税金やら。。これまた学びがいのあるジャンルで楽しくて勉強しています。&lt;/p&gt;
&lt;p&gt;今回は、インメモリDBである&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;をKubernetesにデプロイ・運用するための方針や方法にについてまとめます。&lt;br&gt;
いまとなってはRedisを検討することはめずらしくなくなりましたよね。セッションやキャッシュの保管先、ランキングデータの管理などさまざまなところで利用されているかと思います。そんなRedisをKubernetesで使う場合に考えるポイントを簡単に説明します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenShiftでCA証明書を追加することについての検証</title>
      <link>https://blog.mosuke.tech/entry/2021/03/01/openshift-add-user-ca/</link>
      <pubDate>Mon, 01 Mar 2021 18:47:31 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/01/openshift-add-user-ca/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
最近検証したOpenShiftへのCA証明書を追加することについてです。
どういうケースでCA証明書の追加が必要かというと、自己証明書で運用されているレジストリとかプロキシに接続しなければいけないケースなどです。
たとえば以下のようなケースでしょうか。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;非インターネット環境でのOpenShiftのインストールでミラーレジストリを構築した場合（ミラーレジストリの証明書が必要なケース）&lt;/li&gt;
&lt;li&gt;OpenShift外にプライベートのコンテナレジストリを構築していて使っている場合（上とほぼ同義）&lt;/li&gt;
&lt;li&gt;インターネットに出るのにプロキシを経由する必要があり、その証明書が必要な場合&lt;/li&gt;
&lt;li&gt;社内のセキュリティでTLS復号化装置（SSL可視化ソリューションとかよばれるもの）を導入しており、その機器の証明書をインストールしなければならない場合&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;このときの証明書の追加の動きについて確認したので見ていきたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jaegerを使った分散トレーシングの検証 on Kubernetes (1)</title>
      <link>https://blog.mosuke.tech/entry/2021/02/08/jaeger-operator/</link>
      <pubDate>Mon, 08 Feb 2021 17:04:05 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/02/08/jaeger-operator/</guid>
      <description>&lt;p&gt;もーすけです。&lt;br&gt;
過去にDatadogでAPMを少し検証したり、トレーニングの中でJaegerを触ったりしましたが、正直ちゃんとわかっていなかったので、改めてJaegerというか分散トレーシングについて検証してみたいと思います。&lt;/p&gt;
&lt;p&gt;今回はKubernetes上にJaegerを構築するので、&lt;a href=&#34;https://www.jaegertracing.io/docs/1.21/operator/&#34;&gt;Jaeger Operatorをインストール&lt;/a&gt;して利用します。
今回はOpenShiftにて検証していますが、他のKubernetesディストリビューションでも同じように利用可能です。&lt;code&gt;oc&lt;/code&gt; は &lt;code&gt;kubectl&lt;/code&gt; と置き換えて読んでください。
検証環境は下記のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenShift: 4.4&lt;/li&gt;
&lt;li&gt;Jaeger: 1.17&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>新形式のCKAを受験し合格しました。受験の教訓紹介。</title>
      <link>https://blog.mosuke.tech/entry/2021/02/07/cka/</link>
      <pubDate>Sun, 07 Feb 2021 11:57:42 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/02/07/cka/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日は、ついに？ようやく？&lt;a href=&#34;https://training.linuxfoundation.org/ja/certification/certified-kubernetes-administrator-cka/&#34;&gt;CKA（Certified Kubernetes Administorator）&lt;/a&gt;をとりましたのでその報告です。
いまさらのCKA取得に関することなので、CKAとはなんなのか？とかそのあたりについては本ブログでは割愛します。ぜひ他のブログを参照してください。
どちらかというと、個人的なモチベーションや準備したこと、受験に関する教訓（失敗談）などを中心にまとめたいと思います。
1年半ほど前にCKADをとったときのブログは以下です。合わせて読んでみてください。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2019/07/08/ckad/&#34; data-iframely-url=&#34;//cdn.iframe.ly/mmfuBDQ&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes上のアプリケーションをtcpdumpでデバッグする</title>
      <link>https://blog.mosuke.tech/entry/2021/01/31/network-debug-on-containers/</link>
      <pubDate>Sun, 31 Jan 2021 12:10:51 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/01/31/network-debug-on-containers/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。休日はもっぱら住宅購入の検討で忙しいマンです。&lt;br&gt;
さて、本日は、Kubernetesのアプリケーションのデバッグに関して書きます。&lt;/p&gt;
&lt;p&gt;Kubernetesで運用中のアプリケーションの障害対応で、ネットワーク関連のデバッグをしたいことはよくあります。
このブログでは具体的にtcpdumpを取得したいという場面を想定して書きます。
コンテナアプリケーションの開発・運用をしていると、&lt;strong&gt;イメージのサイズを小さく保っておきたい&lt;/strong&gt;と思うはずです。
その理由についてはいろいろとありますが、イメージの展開のスピードを高めることで、デプロイや障害時の復旧を早めるなどが代表的なところです。（関連するトピックとして「&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/07/09/container-image-size/&#34;&gt;コンテナイメージを軽くする方法と、その原理原則を考える&lt;/a&gt;」も読んでみてください。）&lt;/p&gt;
&lt;p&gt;それゆえに、アプリケーションの動作に必要なライブラリ以外は入れないことが多く、デバッグツールを除外しておくことが多いでしょう。
しかし、障害発生時にいざtcpdumpやstrace, ping ,digなどを打ちたいと思ってもインストールされておらず困ることがあります。
そんな場面に遭遇しても焦らないようにあらかじめ対応策を頭に入れて練習しておきましょう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>分散システム構築の良書「データ指向アプリケーションデザイン」を動画で解説する</title>
      <link>https://blog.mosuke.tech/entry/2021/01/24/designing-data-intensive-applications/</link>
      <pubDate>Sun, 24 Jan 2021 22:14:44 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/01/24/designing-data-intensive-applications/</guid>
      <description>&lt;p&gt;あけましておめでとうございます（いまさらｗ）。もーすけです。&lt;br&gt;
最近は&lt;a href=&#34;https://amzn.to/3c3QSXS&#34;&gt;呪術廻戦&lt;/a&gt;にハマっています。ぜひまだ見てない方見てみてください！&lt;/p&gt;
&lt;p&gt;さて本題ですが、新年はじめの投稿はデータ指向アプリケーションデザインという書籍についてです。
最近読んだ中で一番良かった本ではないかと思っています。
実は、勤めている会社内でこの書籍の輪読会を行っていて、自分が12章（最終章）を担当しました。
12章はこの本の一番言いたいことが書いてある章でもあったので、本の魅力を理解してもらうのにもしかして役立つのでは！？と思い、この書籍の紹介しつつ、輪読会で発表した内容を動画で解説していきたいと思います。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%258C%2587%25E5%2590%2591%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3-%25E2%2580%2595%25E4%25BF%25A1%25E9%25A0%25BC%25E6%2580%25A7%25E3%2580%2581%25E6%258B%25A1%25E5%25BC%25B5%25E6%2580%25A7%25E3%2580%2581%25E4%25BF%259D%25E5%25AE%2588%25E6%2580%25A7%25E3%2581%25AE%25E9%25AB%2598%25E3%2581%2584%25E5%2588%2586%25E6%2595%25A3%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25AE%25E5%258E%259F%25E7%2590%2586-Martin-Kleppmann/dp/4873118700/ref=as_li_ss_tl?__mk_ja_JP=%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A&amp;amp;crid=2BPOJXMM3HRBI&amp;amp;dchild=1&amp;amp;keywords=%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%258C%2587%25E5%2590%2591%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3&amp;amp;qid=1609856555&amp;amp;s=books&amp;amp;sprefix=%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%258C%2587%25E5%2590%2591,stripbooks,322&amp;amp;sr=1-1&amp;amp;linkCode=sl1&amp;amp;tag=mosuke5-22&amp;amp;linkId=efa0699587a4390b39b0c36390972d1b&amp;amp;language=ja_JP&#34; data-iframely-url=&#34;//cdn.iframe.ly/wFy8hQ0?iframe=card-small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>「絆」2020年振り返り</title>
      <link>https://blog.mosuke.tech/entry/2020/12/31/reflection/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:44 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/12/31/reflection/</guid>
      <description>&lt;p&gt;@mosuke5です。2020年もあっという間に終わりを迎えてしまいました。&lt;br&gt;
毎年恒例の振り返りブログも7回目となります。今年はコロナで3月からずっと在宅勤務だったので、どこかに行ったという思い出は当然ながら少ないですが、こういう状況だからこそできたことや心の変化などもありました。
そのあたりを振り返りながらまとめてみたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;過去の振り返りブログ&#34;&gt;過去の振り返りブログ&lt;/h2&gt;
&lt;p&gt;気になる過去の振り返りはこちらです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2014年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2015/01/01/161826/&#34;&gt;2014年を思い返して&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2015年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2015/12/28/150042/&#34;&gt;2015年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2016年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2016/12/25/142744/&#34;&gt;「嵐」2016年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2017年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2017/12/29/reflection/&#34;&gt;「進」2017年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2018/12/31/reflection/&#34;&gt;「策」2018年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019年: &lt;a href=&#34;https://blog.mosuke.tech/entry/2019/12/31/reflection/&#34;&gt;「捉」2019年振り返り&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>OpenShift on NVIDIA GPU（導入編）</title>
      <link>https://blog.mosuke.tech/entry/2020/12/17/openshift-on-nvidia-gpu-2/</link>
      <pubDate>Thu, 17 Dec 2020 22:01:20 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/12/17/openshift-on-nvidia-gpu-2/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
今回は前回に続き、OpenShiftにGPUのノードを追加して利用する方法（導入編）として書いていきます。
インストールの細かな方法については英語ですが公式ドキュメントに譲るとして、実行していくにあたってのポイントなどを経験者としてまとめておきます。
概要編につきましては以下をご覧ください。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/12/16/openshift-on-nvidia-gpu/&#34; data-iframely-url=&#34;//cdn.iframe.ly/PbejT6X&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>OpenShift on NVIDIA GPU（概要編）</title>
      <link>https://blog.mosuke.tech/entry/2020/12/16/openshift-on-nvidia-gpu/</link>
      <pubDate>Wed, 16 Dec 2020 19:21:02 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/12/16/openshift-on-nvidia-gpu/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日はOpenShiftにNVIDIA GPUのノードを追加して利用する方法2つのブログ（概要編と導入編）に分けて紹介したいと思います。
あまりまだ日本語での情報がないので、挑戦したいと考えている人の参考になればと思います。
また、非常に進化が速く、情報が古くなる可能性もあります。なるべく更新していきたいと思っていますが、最新情報は公式情報をみてください。。
導入編では、OpenShiftを取り扱いますが、他のKubernetesディストリビューションをお使いの方も参考になるところはあると思います。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/12/17/openshift-on-nvidia-gpu-2/&#34; data-iframely-url=&#34;//cdn.iframe.ly/ELaxDLL&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>P2Pでコンテナイメージを配信できるDragonflyとAlibaba Cloudのなぞ</title>
      <link>https://blog.mosuke.tech/entry/2020/12/02/dragonfly/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/12/02/dragonfly/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
ここ最近、ワケアッて少しAlibaba Cloud関連のKubernetesについて調べています。
ちなみにこちらの記事は&lt;a href=&#34;https://qiita.com/advent-calendar/2020/alibabacloud&#34;&gt;Alibaba Cloud Adovent Calender 2020&lt;/a&gt;の2日目の投稿です。&lt;/p&gt;
&lt;p&gt;Alibaba Cloudの中の人をやめて、もう1年半以上たちますが、まだこうやって調べるとは思わなかったです。いまになっていろいろAlibaba Cloudが取り組んでいるコンテナ関連のことがよく理解できるようになってきました（笑）
本日はアリババ/Alibaba Cloudが開発するP2Pのファイル配信ソフトウェアのDragonflyについて少し書いてみたいと思います。（まだ調べ中のところもあるので許してください）&lt;/p&gt;
&lt;h2 id=&#34;dragonflyとは&#34;&gt;Dragonflyとは&lt;/h2&gt;
&lt;p&gt;Dragonflyは、アリババおよびAlibaba Cloudがメインとなって開発している、オープンソースのP2Pファイル配信の仕組みです。&lt;br&gt;
よくコンテナイメージの配信のためのソフトウェアといわれることもありますが、実態はコンテナイメージだけでなく、どんなファイルにも活用できるものです。
コンテナ時代より前からアリババが研究していた効率的なアプリケーションの配布、キャッシュの配布、ログの配布、画像の配布がもとになっています。
現代のクラウドネイティブの環境になってコンテナイメージの配布にも活用されてきているということです。
その目標は、クラウドネイティブのシナリオにおけるすべての配布問題に取り組むことです。現在、Dragonflyは以下の点に焦点を当てています。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/dragonflyoss/Dragonfly&#34; data-iframely-url=&#34;//cdn.iframe.ly/VOFvh8T&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>[Alibaba Cloud] KubernetesのProfessional managed clustersは何が違うのか？</title>
      <link>https://blog.mosuke.tech/entry/2020/11/29/ack-professional/</link>
      <pubDate>Sun, 29 Nov 2020 20:46:17 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/11/29/ack-professional/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
&lt;a href=&#34;https://www.alibabacloud.com/product/kubernetes&#34;&gt;Container Service for Kubernetes (ACK)&lt;/a&gt; では、新しくマネージドクラスタの中でサービスレベルを選べるようになりました。
&lt;a href=&#34;https://www.alibabacloud.com/help/doc-detail/173290.htm&#34;&gt;Professional managed clusters&lt;/a&gt;というものです。
このクラスターは通常のマネージドクラスタと比べて何が違うのでしょうか？
調べてみたのでまとめました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker Hubのダウンロード回数制限の対策を考える</title>
      <link>https://blog.mosuke.tech/entry/2020/11/18/docker-rate-limit/</link>
      <pubDate>Wed, 18 Nov 2020 17:32:21 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/11/18/docker-rate-limit/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
今日は最近開始されたDocker Hubのイメージダウンロードの回数制限について書きたいと思います。
動向だけはなんとなく追っていたのですが、先日に自分がこの問題に向き合わなければいけないケースに遭遇したため、残しておこうと思い立ちました。&lt;/p&gt;
&lt;h2 id=&#34;きっかけ&#34;&gt;きっかけ&lt;/h2&gt;
&lt;p&gt;本ブログの記事のビルドやデプロイには&lt;a href=&#34;https://app.wercker.com/&#34;&gt;Wecker&lt;/a&gt;というサービスを利用しています。
ある日、記事を投稿しようとしたところCIのビルドがコケて記事を投稿できませんでした。
エラーは以下のとおりで、調べるとDocker Hubのイメージダウンロードの回数制限に引っかかっていることがわかりました。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;fetch failed to pull image debian: API error (500): {&amp;quot;message&amp;quot;:&amp;quot;toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limit&amp;quot;}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.mosuke.tech/image/wercker-docker-rate-limit-error.png&#34; alt=&#34;docker-rate-limit-error&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【翻訳】Kubernetes as a serviceの謎を解く。Alibaba Cloudが1万個のKubernetesクラスタを管理する方法</title>
      <link>https://blog.mosuke.tech/entry/2020/11/17/how-to-manage-lots-of-k8s/</link>
      <pubDate>Tue, 17 Nov 2020 17:24:47 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/11/17/how-to-manage-lots-of-k8s/</guid>
      <description>&lt;p&gt;※本記事は、著者であるZhimin Tangの許可をとって翻訳した記事となります。(&lt;a href=&#34;https://www.cncf.io/blog/2019/12/12/demystifying-kubernetes-as-a-service-how-does-alibaba-cloud-manage-10000s-of-kubernetes-clusters/&#34;&gt;原文&lt;/a&gt;)&lt;br&gt;
また本記事の内容は、2020/12/11のAliEaters Tokyo #16にて発表しており、スライドは以下です。&lt;/p&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/ajzBW1pq1pgkpj&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/mosuke5/alibaba-cloud1kubernetes&#34; title=&#34;Alibaba Cloudが1万個のKubernetesクラスタを管理する方法&#34; target=&#34;_blank&#34;&gt;Alibaba Cloudが1万個のKubernetesクラスタを管理する方法&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;https://www.slideshare.net/mosuke5&#34; target=&#34;_blank&#34;&gt;Shinya Mori (@mosuke5)&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;2015年以来、Alibaba Cloud Container Service for Kubernetes（ACK）は、Alibaba Cloud上でもっとも急速に成長しているクラウドサービスの1つです。今日では、ACKは多数のAlibaba Cloudの顧客にサービスを提供しているだけでなく、Alibabaの社内インフラストラクチャやその他多くのAlibaba Cloudサービスをサポートしています。&lt;/p&gt;
&lt;p&gt;世界的なクラウドベンダーが提供する他の多くのコンテナサービスと同様に、ACKでは信頼性と可用性が最優先事項となっています。これらの目標を達成するために、セルベースでグローバルに利用可能なプラットフォームを構築し、数万個のKubernetesクラスタを稼働させています。&lt;/p&gt;
&lt;p&gt;今回のブログ記事では、クラウドインフラ上で大量のKubernetesクラスタを管理した経験と、その基盤となるプラットフォームの設計についてご紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Googleアドセンス合格に必要なサイトのレイアウトについて</title>
      <link>https://blog.mosuke.tech/entry/2020/10/17/site-design-for-adsense/</link>
      <pubDate>Sat, 17 Oct 2020 16:52:30 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/10/17/site-design-for-adsense/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
ふだんはあまりブログ運用のことは書きませんが、Googleアドセンスの合格について非常に重要な知見を得たのでまとめます。
ずばり、Googleアドセンスの合格には実は「サイトのレイアウトが重要である」ということです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OperatorSDK for Ansible の開発。チュートリアルの次の一歩</title>
      <link>https://blog.mosuke.tech/entry/2020/10/10/develop-ansible-operator/</link>
      <pubDate>Sat, 10 Oct 2020 14:06:03 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/10/10/develop-ansible-operator/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日は、Kubernetes Operatorの開発に関する情報提供をしたいと思います。
Operatorってなに？ってかたやより内部実装を学びたい方はぜひこちらの書籍（&lt;a href=&#34;https://amzn.to/34SwsvS&#34;&gt;実践入門 Kubernetesカスタムコントローラーへの道&lt;/a&gt;）を参考にしてください。&lt;/p&gt;
&lt;p&gt;Operator開発にはOperatorSDKを利用するのが非常に便利です。Go, Ansible, Helmなどを用いて開発できるのですが、今回はAnsibleを使ったOperatorについて書きます。
OperatorSDKは便利ですが、まだまだ情報が少なく、ドキュメントのチュートリアルを実施したあとに何をすればいいのか？とっつきにくいさもあります。
というわけで、このブログでは、チュートリアル後に何をすればいいか？どんなことを確認していけばいいのか？という観点でまとめてみましたので、ぜひ参考にしてOperator開発を楽しんでください。&lt;/p&gt;
&lt;p&gt;まだチュートリアルをやっていないよ、というかたはこちらから済ましてみましょう。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://sdk.operatorframework.io/docs/building-operators/ansible/tutorial/&#34; data-iframely-url=&#34;//cdn.iframe.ly/2QAR3qE&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>KubernetesのPod内からの名前解決を検証する</title>
      <link>https://blog.mosuke.tech/entry/2020/09/09/kuubernetes-dns-test/</link>
      <pubDate>Wed, 09 Sep 2020 17:45:05 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/09/09/kuubernetes-dns-test/</guid>
      <description>&lt;p&gt;もーすけです。本日は最近おこなったトラブルシューティングの中で、自分がKubernetesのDNSまわりについて理解が乏しく手こずっていたのでその内容について簡単に書いていきたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;前提&#34;&gt;前提&lt;/h2&gt;
&lt;p&gt;これからcurlをhttpサーバに打ったり、digを行ったりしますが、Kubernetes内の下記のような環境で行ってます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.mosuke.tech/image/kubernetes-dns-test-overview.png&#34; alt=&#34;overview&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ZabbixでKubernetesの監視を検討する（Prometheus exporter, Kubernetes API）</title>
      <link>https://blog.mosuke.tech/entry/2020/08/27/zabbix-for-kubernetes/</link>
      <pubDate>Thu, 13 Aug 2020 18:40:35 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/08/27/zabbix-for-kubernetes/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/mosuke5&#34; target=&#34;_blank&#34;&gt;mosuke5&lt;/a&gt; です。
本日は、ZabbixでKubernetesの監視をどこまで頑張れるか考えてみたいと思います。
クラウドネイティブな環境ならPrometheusとそう単純に思うところですが、使い慣れたツールに統合したいことも当然ありますし、選択肢はいろいろあるべきですね。
どんな方法で実現できるのかみていきましょう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>コンテナイメージを軽くする方法と、その原理原則を考える</title>
      <link>https://blog.mosuke.tech/entry/2020/07/09/container-image-size/</link>
      <pubDate>Thu, 09 Jul 2020 18:50:01 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/07/09/container-image-size/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
先日、はじめてラーメン作りに挑戦しました。非常に美味しくできました。
ラーメン作りにも興味ある方はこちらのブログ（&lt;a href=&#34;https://note.com/morisan_life/n/n2f855f8e5a46&#34;&gt;初心者のための、家系ラーメン自作 徹底ガイド！&lt;/a&gt;）をご参照ください（笑）&lt;/p&gt;
&lt;p&gt;さて本題ですが、はじめてコンテナアプリケーションの開発に挑戦していると覚えることがたくさんあり、楽しさ反面大変さもおそらく感じるかと思います。
そんな覚えることがたくさんの中には、コンテナイメージは軽くしたほうがいいというものも含まれるかもしれません。
軽くしないと動かないわけではないので、はじめてコンテナ環境に挑戦している人はどうしても忘れがち、見落としがちなことかもしれません。
しかし、実際の運用を見据えると、軽量であるほうが断然よいです。&lt;br&gt;
その理由を理解すると、みなさんが「なぜコンテナに挑戦しているのか」思い出してくるのではないかと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>コンテナイメージの脆弱性のリスクと対策についてNIST SP 800-190に沿って考える</title>
      <link>https://blog.mosuke.tech/entry/2020/07/08/container-image-security/</link>
      <pubDate>Wed, 08 Jul 2020 21:10:32 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/07/08/container-image-security/</guid>
      <description>&lt;p&gt;少なくとも年内まで在宅勤務が確定しいるもーすけです。&lt;br&gt;
さすがに、出社方法などすべて忘れました（笑）&lt;/p&gt;
&lt;p&gt;はい、本日はコンテナイメージのセキュリティに関する考え方について書きます。&lt;br&gt;
新しくコンテナ環境を導入してみたいけど、セキュリティに対してどう考えたらいいかわからないといった声や、
実際にKubernetes使い始めたけど本当にこれで安全なの？といった不安の声が聞こえてきているのでまとめてみました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>カスタマイズしたJenkinsを作成する方法 on OpenShift</title>
      <link>https://blog.mosuke.tech/entry/2020/07/05/customized-jenkins-on-openshift/</link>
      <pubDate>Sun, 05 Jul 2020 23:00:50 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/07/05/customized-jenkins-on-openshift/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
本日はRed Hatが提供しているKubernetesディストリビューションであるOpenShift上のJenkinsの管理に関するお話です。
OpenShift上でJenkinsを利用する際のプラグイン管理の方法やカスタマイズ方法などをご紹介します。
ハマリポイントもあり困っている方も見かけたのでお役に立てばと思います。&lt;/p&gt;
&lt;p&gt;Jenkins本体ではなくJenkins agnetのカスタマイズに関しては以前に下記ブログを書いてますのでこちらをご参照ください。&lt;/p&gt;
&lt;iframe src=&#34;https://hatenablog-parts.com/embed?url=https%3A%2F%2Frheb.hatenablog.com%2Fentry%2Fopenshift-custom-jenkins-agent&#34; style=&#34;border: 0; width: 100%; height: 190px;&#34; allowfullscreen scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;</description>
    </item>
    
    <item>
      <title>Sock Shopを使ったサービスメッシュ体験のハンズオン</title>
      <link>https://blog.mosuke.tech/entry/2020/07/01/istio-sockshop/</link>
      <pubDate>Wed, 01 Jul 2020 23:00:53 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/07/01/istio-sockshop/</guid>
      <description>&lt;p&gt;おひさしぶりです。もーすけです。&lt;br&gt;
あっという間に６月が終わってしまい、６月はブログが書けませんでしたが、ブログで書きたいなと思うネタはいくつかありますので、時間のすきをみつけて書いていきたいと思います。&lt;/p&gt;
&lt;p&gt;以前に、Sock Shopを使ったマイクロサービスのハンズオン体験についてのブログを書きました。
このネタに、Istioを使ったサービスメッシュを適応するハンズオンを追加したのでお知らせします。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/01/22/sockshop/&#34; data-iframely-url=&#34;//cdn.iframe.ly/YDI2rVR&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Tekton 徹底解説、Operatorによるインストールとはじめの一歩（学習シリーズ01）</title>
      <link>https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/</link>
      <pubDate>Sun, 10 May 2020 15:15:21 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/</guid>
      <description>&lt;hr&gt;
&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/mosuke5&#34; target=&#34;_blank&#34;&gt;もーすけ&lt;/a&gt;です。
GWはみなさんいかがお過ごしでしたか？&lt;br&gt;
外に出れないGWという一生でもそんなことが2度あるかわかりませんが非常に大変な日々を過ごされたのではないかと思います。自分は、GWを使ってKubernetes Operatorの開発などに挑戦してみていました。
このあたりの話は別で書きたいと思いますが、Kubernetesのよさについてさらに理解を深めた気がします。&lt;/p&gt;
&lt;p&gt;さて、今日はCloud NativeなCI/CDツールと言われているTektonについて。&lt;br&gt;
Tekton学習シリーズということで入門者向けの連載企画をおこないました。第1回目は、Operatorによるインストール編です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>イメージのプルの効率化を考える。kubernetes-image-puller の紹介</title>
      <link>https://blog.mosuke.tech/entry/2020/04/28/kubernetes-image-puller/</link>
      <pubDate>Tue, 28 Apr 2020 17:17:54 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/04/28/kubernetes-image-puller/</guid>
      <description>&lt;p&gt;FF7リメイク、クリアしました。いまSwitchで原作のFF7をやり直しています。もーすけです。&lt;br&gt;
今日は&lt;a href=&#34;https://github.com/che-incubator/kubernetes-image-puller&#34; target=&#34;_blank&#34;&gt;kubernetes-image-puller&lt;/a&gt;というツールを発見し試してみたので、背景や課題感含めてご紹介していきます。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/che-incubator/kubernetes-image-puller&#34; data-iframely-url=&#34;//cdn.iframe.ly/VbiFtNx&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Jenkins pipelineで複数のOpenShiftクラスタを扱う</title>
      <link>https://blog.mosuke.tech/entry/2020/04/14/jenkins-pipeline-for-multi-cluster/</link>
      <pubDate>Tue, 14 Apr 2020 17:05:07 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/04/14/jenkins-pipeline-for-multi-cluster/</guid>
      <description>&lt;p&gt;もーすけです。今日はJenkinsを使ったKubernetes(OpenShift)環境でのデプロイ関連についてです。&lt;br&gt;
Jenkins pipelineで複数クラスタ（マルチクラスタ）を扱いたい場合の設定方法について確認したので共有します。&lt;/p&gt;
&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;以前にskopeoを用いたコンテナイメージの別レジストリへのコピーする方法について書きました。
イメージを別レジストリへコピーする目的は、イメージをビルドしたクラスタと本番環境が別クラスタの場合などがあります。
複数のクラスタを利用する環境では、１つのJenkins pipelineから複数のOpenShiftのクラスタに対して操作するケースがでてきます。
やることは単純で、複数のクラスタの認証情報を用意して操作することになるわけですが、JenkinsのOpenShift Client Pluginを用いた方法についてメモしていきます。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/04/05/skopeo/&#34; data-iframely-url=&#34;//cdn.iframe.ly/SsqYHwS&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes、namespaceの分け方に迷った場合に考えること</title>
      <link>https://blog.mosuke.tech/entry/2020/04/09/kubernetes-namespace/</link>
      <pubDate>Thu, 09 Apr 2020 17:59:23 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/04/09/kubernetes-namespace/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
Kubernetes Lifeは順調でしょうか？&lt;br&gt;
今回は、すごく基本的なところなのですが、意外となやんでしまうnamespaceの切り方について考えてみようと思います。
よくご質問いただくこともあり、迷ってしまった場合に何を考えればいいか、そのポイントをまとめてみました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skopeoを利用したコンテナイメージのレジストリ間コピー</title>
      <link>https://blog.mosuke.tech/entry/2020/04/05/skopeo/</link>
      <pubDate>Sun, 05 Apr 2020 17:35:48 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/04/05/skopeo/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
コロナでの在宅に非常にしんどくなってきました。&lt;br&gt;
ブログを書いて気を紛らわしていきたいと思います。
今回は軽めの話題でSkopeoを利用したコンテナイメージのレジストリ間のコピーについてです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubernetesのリソースの基本を今度こそ理解する</title>
      <link>https://blog.mosuke.tech/entry/2020/03/31/kubernetes-resource/</link>
      <pubDate>Tue, 31 Mar 2020 09:56:21 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/03/31/kubernetes-resource/</guid>
      <description>&lt;p&gt;こんにちは。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;もーすけ&lt;/a&gt;です。&lt;br&gt;
コロナによる在宅勤務を行っている人も多いと思いますが、在宅は捗っていますか？
テレビからYouTubeなどを使って、カフェの雑音などを流しておくと家の中でも雰囲気はがらっと変わって集中できたりします。
イヤホンなどで流すよりも部屋全体に流れるようにテレビなどでやるとおすすめです。ぜひトライしてみてください。&lt;/p&gt;
&lt;p&gt;今日は、Kubernetesのリソースの基本についてまとめました。&lt;br&gt;
なんとなくでマニフェストのリソースを設定してアプリケーションがエラーになってしまってトラブルシュートに困ったことのある方もおそらくおおいのではないでしょうか。
今回は最低限ここだけは抑えておいたほうがいいだろう、と個人的に感じているリソースの４点（コンテナのへのリソース割り当て, QoS Class, LimitRange、ResourceQuota）についてまとめました。機会あれば別の観点もご紹介したいともいます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ITエンジニアこそ「強み」を活かそう。ストレングスファインダーの活用</title>
      <link>https://blog.mosuke.tech/entry/2020/03/28/strengths-finder/</link>
      <pubDate>Sat, 28 Mar 2020 21:05:38 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/03/28/strengths-finder/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
今日は、テクニカルな話題ではなく、自分の強みをキャリアに活かすための手法としてのストレングスファインダーについて紹介します。ますます、難しく・複雑になるこの世の中で、エンジニアの人こそこのストレングスファインダーが活きるのではないかと思っています。これからのキャリアを考えている人、自分の強みをもっと活かしてステップアップしたい人は是非続きも読んでみてください。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KubernetesにおけるCI/CD実践の勘所まとめ</title>
      <link>https://blog.mosuke.tech/entry/2020/03/04/kubernetes-ci-cd/</link>
      <pubDate>Wed, 04 Mar 2020 18:14:26 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/03/04/kubernetes-ci-cd/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/mosuke5&#34; target=&#34;_blank&#34;&gt;もーすけ&lt;/a&gt;です。&lt;br&gt;
前回のブログでは「&lt;a href=&#34;https://amzn.to/2PraGZ8&#34; target=&#34;_blank&#34; onClick=&#34;ga(&#39;send&#39;,&#39;event&#39;,&#39;link&#39;,&#39;click&#39;,&#39;to-amz-cloudnativedevops&#39;);&#34;&gt;Kubernetesで実践するクラウドネイティブDevOps&lt;/a&gt;」の書籍を紹介しました。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/02/26/cloud-native-devops/&#34; data-iframely-url=&#34;//cdn.iframe.ly/0pYInqQ&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;こちらの反響もよかったこともあり、KubernetesにおけるCI/CD（継続的インテグレーションと継続的デリバリー）に焦点を絞って、いままでの経験も含めて大事なポイントをいくつかの切り口でまとめることにしました。
一部は書籍の内容とかぶる部分もあるのですが、わたしが普段Kubernetesでのアプリケーション運用に携わる中で大事だと思うことなど含めてご紹介します。
KubernetesにおけるCI/CDとしていますが、項目は必ずしもKubernetesに限った話ではありませんのでご了承ください。&lt;/p&gt;
&lt;p&gt;また、もっといろんなトピックを書きたいのですが、すべてのトピックを揃えると記事自体のボリュームも大きくなり公開も遅くなりそうだったので、基本的な内容のみ選んでみました。随時追加されていく（あるいは別記事？）可能性があります。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>運用課題の指南書、Kubernetesで実践するクラウドネイティブDevOps</title>
      <link>https://blog.mosuke.tech/entry/2020/02/26/cloud-native-devops/</link>
      <pubDate>Wed, 26 Feb 2020 23:42:24 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/02/26/cloud-native-devops/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
先日、O&amp;rsquo;REILLY Japanから &lt;a href=&#34;https://amzn.to/2PraGZ8&#34; target=&#34;_blank&#34; onClick=&#34;ga(&#39;send&#39;,&#39;event&#39;,&#39;link&#39;,&#39;click&#39;,&#39;to-amz-cloudnativedevops&#39;);&#34;&gt;Kubernetesで実践するクラウドネイティブDevOps&lt;/a&gt; という本が出版されました。
最近仕事でKubernetes上のアプリケーションに関するDevOpsやCI/CDによく携わっているのもあり、発売日に手にとりにいきました。
せっかくなので、こちらの本の紹介をしていきたいと思います。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/Kubernetes%25E3%2581%25A7%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2583%258D%25E3%2582%25A4%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596DevOps-John-Arundel/dp/4873119014&#34; data-iframely-url=&#34;//cdn.iframe.ly/j1izGzy?iframe=card-small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>本質を学ぶ、アジャイル・スクラム初心者におすすめの教材</title>
      <link>https://blog.mosuke.tech/entry/2020/02/23/basic-of-agile/</link>
      <pubDate>Sun, 23 Feb 2020 16:59:20 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/02/23/basic-of-agile/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
わたしは普段、開発チームや情シス部門が業務効率化・スキルアップできるように支援を行っています。
その中でもここ1年程はアジャイルやスクラムについてたくさんのことを学びました。&lt;br&gt;
自分も以前はそうだったのですが、多くの人たちにとって「アジャイル開発」や「スクラム」は、表面的な手法として認識されているというのが現実です。実践や勉強を深めていくと、その本質は単なる手法ではないということがわかってくるものです。
開発を2週間区切りに行っていくものでもなければ、開発を速くするためものでもないことに気づくことでしょう。（結果として左のようなことは起きうります）&lt;br&gt;
本ブログは、アジャイルやスクラムをきちんと学んだことがない人、これから取り組もうとしている人、取り組んでいるけどイマイチ成果がでていない人向けに、どうすれば本質を学んで理解できるか、その参考となる情報やおすすめの書籍などをご紹介していきたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sock Shopを使ったマイクロサービス体験のハンズオン</title>
      <link>https://blog.mosuke.tech/entry/2020/01/22/sockshop/</link>
      <pubDate>Wed, 22 Jan 2020 14:44:04 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/01/22/sockshop/</guid>
      <description>&lt;p&gt;あけましておめでとうございます。&lt;a href=&#34;https://twitter.com/mosuke5&#34; target=&#34;_blank&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
マイクロサービスの実際の体験や研修を探したことがありますでしょうか。
残念ながら、実際に手を動かしなら学ぶトレーニングや研修は多く存在しませんが、
マイクロサービスのデモアプリケーションとして&lt;a href=&#39;https://microservices-demo.github.io/&#39; target=&#39;_blank&#39;&gt;Sock Shop&lt;/a&gt;が有名で、これはトレーニングに最適です。&lt;/p&gt;
&lt;p&gt;日本語でもたくさんのSock Shopの紹介やインストール記事がでています。しかし、自分もそうだったのですが、なんとなく起動して動かして、終わりとなっているものがおおく、どんな観点でこのSock Shopをいじっていけばいいかの情報が足りないと感じました。
機会があり、Sock Shopをさわるタイミングがあったので、実際にどんなデータ構造になっているのか、マイクロサービスゆえの課題など、Sock Shopから少しでも多くの学びが得られるようにこの記事を書きます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「捉」2019年振り返り</title>
      <link>https://blog.mosuke.tech/entry/2019/12/31/reflection/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:44 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/12/31/reflection/</guid>
      <description>&lt;p&gt;@mosuke5です。2019年も終わりを迎えてしまいました。&lt;br&gt;
毎年恒例の振り返りブログも6回目となります。
そして、今年はなんといっても生活面で転職と結婚という大きな節目があり、いろいろと考え方も生活も変わった1年だったなと今になって思います。どうかわったか、思い出しながら書いていきたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOpsの本質を科学的に理解する。LeanとDevOpsの科学を読んで。</title>
      <link>https://blog.mosuke.tech/entry/2019/12/26/the-science-of-lean-software-and-devops/</link>
      <pubDate>Thu, 26 Dec 2019 11:29:20 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/12/26/the-science-of-lean-software-and-devops/</guid>
      <description>&lt;p&gt;おひさしぶりです。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
最近&lt;a href=&#34;https://amzn.to/2tVOWN8&#34; target=&#34;_blank&#34;&gt;「LeanとDevOpsの科学」&lt;/a&gt;という本を読みました。
自分の周りの先輩方たちのあいだでは当たり前のようにこの本のコンテキストで会話がすすんでいるということもあり、読んでみたのがきっかけです。
実際に、読んでみるととても素晴らしい書籍であり、是非みなさんにも読んでほしいと思ったためこの記事を書くにいたりました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Datadog APMとトレーシングの仕組みについて</title>
      <link>https://blog.mosuke.tech/entry/2019/11/21/datadog-apm/</link>
      <pubDate>Thu, 21 Nov 2019 11:32:38 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/11/21/datadog-apm/</guid>
      <description>&lt;p&gt;こんにちは。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
みなさん普段の監視はどのように行っていますか？Datadog使っていますか？&lt;/p&gt;
&lt;p&gt;最近&lt;a href=&#34;https://www.datadoghq.com/&#34;&gt;Datadog&lt;/a&gt;を触る機会が多いのですが、Datadogはobservabilityの3本柱ということで、メトリックとトレース(APM)とログ、この3つを統合した監視サービスであることを強くおしだしています。
3つの分野のそれぞれに対応したOSSやサービスは多いですが、統合されてシームレスに連携できる点はDatadogの非常に強いポイントと感じます。
さて、そんななかでDatadog APM (Application Perfomance Monitoring) が強力だったので紹介したいのと、その仕組みを探っていきましょう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>結婚式を楽に円満に行う！やって本当によかった７つのこと</title>
      <link>https://blog.mosuke.tech/entry/2019/11/12/wedding/</link>
      <pubDate>Tue, 12 Nov 2019 22:06:54 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/11/12/wedding/</guid>
      <description>&lt;p&gt;こんにちは。@mosuke5です。&lt;br&gt;
私ごとですが、先日結婚式をあげました。結婚式は、普通であれば一生に一回しかないことが望ましいわけですが、逆にいうと一度しかないので、他の人の助けになればと、我が家では振り返り会を実施しました。その中で、おもによかったなと思うポイントをピックアップしてまとめました。是非、こらから結婚式をあげようとしている方々の参考になればと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Apsara Conference 杭州に上海経由でいくために必要なこと</title>
      <link>https://blog.mosuke.tech/entry/2019/09/23/apsara-conference-trip/</link>
      <pubDate>Mon, 23 Sep 2019 15:33:08 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/09/23/apsara-conference-trip/</guid>
      <description>&lt;p&gt;&lt;strong&gt;※本内容は、アリババのカンファレンス以外でも杭州に行きたい人に役立つ情報です。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;こんにちは&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
9月といえば、、そうAlibaba Cloudのカンファレンス Apsara Conferenceですね。（強引）&lt;br&gt;
昨年までは TCC(The Computing Conference)という名前だったのですが、今年からはアリババらしさを出すためか名前を変更しました。今年も参加してきたのご紹介していきたいと思います。&lt;/p&gt;
&lt;p&gt;本記事では、まず会場までの行き方など旅路的なところを紹介します。&lt;br&gt;
来年ものカンファレンスに参加する人や杭州にいく予定のある人の助けになればと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DatadogのAlibaba Cloud integrationでできること</title>
      <link>https://blog.mosuke.tech/entry/2019/08/28/datadog-for-alibaba-cloud/</link>
      <pubDate>Wed, 28 Aug 2019 00:11:44 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/08/28/datadog-for-alibaba-cloud/</guid>
      <description>&lt;p&gt;仕事でDatadogを触る機会があり、フリートライアルのアカウントを作りました。&lt;br&gt;
ちょうどいい機会だったので、前々から試したいと思っていたAlibaba Cloudとの連携について試してみました。
この連携は2019年の3月くらいに開始したものです。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://www.datadoghq.com/blog/monitor-alibaba-cloud-datadog/&#34; data-iframely-url=&#34;//cdn.iframe.ly/bkZv6KL?iframe=card-small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes上のリソースをAnsibleで管理する</title>
      <link>https://blog.mosuke.tech/entry/2019/08/21/ansible-for-k8s-resources/</link>
      <pubDate>Wed, 21 Aug 2019 19:36:45 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/08/21/ansible-for-k8s-resources/</guid>
      <description>&lt;p&gt;お久しぶりです。@mosuke5です。&lt;br&gt;
Kubernetes上のリソースをどのように管理していますか？
&lt;code&gt;kubectl apply -f manifest-file.yml&lt;/code&gt; のようにkubectlを使うことがまず多いのかなと思います。
自分もそのようにデプロイすることがおおいです。
今日はAnsibleを用いてKubernetes上のリソースを管理することを試してみたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alibaba CloudでのPrivate DNS(PrivateZone)の仕様と用途の解説</title>
      <link>https://blog.mosuke.tech/entry/2019/07/19/alibaba-private-zone/</link>
      <pubDate>Fri, 19 Jul 2019 18:24:08 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/07/19/alibaba-private-zone/</guid>
      <description>&lt;p&gt;お疲れ様です。mosuke5です。&lt;br&gt;
Alibaba Cloudのプライベートの名前解決機能である、&lt;a href=&#34;https://www.alibabacloud.com/products/private-zone&#34; target=&#34;_bkank&#34;&gt;PrivateZone&lt;/a&gt;の仕様とその用途について解説していきます。&lt;/p&gt;
&lt;h2 id=&#34;privatezoneとは&#34;&gt;PrivateZoneとは&lt;/h2&gt;
&lt;p&gt;Alibaba CloudにはDNSのサービスがあり、インターネットからのアクセスに対しては昔から名前解決をすることができました。
しかし、VPC内部でだけ使うプライベートアドレスに対しての名前解決については今までできませんでした。
PrivateZoneは、VPC内部だけで使えるDNSです。
この機能により、VPC内部でのシステム間の連携やサーバ管理などが楽になります。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sidecar方式のFluentdでCloudWatch logsへログを集約することについての検討</title>
      <link>https://blog.mosuke.tech/entry/2019/07/12/sidecar-fluentd-to-cloudwatchlogs/</link>
      <pubDate>Fri, 12 Jul 2019 12:57:59 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/07/12/sidecar-fluentd-to-cloudwatchlogs/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
Kubernetes上でのアプリケーションのロギングについてFluentdを使ってどうできるか考えていきます。
今回はサイドカー方式という方法を使ってFluentdでAWS CloudWatch logsへ集約することについてやってみました。CloudWatch logsを例に取っていますが、それ以外でも考え方は応用できますので読んでみてください。
また、サイドカー方式以外の方式については、こちらの「&lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/18/kubernetes-application-logging/&#34;&gt;Kubernetesのロギングパターンは結局どれを採用したらいいの？&lt;/a&gt;」を参照してください。&lt;/p&gt;
&lt;p&gt;FluentdとAWSの連携については、以前に「&lt;a href=&#34;https://blog.mosuke.tech/entry/2017/09/03/fluentd_to_dynamodb/&#34;&gt;NginxのログをFluentdでDynamoDBへ送る&lt;/a&gt;」もかきましたので、参考にしてください。自分も復習で見返しました。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/18/kubernetes-application-logging/&#34; data-iframely-url=&#34;//cdn.iframe.ly/qKFqn1a&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>「リーンスタートアップ」を読んだ。計測することの重要性と難しさ</title>
      <link>https://blog.mosuke.tech/entry/2019/07/10/the-lean-startup/</link>
      <pubDate>Wed, 10 Jul 2019 18:08:06 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/07/10/the-lean-startup/</guid>
      <description>&lt;p&gt;会社のブログも含めて、やたら執筆ばかりしている&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
前回の &lt;a href=&#34;https://blog.mosuke.tech/entry/2019/06/30/scram/&#34;&gt;&amp;quot;「スクラム」（ジェフ・サザーランド）を読んだ&amp;quot;&lt;/a&gt;に続いて、「リーンスタートアップ」という本を読んだのでそちらについての学びについてまとめます。&lt;/p&gt;
&lt;h2 id=&#34;この書籍について&#34;&gt;この書籍について&lt;/h2&gt;
&lt;p&gt;この書籍は、アメリカシリコンバレーで起業家として活動していたエリック・リース氏が自らの起業体験を元に書かれた、「リーンスタートアップ」というスタートアップビジネスのマネジメント手法についてのものです。
彼が「リーンスタートアップ」という手法の提唱者になります。
スタートアップというも、その定義は広く、なにも「スタートアップベンチャー」だけを指し示しているものでもなく、
本書では &lt;strong&gt;「スタートアップとは、とてつもなく不確実な状態で新しい製品やサービスを創り出さなければならない人的組織である。」&lt;/strong&gt; と定義しています。&lt;/p&gt;
&lt;p&gt;そのため、会社のサイズや業界などに関係なく、上に当てはまる人にとってはとても有益な本です。
本書では、なぜスタートアップがうまくいかないのかにはじまり、科学的にどうしたらうまくまわせるかのエッセンスがつまっています。
新規プロジェクト・ビジネスでうまくいかなかった経験がある、これからやっていく予定がある人はぜひ一度読んでみてほしいです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CKADを取得の対策や試験当日の対応について</title>
      <link>https://blog.mosuke.tech/entry/2019/07/08/ckad/</link>
      <pubDate>Mon, 08 Jul 2019 09:12:22 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/07/08/ckad/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;a href=&#34;https://www.cncf.io/certification/ckad/&#34; target=&#34;_blank&#34;&gt;CKAD(Certified Kubernetes Application Developer)&lt;/a&gt;を受けてきました。&lt;br&gt;
すでに多くのCKA/CKADの合格レポートや体験記がでておりますが、
それでも自分が実際に受けてみるまで不安な要素も多くあったので、
そのあたりを払拭するべくこの記事を書きたいと思います。&lt;/p&gt;
&lt;p&gt;2019年7月5日にCKADを受験して無事に合格しました。&lt;br&gt;
スコアは89%と案外高く(66%で合格)、驚きでもあったのですが、その体験をこれから受験する人にもシェアできればと思います。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.mosuke.tech/image/ckad-certificate.png&#34; alt=&#34;ckad-certificate&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「スクラム」(ジェフ・サザーランド): 新しい仕事の仕方を学ぶ最良の本</title>
      <link>https://blog.mosuke.tech/entry/2019/06/30/scram/</link>
      <pubDate>Sun, 30 Jun 2019 15:59:32 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/06/30/scram/</guid>
      <description>&lt;p&gt;このブログで「読んだ」記事を書くのは実は初めてです。&lt;br&gt;
なので拙い書評になるかもしれませんが、これもこのブログに新しいコンテンツを提供するための第一歩としてやってみます。&lt;/p&gt;
&lt;p&gt;今回読んだのはこちらの「スクラム」という本です。&lt;/p&gt;
&lt;div class=&#34;amazlet-box&#34; style=&#34;margin-bottom:0px;&#34;&gt;&lt;div class=&#34;amazlet-image&#34; style=&#34;float:left;margin:0px 12px 1px 0px;&#34;&gt;&lt;a href=&#34;https://amzn.to/39EoJCX&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/31YRID0DRaL._SL160_.jpg&#34; alt=&#34;スクラム　仕事が４倍速くなる“世界標準”のチーム戦術&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-info&#34; style=&#34;line-height:120%; margin-bottom: 10px&#34;&gt;&lt;div class=&#34;amazlet-name&#34; style=&#34;margin-bottom:10px;line-height:120%&#34;&gt;&lt;a href=&#34;https://amzn.to/39EoJCX&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;スクラム　仕事が４倍速くなる“世界標準”のチーム戦術&lt;/a&gt;&lt;div class=&#34;amazlet-powered-date&#34; style=&#34;font-size:80%;margin-top:5px;line-height:120%&#34;&gt;posted with amazlet at 19.06.30&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-detail&#34;&gt;ジェフ・サザーランド &lt;br /&gt;早川書房 &lt;br /&gt;売り上げランキング: 15,652&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-sub-info&#34; style=&#34;float: left;&#34;&gt;&lt;div class=&#34;amazlet-link&#34; style=&#34;margin-top: 5px&#34;&gt;&lt;a href=&#34;https://amzn.to/39EoJCX&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;Amazon.co.jpで詳細を見る&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-footer&#34; style=&#34;clear: left&#34;&gt;&lt;/div&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Kustomizeで環境ごとに異なるマニフェストを作る</title>
      <link>https://blog.mosuke.tech/entry/2019/06/21/kustomize/</link>
      <pubDate>Fri, 21 Jun 2019 10:57:12 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/06/21/kustomize/</guid>
      <description>&lt;p&gt;ブログの更新頻度が落ちていますが、サボっているわけではないです。。
はい。mosuke5です。&lt;/p&gt;
&lt;p&gt;やはりKubernetesマニフェストのテンプレートエンジンは必要だ、と気づいてしまったので、マニフェストを生成できるツールを探していました。
そこで、Kustomizeを試しみたのでアウトプットとして残しておきます。使ってみた上でハマったポイントや注意すべき点なども含めて書きたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[基礎] ElasticSerachなどの外部コンポーネントがあるときのテスト</title>
      <link>https://blog.mosuke.tech/entry/2019/05/26/elasticsearch-test/</link>
      <pubDate>Sun, 26 May 2019 17:30:51 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/05/26/elasticsearch-test/</guid>
      <description>&lt;p&gt;お久しぶりです。@mosuke5です。&lt;br&gt;
新しい会社に入って１ヶ月ほど経ちましたが生きています。
今回は、ElasticSearchを題材にしますが外部コンポーネントを利用しているアプリケーションのテストについてです。
すごく初歩的なところですが、いくつか考えなければいけないポイントもあったのでまとめました。&lt;/p&gt;
&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;今回の題材は非常にシンプルな検索機能をもったアプリケーションです。
構成はアプリケーションはRailsで、検索エンジンを担うのがElastiCsearchという前提です。&lt;/p&gt;
&lt;p&gt;アプリケーションがもつmethodは３つで以下としています。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;GET &amp;lsquo;/&amp;rsquo;  =&amp;gt; &amp;lsquo;Hello&amp;rsquo;を返す&lt;/li&gt;
&lt;li&gt;GET &amp;lsquo;/search&amp;rsquo; =&amp;gt; GETパラメータ&amp;rsquo;q&amp;rsquo;のキーワードで検索した結果をjsonで返す&lt;/li&gt;
&lt;li&gt;POST &amp;lsquo;/update&amp;rsquo; =&amp;gt; 所定のjsonファイルをPOSTするとbulkでinsertされ、その結果をjsonで返す&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Amazon ECSを使った際のFargateの仕組みとそのデプロイフローを学ぶ</title>
      <link>https://blog.mosuke.tech/entry/2019/04/13/aws-ecs-deploy/</link>
      <pubDate>Sun, 14 Apr 2019 13:40:27 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/04/13/aws-ecs-deploy/</guid>
      <description>&lt;p&gt;ニート最終日の&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
今日は、Amazon ECSからみる、AWSのコンテナ戦略やECSへのデプロイフローなどについて解説します。
自分はDockerやKubernetesなどを触ってきましたが、AWS特有のコンテナサービスであるECS, Fargateを調査していくとAWSの戦略などいろんな発見がありました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alibaba Cloudの中の人を卒業。Alibabaと僕の物語</title>
      <link>https://blog.mosuke.tech/entry/2019/03/29/thank-you-alibaba/</link>
      <pubDate>Fri, 29 Mar 2019 17:45:24 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/03/29/thank-you-alibaba/</guid>
      <description>&lt;p&gt;你好(ニーハオ)、&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
本日2019年3月29日をもって、ソフトバンク株式会社の最終出社日で、同時にAlibaba Cloudの中の人を卒業しました。
2016年8月1日からAlibaba Cloudにジョインし、2年8か月の間、日本リージョンの立ち上げから企業への導入支援、トレーニングなど、このクラウドビジネスを拡大させるためのたくさんのことを行ってきました。&lt;/p&gt;
&lt;p&gt;2年8か月という期間ですが、非常に濃い日々で5年分くらいの経験をさせていただいた気持ちです。&lt;br&gt;
今回退職することにはなりましたが、最後の最後までAlibaba Cloudをみなさんに知ってもらうべく退職エントリーに全力を尽くしていますし、これからもユーザの立場として貢献していきたいと思っています。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AnsibleのTerraform moduleを考察してみる</title>
      <link>https://blog.mosuke.tech/entry/2019/03/26/terraform-integrated-with-ansible/</link>
      <pubDate>Mon, 25 Mar 2019 15:22:11 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/03/26/terraform-integrated-with-ansible/</guid>
      <description>&lt;p&gt;気がつけば、2018年度も終了間際で時の流れの速さを実感しています。&lt;br&gt;
はい。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;/p&gt;
&lt;p&gt;Ansibleのmodule(モジュール)でTerraformが知らぬ間にできていたので、
さっそく触ってみたのと、その有用性や使いみちについて考えてみました。&lt;br&gt;
&lt;a href=&#34;https://docs.ansible.com/ansible/latest/modules/terraform_module.html&#34;&gt;terraform – Manages a Terraform deployment (and plans)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Terraformでクラウド環境のセットアップをして、その後にそのクラウド環境のサーバに対してプロビジョニングすることが一気通貫でできるようになります。素晴らしいことですね。
一方、こちらのツールを使ってみると、実現にあたっていろいろと工夫しなければ行けない点が出てきたのでご紹介していきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes上のリソースをTerraformで管理するメリットとデメリット</title>
      <link>https://blog.mosuke.tech/entry/2019/03/07/k8s-with-terraform/</link>
      <pubDate>Thu, 07 Mar 2019 01:06:27 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/03/07/k8s-with-terraform/</guid>
      <description>&lt;p&gt;@mosuke5です。早くも3月になってしまいました。&lt;br&gt;
しかし、個人的にはこの2か月は非常に動きがあった2か月でしたのでいろいろ楽しかったです。&lt;/p&gt;
&lt;p&gt;さて、本題ですが、、&lt;br&gt;
わたしの好きなTerraformを使ってKubernetesクラスタ上のリソースを管理するのをやってみたいと思います。&lt;br&gt;
そもそもKubernetesをTeraformで管理するとなると2つのレイヤーの話があります。
今回は、後者のほうに重きを置いてお伝えします。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;KubernetesクラスターそのものをTerraformで管理する&lt;/li&gt;
&lt;li&gt;Kubernetesクラスター上のリソースをTerraformで管理する&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Virtual Kubeletとは何か。Alibaba Cloud上で実際に動かして検証する</title>
      <link>https://blog.mosuke.tech/entry/2019/02/03/virtual-kubelet/</link>
      <pubDate>Sun, 03 Feb 2019 15:49:10 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/02/03/virtual-kubelet/</guid>
      <description>&lt;p&gt;はい、@mosuke5です。&lt;br&gt;
ここ最近、会社でも少しずつKubernetesに関するはなしなどもでてきており、自分の興味ある分野だったこともあり本腰いれて遊んでおります。
そのなかで、Alibaba CloudもProviderを出しているという、&lt;a href=&#34;https://github.com/virtual-kubelet/virtual-kubelet&#34;&gt;Virtual Kubelet&lt;/a&gt;について気になったので、実際に動かして概念の整理と使いどころについて考えてみました。&lt;/p&gt;
&lt;p&gt;例ではAlibaba CloudのKubernetesとECIを使っていますが、基本的な考え方は同じですので、Virtual Kubeletについて勉強したい人はぜひ読んでみてください。&lt;/p&gt;
&lt;h5 id=&#34;2019310-追記&#34;&gt;2019/3/10 追記&lt;/h5&gt;
&lt;p&gt;こちらの記事の内容についてはSlideShareにしていくつかのイベントで発表しています。&lt;a href=&#34;https://www.slideshare.net/mosuke5/virtualkubeletalibaba-cloud-133164822&#34;&gt;こちらもご参照&lt;/a&gt;ください。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>更新したファイルのCloudFlareキャッシュをCI過程で自動で削除する</title>
      <link>https://blog.mosuke.tech/entry/2019/01/04/purge-specified-cache-with-ci/</link>
      <pubDate>Fri, 04 Jan 2019 17:37:35 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/01/04/purge-specified-cache-with-ci/</guid>
      <description>&lt;p&gt;明けましておめでとうございます。@mosuke5です。&lt;br&gt;
年末年始で少しだけ本ブログサイトの運用改善をしたのでその記録です。
CIの過程で更新したファイルのキャッシュを削除できるようにしました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「索」2018年振り返り。</title>
      <link>https://blog.mosuke.tech/entry/2018/12/31/reflection/</link>
      <pubDate>Mon, 31 Dec 2018 00:55:24 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/12/31/reflection/</guid>
      <description>&lt;p&gt;毎年恒例の振り返りブログです。&lt;br&gt;
今年は「索」という字をあてたいと思う。「模索」からとった。&lt;br&gt;
あまりいい意味の文字ではないかもしれないが、そういうことではなく、
とにかくもがき何がベストなのか、どうなるべきか、とにかく探して、考え、時に悩みながら進めていった年だったからです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SlideShare APIをGoogleAppsScriptから利用する方法</title>
      <link>https://blog.mosuke.tech/entry/2018/12/20/slideshare-api-by-gas/</link>
      <pubDate>Thu, 20 Dec 2018 21:46:14 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/12/20/slideshare-api-by-gas/</guid>
      <description>&lt;p&gt;どうも、SlideShareの記事の管理をスプレッドシートでやりたいというちょっとした自分のニーズがあって、
SlideShare APIってあるのか？そしてGoogleAppsScriptもほとんどやったことがない、自分でしたが試してみたのでメモっておきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ソフトバンクの携帯電話部門のシステム系エンジニアは何している？</title>
      <link>https://blog.mosuke.tech/entry/2018/12/03/softbank-sysdev/</link>
      <pubDate>Sat, 01 Dec 2018 20:26:21 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/12/03/softbank-sysdev/</guid>
      <description>&lt;p&gt;内容自体はもうかなり過去の話なのです。
2年くらい前まで、携帯電話キャリアの中のエンジニアをしていたのですが、いまでもよくどんなことしていたの？って聞かれます。&lt;br&gt;
確かに、携帯電話キャリアの中にエンジニアがいるイメージはあまりありませんし、いたとしてもベンダーコントロールの業務のイメージが多いと思います。&lt;br&gt;
今回は、自分の備忘録もかねて、どんなことをしていたのかみなさんのイメージを変えるためにもまとめておこうと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>サンプル問題集付き！AWSソリューションアーキテクトプロフェッショナル勉強方法</title>
      <link>https://blog.mosuke.tech/entry/2018/11/08/aws-sa-pro/</link>
      <pubDate>Thu, 08 Nov 2018 16:44:17 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/11/08/aws-sa-pro/</guid>
      <description>&lt;p&gt;自分は、この執筆時点では、Alibaba Cloudの日本リージョンの運営側の人間です。
ですが、いろんなモチベーションがあり、AWSソリューションアーキテクトプロフェッショナルを先日取得してきました。
AWSの認定試験は業界でも取得したい人は多いと思うので、自分なりの勉強方法をまとめておきました。参考になれば幸いです。&lt;/p&gt;
&lt;p&gt;すでに多くの人が勉強方法などをブログ投稿しているので、差別化が難しいところではあるのですが、自分がまとめた試験問題サンプル集などもあるので、ぜひ参考にしてください。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS Solution Architect Professionalサンプル問題38選</title>
      <link>https://blog.mosuke.tech/entry/2018/10/25/sapro-sample-question/</link>
      <pubDate>Thu, 25 Oct 2018 16:15:10 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/10/25/sapro-sample-question/</guid>
      <description>&lt;p&gt;こんにちは。mosuke5です。&lt;br&gt;
職業柄、AWSについても研究含めて勉強しています。&lt;br&gt;
ベンチマークとしてAWS Solution Architect Professional(ソリューションアーキテクトプロフェッショナル)の取得も目標にしているのですが、海外のサイトで模擬試験の問題とそれに対するディスカッションが普通におこなわれていました。&lt;br&gt;
模擬試験の問題が表にでているのはどうかとも思いますが、38問見つけたので、それぞれのリンクと簡単な個人のコメントを書きましたので、勉強しているよという人はぜひ参考にしてみてください。&lt;/p&gt;
&lt;p&gt;私のコメントは完全に個人的なもので、あやまりも多いと思います。&lt;br&gt;
もし見つけた方は教えてくれるとたすかります。&lt;/p&gt;
&lt;p&gt;また、ディスカッションでは答えが割れているものも多いです。&lt;br&gt;
ぜひ、ディスカッションの内容も読んでみると良い勉強になると考えています。&lt;/p&gt;
&lt;p&gt;もっとやり込みたい方はぜひこちらも役に立ちますのでどうぞ！&lt;/p&gt;
&lt;div class=&#34;belg-link row&#34;&gt;
  &lt;div class=&#34;belg-left col-md-2 d-none d-md-block&#34;&gt;
    &lt;a href=&#34;https://px.a8.net/svt/ejp?a8mat=3H3F8L+198YR6+3L4M+BW8O2&amp;a8ejpredirect=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-4260%2F&#34; target=&#34;_blank&#34;&gt;
      &lt;img class=&#34;belg-site-image&#34; src=&#34;https://img-c.udemycdn.com/course/480x270/2530502_a09d_19.jpg&#34; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&#34;belg-right col-md-10&#34;&gt;
  &lt;div class=&#34;belg-title&#34;&gt;
      &lt;a href=&#34;https://px.a8.net/svt/ejp?a8mat=3H3F8L+198YR6+3L4M+BW8O2&amp;a8ejpredirect=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-4260%2F&#34; target=&#34;_blank&#34;&gt;AWS 認定クラウドプラクティショナー 模擬試験問題集（7回分455問）&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;belg-description&#34;&gt;本番試験レベルと同レベルの基礎問題から出題頻度がまれな難易度が高い問題を中心に構成しており、この講座により多数の合格者を輩出しています！&lt;/div&gt;
    &lt;div class=&#34;belg-site&#34;&gt;
      &lt;img src=&#34;https://www.udemy.com/staticx/udemy/images/v8/favicon-16x16.png&#34; class=&#34;belg-site-icon&#34;&gt;
      &lt;span class=&#34;belg-site-name&#34;&gt;Udemy&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>S3(オブジェクトストレージ)のメタデータの管理方法について</title>
      <link>https://blog.mosuke.tech/entry/2018/10/16/object-storage-metadata/</link>
      <pubDate>Tue, 16 Oct 2018 21:48:47 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/10/16/object-storage-metadata/</guid>
      <description>&lt;p&gt;少しずつ、プライベートでのインプットとアウトプットを再開している@mosuke5です。&lt;br&gt;
という話はおいておいて、オブジェクトストレージ(S3を例にとる)のメタデータ管理について書きます。&lt;/p&gt;
&lt;p&gt;S3のオブジェクトのメタデータ管理など今更という感じもありますが、案外「なぜそうするのか？」について書かれた日本語の記事が少なかったので、書いておこうと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWSとAlibaba Cloudの「Dedicated」インスタンスを整理する</title>
      <link>https://blog.mosuke.tech/entry/2018/09/24/dedicated/</link>
      <pubDate>Mon, 24 Sep 2018 16:49:32 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/09/24/dedicated/</guid>
      <description>&lt;p&gt;だいぶ久しぶりです。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
どういうわけか、3か月くらいブログの更新ができていませんでした。&lt;br&gt;
勉強や活動をサボっていたわけではないのですが。。。&lt;/p&gt;
&lt;p&gt;最近Alibaba CloudでもBYOLの要求に対応することのできる、Dedicated Host（通称DDH）というサービスをリリースしました。
サービスの仕様を把握するために、いろんなクラウドサービスを調べるのですが、とにかく「Dedicated」という単語がいろんな意味合いで利用され混同しがちです。&lt;br&gt;
このブログではAWSとAlibaba Cloudででてくる「Dedicated」という言葉について整理したいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Terraformのimportの使い方と注意ポイント</title>
      <link>https://blog.mosuke.tech/entry/2018/06/20/terraform_import/</link>
      <pubDate>Wed, 20 Jun 2018 11:08:12 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/06/20/terraform_import/</guid>
      <description>&lt;p&gt;ここずっとTerraformの基本的な部分の投稿がつづいている@mosuke5です。&lt;br&gt;
理由は、Terraformを最近結構触ることが多いのもあるが、今まであんまり使ってこなかった機能をきちんとキャッチアップして、より効率的にTerraformを活用できるようにしようと思っているからです。&lt;br&gt;
と、まあ余談はおいておき、import機能をやっていきます。&lt;/p&gt;
&lt;p&gt;import機能についてはできることもなんとなくしっていたが、自分の手でやったことがなかったのでやってみようと思っています。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Terraformのbackend機能を利用してstateファイルを共有する</title>
      <link>https://blog.mosuke.tech/entry/2018/06/17/terraform-backend/</link>
      <pubDate>Sun, 17 Jun 2018 15:39:29 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/06/17/terraform-backend/</guid>
      <description>&lt;p&gt;Terraformのbackend機能について紹介します。&lt;br&gt;
まずはbackend機能が必要な理由についてから説明していきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Terraform workspaceを利用して環境毎のリソース名の変更を行う</title>
      <link>https://blog.mosuke.tech/entry/2018/06/16/terraform-workspaces/</link>
      <pubDate>Sat, 16 Jun 2018 18:27:35 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/06/16/terraform-workspaces/</guid>
      <description>&lt;p&gt;Terraformのバージョン0.9以降で追加された、workspace機能について自分の環境で使い始めたので、その使い方やtipsなどを残していきたいと思います。&lt;br&gt;
workspaceは名前から推測できますが、同じTerraformのコードをワークスペース（環境）ごとに使い分けることのできる機能です。例えば、productionとdevelopmentの2つのworkspaceを作れば、同じTerraformコードを利用してこの2つの環境で別のリソースを作成していくことができます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Terraformで複数リージョンをまたいだリソース制御する</title>
      <link>https://blog.mosuke.tech/entry/2018/06/08/terraform_multi_provider/</link>
      <pubDate>Fri, 08 Jun 2018 15:03:10 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/06/08/terraform_multi_provider/</guid>
      <description>&lt;p&gt;Terraformを使って、リージョンをまたいでリソースを制御したくなることがありました。
Terraformではプロバイダーを指定する際に、リージョンを指定することが多く、異なるリージョンでリソース制御したい場合には工夫が必要です。&lt;/p&gt;
&lt;p&gt;なおこの記事はAlibaba Cloudを例にとっていますが、AWSなどでも同じことが可能ですので、あまりクラウドベンダーは気にしないでください。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker Compose上でのRailsアプリケーションの開発フロー</title>
      <link>https://blog.mosuke.tech/entry/2018/05/02/rails-app-on-docker/</link>
      <pubDate>Wed, 02 May 2018 23:14:44 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/05/02/rails-app-on-docker/</guid>
      <description>&lt;p&gt;早いものGWも終わり一週間が経ってしまいました。&lt;br&gt;
長期の連休になるとだいたい自分は趣味のアプリケーション開発をよくすすめています（ふだんからやりたいけどなかなかできない）。今年のGWも趣味アプリケーションの開発をしてました。&lt;/p&gt;
&lt;p&gt;いま作っているアプリケーションは自分の英語学習用のサービスなのですが(サービスについては別途どこかでご紹介したい)、新しい技術を実際に試す場としても利用しています。自分はいつも趣味アプリケーションで新しいことを試してみて、よかったらそれを職場にもっていくことが多いです。&lt;/p&gt;
&lt;p&gt;アプリケーションはRailsで書いているのですが、Railsの他にMySQLやNginx、ElasticSearch、Kibanaなど関連するコンポーネントが多いです。
そのため、Docker Composeを利用して動かすことにしています。Dockerは以前から使っていたのですが、実際にアプリケーションのせてとして開発・運用してみると、いろいろ問題があり試行錯誤することになりました。&lt;/p&gt;
&lt;p&gt;GWはその部分と主に格闘していて、最終的にそこそこ良い開発フローを整えることができました。今日はそのご紹介です。&lt;br&gt;
※もちろん、現時点でのやり方であり、改善しているので現状と異なることも多いと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DockerでのMySQLのセットアップ方法とその仕組みを理解する</title>
      <link>https://blog.mosuke.tech/entry/2018/04/21/basic-mysql-on-docker/</link>
      <pubDate>Sat, 21 Apr 2018 18:25:49 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/04/21/basic-mysql-on-docker/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
個人で作っているサービスをDockerベースで動かしているのだが、MySQL使いたくなってきて導入することになった。
Docker上のMySQL利用ははじめてだったので、いろいろわからないところがあった。その知見をまとめる。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GAITを受験する上で知っておきたいポイントと対策について</title>
      <link>https://blog.mosuke.tech/entry/2018/01/16/gait/</link>
      <pubDate>Tue, 16 Jan 2018 22:21:33 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/01/16/gait/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;もーすけ&lt;/a&gt;です。本日、総合的なITスキルの可視化する世界共通のアセスメントツールとうたう「GAIT」という試験を受験してきたので簡単にレポートします。うちの会社で今年から導入されて受験することになったからです。インターネット上には対策などについて書かれた記事も少なく参考になればと思います。&lt;/p&gt;
&lt;p&gt;GAITの試験概要についてこちらを参照ください。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://www.gait.org/about-gait/&#34; data-iframely-url=&#34;//cdn.iframe.ly/O9ifLEa?iframe=card-small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>[随時更新] ElasticSearchの基本APIのまとめ</title>
      <link>https://blog.mosuke.tech/entry/2018/01/14/elasticsearch-api/</link>
      <pubDate>Sun, 14 Jan 2018 14:00:39 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/01/14/elasticsearch-api/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
ElasticSearchを使っているのですがいつもAPI操作を忘れてしまうので、基本的な操作をまとめました。&lt;br&gt;
参考につかってください。&lt;/p&gt;
&lt;p&gt;そもそものElasticSearchやKibanaのインストールなどについては下記をご覧ください。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2017/08/13/elasticsearch_basic/&#34; data-iframely-url=&#34;//cdn.iframe.ly/e14fjI9&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Alibaba Cloud MVPを獲得とそのメリットについて</title>
      <link>https://blog.mosuke.tech/entry/2018/01/05/alibaba-cloud-mvp/</link>
      <pubDate>Fri, 05 Jan 2018 11:18:51 +0000</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/01/05/alibaba-cloud-mvp/</guid>
      <description>&lt;p&gt;2018年1月5日、AlibabaCloud MVPにノミネートされアナウンスされました。同僚と一緒にノミネートです。もちろんふたりとも日本初です。&lt;br&gt;
簡単にMVPの紹介と取得までのことをまとめておきます。&lt;/p&gt;
&lt;p&gt;ぼくのプロフィールページは下記からみれます。&lt;br&gt;
&lt;a href=&#34;https://www.alibabacloud.com/mvp/74&#34;&gt;MVP Profile Page&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TerraformでCloudFlareのDNS設定を操る</title>
      <link>https://blog.mosuke.tech/entry/2018/01/01/terraform-dns/</link>
      <pubDate>Mon, 01 Jan 2018 07:34:20 +0000</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/01/01/terraform-dns/</guid>
      <description>&lt;p&gt;あけましておめでとうございます。今年も本ブログおよびmosuke5をよろしくお願いします。&lt;br&gt;
新年元旦のブログなので軽く。年末年始は普段できない開発をやっていて、そこでできたちょっとしたメモを。&lt;/p&gt;
&lt;p&gt;趣味で作っているサービスで、基盤はAWSを利用し、CloudFlareも利用したい理由もありDNSの設定などはRoute53ではなくCloudFlareで制御する必要があった。複数のサービスをまたいで設定を管理できるTerraformの出番なわけだが、その設定方法についてメモしておく。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「進」2017年振り返り。</title>
      <link>https://blog.mosuke.tech/entry/2017/12/29/reflection/</link>
      <pubDate>Fri, 29 Dec 2017 06:44:07 +0000</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/12/29/reflection/</guid>
      <description>&lt;p&gt;もうはやいもので2017年も終わりです。&lt;br&gt;
毎年恒例の振り返りブログを書いていきたいと思います。&lt;/p&gt;
&lt;p&gt;今年を一言で表すなら「進」とかそんな感じでしょうか。&lt;br&gt;
新しい事業のサービスを開始し推し進めたことや、積極的にイベントなどで表に出ていったことからです。&lt;br&gt;
１年前には想像していなかった動き方ができて、なかなか楽しい１年だったかなと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS Cloud9でブログを書くことについて、AWS Cloud9で書いてみた</title>
      <link>https://blog.mosuke.tech/entry/2017/12/06/cloud9/</link>
      <pubDate>Tue, 05 Dec 2017 14:53:46 +0000</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/12/06/cloud9/</guid>
      <description>&lt;p&gt;こんにちは。mosuke5です。先日AWS re:Inventは楽しみましたか？&lt;br&gt;
まだキャッチアップしきれていないのですが、前から楽しみにしていたCloud9がついにAWSとしてでたので早速さわってみました。&lt;/p&gt;
&lt;p&gt;せっかくなので、&lt;br&gt;
このブログ記事は&lt;strong&gt;Cloud9でブログを書くことについて、Cloud9で書いている&lt;/strong&gt;様子をお伝えしています。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Serverlessconf Tokyo(2017)に参加。サーバレスの進化</title>
      <link>https://blog.mosuke.tech/entry/2017/11/03/serverlessconf_tokyo/</link>
      <pubDate>Fri, 03 Nov 2017 11:01:52 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/11/03/serverlessconf_tokyo/</guid>
      <description>&lt;p&gt;去年に引き続き、&lt;a href=&#34;http://tokyo.serverlessconf.io/&#34;&gt;Serverlessconf Tokyo&lt;/a&gt;に参加してきたので簡単ですが報告です。&lt;br&gt;
予定があって途中までしかいられずちょっとした感想です。&lt;/p&gt;
&lt;p&gt;サーバレスってなんだっけという復習はぜひ去年のブログをみてください。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2016/10/02/212420/&#34; data-iframely-url=&#34;//cdn.iframe.ly/DG0cPl4&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>ポッドキャストでAlibaba Cloudについて語る</title>
      <link>https://blog.mosuke.tech/entry/2017/10/06/nobolycloud/</link>
      <pubDate>Fri, 06 Oct 2017 09:10:43 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/10/06/nobolycloud/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
なんと、ポッドキャストでAlibaba Cloudについて話してきました！もちろんポッドキャスト出演経験ははじめてです。
&lt;a href=&#34;https://twitter.com/sawanoboly&#34;&gt;@sawanoboly&lt;/a&gt;さんが運営している&lt;a href=&#34;https://cloudinfra.audio/&#34;&gt;nobolycloud&lt;/a&gt;（のぼりーさんのクラウドインフラ Podcast）というポッドキャストです。そもそもAlibaba Cloudとはなにか、現状について、これからどうなっていくのか、素直にお伝えしました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWSソリューションアーキテクト アソシエイトの資格価値と勉強法について</title>
      <link>https://blog.mosuke.tech/entry/2017/09/18/aws_solution_architect/</link>
      <pubDate>Mon, 18 Sep 2017 19:34:21 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/09/18/aws_solution_architect/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
AWSソリューションアーキテクト認定試験（アソシエイト）に合格したので報告です。前回に、英語で模擬試験を受けた話をブログに書きました。その後に、本試験を受けたというわけです。
模擬試験や英語での試験に関して知りたい方は&amp;quot;&lt;a href=&#34;https://blog.mosuke.tech/entry/2017/08/04/aws_certificate_practice_exam/&#34;&gt;英語でAWSソリューションアーキテクト認定の模擬試験を受けてみた&lt;/a&gt;&amp;ldquo;のブログを読んでみてください。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NginxのログをFluentdでDynamoDBへ送る</title>
      <link>https://blog.mosuke.tech/entry/2017/09/03/fluentd_to_dynamodb/</link>
      <pubDate>Sun, 03 Sep 2017 15:48:40 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/09/03/fluentd_to_dynamodb/</guid>
      <description>&lt;p&gt;NginxのログをFluentdを使ってAWSのdynamoDBへ送る実験を行ったので、そのメモを残します。&lt;br&gt;
Fluetnd自体あまり触ったことがなかったので、その入門から、AWS DynamoDBへ送信するまでを紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ElasticSearch入門 インストールから検索、そしてKibanaまで</title>
      <link>https://blog.mosuke.tech/entry/2017/08/13/elasticsearch_basic/</link>
      <pubDate>Sun, 13 Aug 2017 16:28:48 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/08/13/elasticsearch_basic/</guid>
      <description>&lt;p&gt;ブログ記事の全文検索などをやりたくて、ElasticSearchはどんなもんじゃろか？と触ってみたのでメモ。
ElasticSearchの入門についてはたくさんの記事がすでにでていますが、本記事ではインストールからデータの投入、検索、そしてKibanaまで扱います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugoのサマリー機能を理解する。そしてブログのパフォーマンス改善へ。</title>
      <link>https://blog.mosuke.tech/entry/2017/08/06/hugo_summary/</link>
      <pubDate>Sun, 06 Aug 2017 15:38:05 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/08/06/hugo_summary/</guid>
      <description>&lt;p&gt;今まで、ブログのトップページは最新の数記事の記事全文を掲載していました。&lt;br&gt;
そのため、当然ながら記事内の画像や埋め込みの動画などすべて表示されるので、トップページの表示速度はとても遅くなります。&lt;br&gt;
そこで、サマリーだけを表示しようとHugoの&lt;code&gt;{{ .Summary }}&lt;/code&gt;を利用しようとしたのですが、とても長いサマリーが出てきてなぜかと困っていました。&lt;/p&gt;
&lt;p&gt;本記事は、Hugoのサマリー機能(Summary)についての解説と、うまくサマリー機能を利用することでブログのトップページのページスピードをあげることができたのでその紹介をする。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>英語でAWSソリューションアーキテクト認定の模擬試験に挑戦する</title>
      <link>https://blog.mosuke.tech/entry/2017/08/04/aws_certificate_practice_exam/</link>
      <pubDate>Fri, 04 Aug 2017 20:17:25 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/08/04/aws_certificate_practice_exam/</guid>
      <description>&lt;p&gt;こんにちは。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
タイトルの通り、&amp;quot;&lt;strong&gt;英語で&lt;/strong&gt;&amp;ldquo;AWSソリューションアーキテクト アソシエイトの認定の模擬試験を受けてみたので報告です。
英語で試験を受けることについて情報発信をしている人が少ないので参考になればと思います。&lt;br&gt;
そもそも、なぜそんなことをしたかって…？？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;今度、AWSの認定試験を受ける予定がある（日本語）&lt;/li&gt;
&lt;li&gt;今度、他のクラウドの認定試験を受ける予定がある（英語）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;というわけで、英語での試験があまりにも不安だったのと、AWS認定試験もどのみち受けるので、
練習を兼ねてAWS認定の模擬試験を英語で受けてみた、のである。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【更新中】Architecting for the Cloud -AWS Best Practices-を解読する</title>
      <link>https://blog.mosuke.tech/entry/2017/07/16/architecting_for_the_cloud/</link>
      <pubDate>Sun, 16 Jul 2017 13:45:59 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/07/16/architecting_for_the_cloud/</guid>
      <description>&lt;p&gt;本記事は、AWSソリューションアーキテクト認定試験の試験勉強として、「&lt;a href=&#34;https://d1.awsstatic.com/whitepapers/AWS_Cloud_Best_Practices.pdf&#34;&gt;Architecting for the Cloud&lt;/a&gt;」を読んでいて、そのまとめです。完全な翻訳ではありません。私の勝手な解釈もいくぶんか含んでいます。その点、理解した上でご自身の学習の参考にしてください。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Terraform×Rancherでマルチクラウドを一歩すすめる</title>
      <link>https://blog.mosuke.tech/entry/2017/07/14/master_cloud_malticloud/</link>
      <pubDate>Fri, 14 Jul 2017 15:33:38 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/07/14/master_cloud_malticloud/</guid>
      <description>&lt;p&gt;7月12日の&lt;a href=&#34;https://mastercloud.connpass.com/event/59832/&#34;&gt;MasterCloud#3&lt;/a&gt;で「Terraform×Rancherでマルチクラウドを一歩すすめる」という題で話してきました。&lt;br&gt;
本記事ではスライドはもちろん、文面で補足しながら話してきた内容をまとめます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo、PageSpeed対策で自動で画像を圧縮する</title>
      <link>https://blog.mosuke.tech/entry/2017/06/12/hugo_optimize_image/</link>
      <pubDate>Mon, 12 Jun 2017 23:33:12 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/06/12/hugo_optimize_image/</guid>
      <description>&lt;p&gt;最近Hugoを使ったブログに移転した。&lt;br&gt;
「&lt;a href=&#34;https://blog.mosuke.tech/entry/2017/05/28/blog_migration/&#34;&gt;はてなブログからHugoに移行。その際に行ったあれこれ。&lt;/a&gt;」&lt;/p&gt;
&lt;p&gt;せっかくブログを運営するからにはSEOも少しがんばりたい。&lt;br&gt;
PageSpeedで画像を最適化できるよっていわれたので、画像を圧縮させようと思った。&lt;br&gt;
しかし、気がつくと忘れてしまったりするので、&lt;br&gt;
Werckerを使って自動で最適化させることにした。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Werckerを使ってHugo&#43;Github PagesのCI/CD環境を整備する</title>
      <link>https://blog.mosuke.tech/entry/2017/06/04/hugo_deployment_with_wercker/</link>
      <pubDate>Sun, 04 Jun 2017 14:47:15 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/06/04/hugo_deployment_with_wercker/</guid>
      <description>&lt;p&gt;以前、はてなブログからHugoを使ったサイトに移行したことを書いた。&lt;br&gt;
こちら参照：&lt;a href=&#34;https://blog.mosuke.tech/entry/2017/05/28/blog_migration/&#34;&gt;はてなブログからHugoに移行。その際に行ったあれこれ。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今回、Hugoで記事を更新してからデプロイまでの流れをWerckerを使って自動化したので紹介する。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS Summit2017 Day2 ネットワーク設計入門のセッション</title>
      <link>https://blog.mosuke.tech/entry/2017/05/31/aws_summit_network/</link>
      <pubDate>Wed, 31 May 2017 19:25:20 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/05/31/aws_summit_network/</guid>
      <description>&lt;p&gt;弊社はプレミアムフライデー導入企業なのだが、最終金曜日に早く帰る必要はなく、月内でどこか1日15時に帰りましょうという制度になっている。&lt;br&gt;
金曜日が仕事の都合上取れなかったので、今月は5/31にプレミアムフライデー（プレミアムウェンズデー）を使った。&lt;br&gt;
ちょうどAWS Summit開催中だったのでのぞきにいった。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CloudFlare APIを使ってキャッシュを削除する</title>
      <link>https://blog.mosuke.tech/entry/2017/05/29/how_to_use_cloudflare_api/</link>
      <pubDate>Mon, 29 May 2017 20:06:31 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/05/29/how_to_use_cloudflare_api/</guid>
      <description>&lt;p&gt;最近ブログをはてなブログからHugoへ移行した。&lt;br&gt;
HugoのフロントにCloudFlareを利用している。&lt;br&gt;
ブログ移行についてはこちらを参照。&lt;br&gt;
「&lt;a href=&#34;https://blog.mosuke.tech/entry/2017/05/28/blog_migration/&#34;&gt;はてなブログからHugoに移行。その際に行ったあれこれ。&lt;/a&gt;」&lt;/p&gt;
&lt;p&gt;コンテンツをアップロードした場合などにCloudFlareのキャッシュを削除したく、&lt;br&gt;
APIを利用して効率よく作業できる環境を整えた。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>はてなブログからHugoに移行。移行の際に行ったことまとめ。</title>
      <link>https://blog.mosuke.tech/entry/2017/05/28/blog_migration/</link>
      <pubDate>Sun, 28 May 2017 13:02:14 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/05/28/blog_migration/</guid>
      <description>&lt;p&gt;2017年5月27日に2014年2月から約3年3ヶ月程度使ってきたはてなブログからHugoを使ったブログへ移行をした。&lt;br&gt;
長らく使いやすいブログを提供してきたはてなさんにはとても感謝している。&lt;br&gt;
はてなブログはとても魅力なブログプラットフォームであると感じているし、いまでもそう思うのだけれどいくつかの判断をした結果Hugoへの移行を決めた。&lt;br&gt;
本記事では、移行を決めた理由や移行する際に行ったこと、Hugoの実行環境などを紹介する。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>オブジェクトストレージの仕組みと活用シーンを正しく理解する</title>
      <link>https://blog.mosuke.tech/entry/2017/03/18/182252/</link>
      <pubDate>Sat, 18 Mar 2017 18:22:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/03/18/182252/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
Amazon S3をはじめとして、オブジェクトストレージが身近になってきています。
各クラウドベンダーはオブジェクトストレージサービスを提供しています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.aws.amazon.com/ja_jp/AmazonS3/latest/dev/Welcome.html&#34; target=&#34;_blank&#34;&gt;Amazon S3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/azure/storage/storage-introduction&#34; target=&#34;_blank&#34;&gt;Azure Blob Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/storage/&#34; target=&#34;_blank&#34;&gt;Google Cloud Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.alibabacloud.com/ja/product/oss&#34; target=&#34;_blank&#34;&gt;Alibaba Cloud OSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.idcf.jp/cloud/storage/&#34; target=&#34;_blank&#34;&gt;IDCF オブジェクトストレージ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注目をあびているオブジェクトストレージですが、その性質や特性をあまり理解しておらずを魔法のストレージとして理解されているケースも多いように感じます。クラウドプロバイダーとして働く身としては非常にもどかしい思いでいます！
なので原点に振り返ってそもそもオブジェクトストレージとはなんなのか。どんな特徴を持っているストレージなのか、まとめてみました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MSPJマイグレーションコンペ 2017に参加。勝つために必要なこと段取り。</title>
      <link>https://blog.mosuke.tech/entry/2017/02/20/184220/</link>
      <pubDate>Mon, 20 Feb 2017 18:42:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/02/20/184220/</guid>
      <description>&lt;p&gt;もーすけです。先日、2017年2月18日に「MSPJマイグレーションコンペティション 2017 Winter」に参加してきました。
MSPJマイグレーションコンペティション2017winterとは、日本MSP協会コンペティショングループが主催する、
次代を担う若手運用技術者同士の交流・競争を通して日本のMSP事業者における運用技術の向上を目指したコンペティションです。&lt;/p&gt;
&lt;p&gt;こういったコンペティションだとISUCONが有名かと思います。&lt;br&gt;
MSPJが開催するマイグレーションコンペティションもMSP事業者の「本当の業務に近い形でのコンペ」を通じた出題となっており、おもしろいコンペです。まだ認知度もあまりないらしく？参加人数は少ないが優勝するとお金はたくさんもらえるのでぜひ参加して見てほしいです。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;padding-bottom: 37.4732%; padding-top: 120px;&#34;&gt;&lt;a href=&#34;https://connpass.com/event/47825/&#34; data-iframely-url=&#34;//cdn.iframe.ly/45liS9t&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>クラウド上でのWordPressのスケールアウトを考える</title>
      <link>https://blog.mosuke.tech/entry/2017/01/04/223544/</link>
      <pubDate>Wed, 04 Jan 2017 22:35:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/01/04/223544/</guid>
      <description>&lt;body&gt;
&lt;p&gt;複数台サーバでの&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/WordPress&#34;&gt;WordPress&lt;/a&gt;の構築・運用について考える。&lt;br&gt;
実際に、とある&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%A6%A5%C9&#34;&gt;クラウド&lt;/a&gt;で分散環境の&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/WordPress&#34;&gt;WordPress&lt;/a&gt;を構築したのでその知見をまとめる。&lt;br&gt;
なるべく特定の&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%A6%A5%C9&#34;&gt;クラウド&lt;/a&gt;に特価しないものとして記載したい。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「嵐」 2016年振り返り</title>
      <link>https://blog.mosuke.tech/entry/2016/12/25/142744/</link>
      <pubDate>Sun, 25 Dec 2016 14:27:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/12/25/142744/</guid>
      <description>&lt;body&gt;
&lt;p&gt;だいぶお久しぶりのブログ。
そして恒例の年振り返りブログ。ついに2016年も終わってしまう。&lt;/p&gt;
&lt;p&gt;というわけで2016年を振り返りたいと思う。&lt;br&gt;
一応このサイトは技術ブログのはずなんだけど、プライベートのことが大いに混ざったポエムになってしまった。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>サーバーレスとはなにか。クラウドロックインを加速させる一手</title>
      <link>https://blog.mosuke.tech/entry/2016/10/02/212420/</link>
      <pubDate>Sun, 02 Oct 2016 21:24:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/10/02/212420/</guid>
      <description>&lt;body&gt;
&lt;p&gt;&lt;a href=&#34;http://tokyo.serverlessconf.io/&#34;&gt;ServerlessConf Tokyo&lt;/a&gt;に参加してきた。&lt;br&gt;
今年8月から&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%D1%A5%D6%A5%EA%A5%C3%A5%AF%A5%AF%A5%E9%A5%A6%A5%C9&#34;&gt;パブリッククラウド&lt;/a&gt;の事業に異動していて、&lt;br&gt;
開発者の立場より&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%A6%A5%C9&#34;&gt;クラウド&lt;/a&gt;提供側の立場として参加してきたので、また面白かった。&lt;/p&gt;
&lt;p&gt;せっかくなので、自分なりにサーバレスについてまとめる。&lt;br&gt;
クラウド提供側の立場から見たサーバレスについて考えてみます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>社内システム開発からパブリッククラウドの会社へジョインします</title>
      <link>https://blog.mosuke.tech/entry/2016/07/29/180000/</link>
      <pubDate>Fri, 29 Jul 2016 18:00:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/07/29/180000/</guid>
      <description>本日、2016年7月29日をもって、新卒から３年４ヶ月働いてきた部署が最後となり、8月1日から異動（出向）する。 社内転職制度を使って、自らの</description>
    </item>
    
    <item>
      <title>PHPでHTTPヘッダー、x-forwarded-forを受け取る方法</title>
      <link>https://blog.mosuke.tech/entry/2016/07/26/215939/</link>
      <pubDate>Tue, 26 Jul 2016 21:59:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/07/26/215939/</guid>
      <description>&lt;p&gt;こんにちは@mosuke5です。&lt;br&gt;
もともとApach+PHPで動作していたシステムに、リバースプロキシ（Nginx）を前段に挟むことになりました。理由は、もともと社内ネットワークでのみ利用するシステムだったのですが、インターネットの外からも利用することになり、インターネットからの入り口にリバースプロキシを導入したからです。&lt;br&gt;
つまり、Nginx-&amp;gt;Apache-&amp;gt;PHPという構成になりました。&lt;br&gt;
リバースプロキシを導入した際によく問題となることだが、Apacheからみるとすべてリバースプロキシから通信がきているようにみえます。
接続元のIPアドレスがすべてリバースプロキシのもの変わってしまいます。&lt;/p&gt;
&lt;p&gt;そこで、HTTPヘッダーに接続元のIPアドレス追加しアプリ側（PHP）で受け取る方法とその際の注意点を書きます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nginxの仕組みについて入門</title>
      <link>https://blog.mosuke.tech/entry/2016/06/04/180122/</link>
      <pubDate>Sat, 04 Jun 2016 18:01:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/06/04/180122/</guid>
      <description>普段Nginxを使ってはいるものの、その仕組やなぜNignxを使うべきなのかというところがあまりわかっていなかったので、 改めてNginxを入</description>
    </item>
    
    <item>
      <title>今度こそ入門するtmux</title>
      <link>https://blog.mosuke.tech/entry/2016/04/15/002004/</link>
      <pubDate>Fri, 15 Apr 2016 00:20:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/04/15/002004/</guid>
      <description>tmuxの入門は何度目だろうか… SoftwareDesignの2015年7月号を見ながら、何度目かの入門をしたのでメモする。 ブログに書いたの</description>
    </item>
    
    <item>
      <title>HerokuをRailsアプリのステージング環境として使う</title>
      <link>https://blog.mosuke.tech/entry/2016/03/28/181636/</link>
      <pubDate>Mon, 28 Mar 2016 18:16:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/03/28/181636/</guid>
      <description>趣味で作っているアプリ(Rails)があるのだが、はじめHerokuで運用しようと検討していたが、 データ量が多いためすぐにHobbyプランで</description>
    </item>
    
    <item>
      <title>Github Pagesと、独自ドメイン適応時の通信経路について</title>
      <link>https://blog.mosuke.tech/entry/2016/03/19/232437/</link>
      <pubDate>Sat, 19 Mar 2016 23:24:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/03/19/232437/</guid>
      <description>執筆当時の状況で、現在は異なる状況のように見えた。そのため本記事は検証の観点としてとどめてください。 今更ながらgithubページでプロフィー</description>
    </item>
    
    <item>
      <title>実装案を使って、DBのViewの使いどころを検討する</title>
      <link>https://blog.mosuke.tech/entry/2016/03/16/175431/</link>
      <pubDate>Wed, 16 Mar 2016 17:54:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/03/16/175431/</guid>
      <description>ある実装についてどのように実装するか悩んだ。 その悩んだ過程や実装案をメモする。似たようなケースの実装案として参考になればと思う。 状況 ある申請</description>
    </item>
    
    <item>
      <title>【錦織圭も分析】ATP TennisのデータスクレイパーGem作った</title>
      <link>https://blog.mosuke.tech/entry/2016/03/06/140531/</link>
      <pubDate>Sun, 06 Mar 2016 14:05:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/03/06/140531/</guid>
      <description>背景 このブログは基本的に技術ブログとしてやっているので、 テニスの話題ははじめてだが、テニスがすごく好きだ。 特に、プロの試合の観戦はとても好き</description>
    </item>
    
    <item>
      <title>社内マリカー大会やりました！運営の工夫どころとかまとめ</title>
      <link>https://blog.mosuke.tech/entry/2016/02/07/210300/</link>
      <pubDate>Sun, 07 Feb 2016 21:03:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/02/07/210300/</guid>
      <description>弊社では、年に一度、社内のコミュニケーション促進で、いろんな部署が集まって行う懇親会がある。 そこでは、恒例行事として何かしらのゲームを行って</description>
    </item>
    
    <item>
      <title>Vagrant×Ansible環境の３つのスタイルとそのメリット・デメリットについて</title>
      <link>https://blog.mosuke.tech/entry/2016/01/25/222150/</link>
      <pubDate>Mon, 25 Jan 2016 22:21:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/01/25/222150/</guid>
      <description>Vagrant×Ansibleで開発環境を作っているみなさんは、 どんなふうにそれを実現していますか？ きっといくつかのやり方、考え方があると思</description>
    </item>
    
    <item>
      <title>2015年振り返り</title>
      <link>https://blog.mosuke.tech/entry/2015/12/28/150042/</link>
      <pubDate>Mon, 28 Dec 2015 15:00:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/12/28/150042/</guid>
      <description>去年に続き、2015年で技術分野でなにがあったか簡単に振り返りました。 2014年を思い返して… - Goldstine研究所 1. Vim::Fact</description>
    </item>
    
    <item>
      <title>AnsibleとServerspecの実行をRakeタスクにまとめる</title>
      <link>https://blog.mosuke.tech/entry/2015/12/17/192554/</link>
      <pubDate>Thu, 17 Dec 2015 19:25:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/12/17/192554/</guid>
      <description>&lt;p&gt;こんにちは&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;もーすけ&lt;/a&gt;です。&lt;br&gt;
私が趣味で開発しているシステムでは、Ansibleを使って、サーバ構築からアプリケーションのデプロイまで実行できるように管理しています。
そして、serverspecを使って、そのサーバに対するインフラテストも行っています。しかし、その運用にいくつか課題点がありました。&lt;/p&gt;
&lt;p&gt;その課題点についてと、課題点へ対策したことについて書きます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ansible、実行速度高速化の実験。ControlMasterとPipeliningについて</title>
      <link>https://blog.mosuke.tech/entry/2015/12/01/181304/</link>
      <pubDate>Tue, 01 Dec 2015 18:13:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/12/01/181304/</guid>
      <description>&lt;body&gt;
Ansibleの実行速度に不満を持っている人は多いのではないだろうか。&lt;br&gt;
自分もそのひとりであったのだが、ControlMasterやpipeliningといった機能を使って高速化に成功した。
本ブログでは、その効果の実験を行ったので参考にしてください。</description>
    </item>
    
    <item>
      <title>serverspecを使ったインフラのテストを導入した理由と工夫している点</title>
      <link>https://blog.mosuke.tech/entry/2015/11/02/161744/</link>
      <pubDate>Mon, 02 Nov 2015 16:17:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/11/02/161744/</guid>
      <description>※執筆後、業務でもserverspecを利用し始めたのもあり、業務レベルでの実践例も追記しました。 運営中のVim::Factoryでserv</description>
    </item>
    
    <item>
      <title>Ansibleを踏み台サーバ越しに実行する方法</title>
      <link>https://blog.mosuke.tech/entry/2015/09/25/232751/</link>
      <pubDate>Fri, 25 Sep 2015 23:27:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/09/25/232751/</guid>
      <description>&lt;body&gt;
Ansibleを使ってどんどん構築の自動化を進めている。  
すすめていくと、Ansibleを実行する端末からネットワーク的に直接届かないサーバに対してプロビジョニングしたいケースがでてくる。そこで、踏み台サーバ越しにAnsibleでプロビジョニングしていくことを試してみる。</description>
    </item>
    
    <item>
      <title>デスクトップUbuntuにVNC接続。SSHを活用してセキュアに接続する</title>
      <link>https://blog.mosuke.tech/entry/2015/08/13/000440/</link>
      <pubDate>Thu, 13 Aug 2015 00:04:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/08/13/000440/</guid>
      <description>&lt;body&gt;
&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;UbuntuのデスクトップにVNCを使ってリモートデスクトップを行う方法を紹介します。またその際に、SSHを活用してセキュアに接続することを行ってみます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Packerやる前にKickstartはじめよう</title>
      <link>https://blog.mosuke.tech/entry/2015/07/31/211542/</link>
      <pubDate>Fri, 31 Jul 2015 21:15:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/07/31/211542/</guid>
      <description>1.はじめに 開発環境はVirualboxを使ったVagrantを利用しているが、 本番環境はAWSだったりKVMだったり違う仮想化機構で動作し</description>
    </item>
    
    <item>
      <title>DockerとWebSocketを使って、vimの設定をブラウザで即体感できるサービスを作った</title>
      <link>https://blog.mosuke.tech/entry/2015/07/19/135844/</link>
      <pubDate>Sun, 19 Jul 2015 13:58:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/07/19/135844/</guid>
      <description>※ブログのドメイン変更によりはてブが消えてしまいましたが、450はてぶくらいついてました。こちらが当時の痕跡 2014年の秋から`@mogul</description>
    </item>
    
    <item>
      <title>PostgreSQL環境でFuelPHPのDBマイグレーションを使う</title>
      <link>https://blog.mosuke.tech/entry/2015/06/17/212852/</link>
      <pubDate>Wed, 17 Jun 2015 21:28:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/06/17/212852/</guid>
      <description>今更FuelPHP感はあるのだが、 postgresql利用時のFuelPHPのmigration導入について、注意点をまとめた。 でも、結論は</description>
    </item>
    
    <item>
      <title>Ajaxの嫌いだった部分をJsRenderで心地良くした</title>
      <link>https://blog.mosuke.tech/entry/2015/06/13/231917/</link>
      <pubDate>Sat, 13 Jun 2015 23:19:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/06/13/231917/</guid>
      <description>1. はじめに ぼくはフロントエンドは本業ではありません。 jsはあまり好きではありません。 そしてAjax通信後にhtmlをアウトプットする際にjs</description>
    </item>
    
    <item>
      <title>sinatra-assetpackをproduction環境で使う時にの注意点</title>
      <link>https://blog.mosuke.tech/entry/2015/05/08/174732/</link>
      <pubDate>Fri, 08 May 2015 17:47:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/05/08/174732/</guid>
      <description>&lt;body&gt;
&lt;p&gt;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Sinatra&#34;&gt;Sinatra&lt;/a&gt;アプリケーションで、JSファイルを圧縮する&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/sinatra&#34;&gt;sinatra&lt;/a&gt;-assetpackを利用していて、&lt;br&gt;
production環境で動作させようとしたら動かなくなってしまった問題について調査した。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ansibleで最新のMySQLをインストールする。MySQL-shared-compatの役割。</title>
      <link>https://blog.mosuke.tech/entry/2015/04/15/171127/</link>
      <pubDate>Wed, 15 Apr 2015 17:11:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/04/15/171127/</guid>
      <description>&lt;p&gt;CentOS 6.5環境でAnsibleを使って最新のMySQLのセットアップをしようと思った際にハマったことをまとめた。&lt;br&gt;
本質的にはAnsibleというよりLinux RPMパッケージのはなし。
非常に簡単なサンプルコードも載せて解説します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SSHエージェントフォワード後に他のユーザでgit cloneする(鍵を使う)ことに関する考察</title>
      <link>https://blog.mosuke.tech/entry/2015/04/05/212518/</link>
      <pubDate>Sun, 05 Apr 2015 21:25:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/04/05/212518/</guid>
      <description>SSHのエージェントフォワードした後に、接続したユーザとは別のユーザでgit cloneしたいことがあった。 それについて調べていく中で学習した</description>
    </item>
    
    <item>
      <title>Ruby, thin(bundler利用)を使った環境でのアプリの自動起動設定</title>
      <link>https://blog.mosuke.tech/entry/2015/02/22/211316/</link>
      <pubDate>Sun, 22 Feb 2015 21:13:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/02/22/211316/</guid>
      <description>bunlderを使ったWebアプリをプロダクション環境で動かすときに、アプリの起動をどうやって実現しているだろうか。 Apache Passengerを使</description>
    </item>
    
    <item>
      <title>SFTPにもFTPのような転送モードの選択が必要なのか</title>
      <link>https://blog.mosuke.tech/entry/2015/02/17/220526/</link>
      <pubDate>Tue, 17 Feb 2015 22:05:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/02/17/220526/</guid>
      <description>FTPやSFTPでの転送モードの話。 ついこの前、WinSCPを利用していた隣の席の人が転送モードを選んでいて、 「SFTPには転送モードはない</description>
    </item>
    
    <item>
      <title>SSHポートフォワードを通してhttps接続をするときの注意点</title>
      <link>https://blog.mosuke.tech/entry/2015/02/11/172123/</link>
      <pubDate>Wed, 11 Feb 2015 17:21:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/02/11/172123/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
SSHローカルフォワードを使いこなしてますか？SSHを制するものはインフラを制するとも言われています。最近良く使っているのですが、ローカルポートフォワードでhttps接続をする際に間違えやすいポイントがあるので紹介します。&lt;/p&gt;
&lt;p&gt;下記は、以前に書いたSSHのローカルポートフォワードに関する記事です。まず基本的な概念や使い方を知りたい方は書きを参照してください。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2014/12/31/170545/&#34; data-iframely-url=&#34;//cdn.iframe.ly/wDM0LAq&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>dockerで特定ユーザでログインした状態のシェル環境を提供する</title>
      <link>https://blog.mosuke.tech/entry/2015/01/24/213255/</link>
      <pubDate>Sat, 24 Jan 2015 21:32:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/01/24/213255/</guid>
      <description>dockerの一般的な利用の仕方ではあまり想定されないケースかもしれないが、 特定のユーザでログインした状態のコンテナを作りたいという場面に遭</description>
    </item>
    
    <item>
      <title>xinetdを使ってLinux上のサービスを常時起動せずに利用する</title>
      <link>https://blog.mosuke.tech/entry/2015/01/02/013658/</link>
      <pubDate>Fri, 02 Jan 2015 01:36:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/01/02/013658/</guid>
      <description>&lt;body&gt;
&lt;p&gt;使用頻度は低いが、常に可動させておきたいサービスをどう管理するか。使用頻度の低いサービスのデーモンをメモリに常駐させておくのはサーバのリソース効率が悪いというのは言うまでもないだろう。&lt;br&gt;
そこでスーパーサーバ(代表的なものにxinted)というたぐいのものを使うことで、使用頻度の低いサービスの窓口のサービスのみ起動しておき、要求があったときだけ特定のサービスを起動させることが可能だ。&lt;/p&gt;
&lt;p&gt;スーパーサーバを実際に触ってみたのでメモする。&lt;/p&gt;
&lt;p&gt;スーパーサーバというと代表的なものにinetdとxinetdがあるが、&lt;br&gt;
xinetdはinetdの拡張版で、アクセス制御などの機能を搭載しているとのことだったので、今回はxinetdを設定してみることにした。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2014年を思い返して…</title>
      <link>https://blog.mosuke.tech/entry/2015/01/01/161826/</link>
      <pubDate>Thu, 01 Jan 2015 16:18:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/01/01/161826/</guid>
      <description>2015年になってしまいました。 2014年に技術分野で印象に残ってること３つを思い返してみる。 1. インフラ会 @mogulla3と軽いノリで始め</description>
    </item>
    
    <item>
      <title>SSHを制してインフラを制する。ローカルポートフォワードを使いこなす</title>
      <link>https://blog.mosuke.tech/entry/2014/12/31/170545/</link>
      <pubDate>Wed, 31 Dec 2014 17:05:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/12/31/170545/</guid>
      <description>&lt;p&gt;SSHを単なるサーバへのログインのツールとして使っていませんか？&lt;br&gt;
SSHを制する者がインフラを制する、なんていわれることもあります。
SSHにはポートフォワーディングをはじめとしたいろんな使い方があります。
今日は実際にローカルポートフォワーディングを理解しみなさんに使いこなしてもらえるようになっていただこうと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自作PC、使用したパーツと活用方法について</title>
      <link>https://blog.mosuke.tech/entry/2014/12/29/154251/</link>
      <pubDate>Mon, 29 Dec 2014 15:42:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/12/29/154251/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。もう年末ですね。&lt;br&gt;
さて、2014年の年末は遊びとして友人と自作PCを作りました。どのように作ったのか、なんのパーツを使ったのか、その後にどのように活用しているのかなどを共有していきたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【VPS1台でインフラ勉強】SoftEtherを使ってVPN構築</title>
      <link>https://blog.mosuke.tech/entry/2014/12/07/212156/</link>
      <pubDate>Sun, 07 Dec 2014 21:21:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/12/07/212156/</guid>
      <description>&lt;body&gt;
&lt;p&gt;おつかれさまです。もーすけです。&lt;br&gt;
VPS1台でインフラ勉強シリーズの第3回目でVPN構築を行ったのでその知見を残しておきます。&lt;/p&gt;
&lt;li&gt;第1回 &lt;a href=&#34;https://blog.mosuke.tech/entry/2014/10/09/230555/&#34;&gt;サーバ複数台構成、Nginxでリバースプロキシ構築&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回 &lt;a href=&#34;https://blog.mosuke.tech/entry/2014/11/09/171436&#34;&gt;HAProxyでロードバランサ構築&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回 SoftEtherを使ってVPN構築&lt;/li&gt;</description>
    </item>
    
    <item>
      <title>Ansible、ソースインストールする際のPalybookの書き方</title>
      <link>https://blog.mosuke.tech/entry/2014/11/16/153223/</link>
      <pubDate>Sun, 16 Nov 2014 15:32:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/11/16/153223/</guid>
      <description>&lt;p&gt;こんにちは。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
最近、Ansibleを使い始めました、yumやapt-getでインストールできるものは記述も簡単でいいのですが、
どうしてもソースインストールが必要な場合があります。ソースコードでのインストールは結構手間がかかるので、ソースインストールを行う際のPlaybookの書き方と注意点をまとめました。&lt;/p&gt;
&lt;p&gt;まず、ソースインストールを行うには以下のフローを行うと仮定します。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ソースファイルの取得(tarで固められていると仮定)&lt;/li&gt;
&lt;li&gt;tarファイルの解凍&lt;/li&gt;
&lt;li&gt;解答してできたディレクトリへ移動&lt;/li&gt;
&lt;li&gt;configure&lt;/li&gt;
&lt;li&gt;make&lt;/li&gt;
&lt;li&gt;make install&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>【VPS1台でインフラ勉強】HAProxyでロードバランサーを構築</title>
      <link>https://blog.mosuke.tech/entry/2014/11/09/171436/</link>
      <pubDate>Sun, 09 Nov 2014 17:14:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/11/09/171436/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
前回の&lt;a href=&#34;https://blog.mosuke.tech/entry/2014/10/09/230555&#34;&gt;【VPS1台でインフラ勉強】サーバ複数台構成、Nginxでリバースプロキシ構築&lt;/a&gt;に続き、同様の環境を用いて、ロードバランサ構築を行っていきます。
ロードバランサの構築にはHAProxyを利用します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1回 &lt;a href=&#34;https://blog.mosuke.tech/entry/2014/10/09/230555&#34;&gt;サーバ複数台構成、Nginxでリバースプロキシ構築&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回 HAProxyでロードバランサ構築&lt;/li&gt;
&lt;li&gt;第3回 &lt;a href=&#34;https://blog.mosuke.tech/entry/2014/12/07/212156&#34;&gt;SoftEtherを使ってVPN構築&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>【VPS1台でインフラ勉強】サーバ複数台構成、Nginxでリバースプロキシ構築</title>
      <link>https://blog.mosuke.tech/entry/2014/10/09/230555/</link>
      <pubDate>Thu, 09 Oct 2014 23:05:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/10/09/230555/</guid>
      <description>&lt;body&gt;
&lt;p&gt;ロードバランシングとか&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF%A5%EA%A5%F3%A5%B0&#34;&gt;クラスタリング&lt;/a&gt;とかリバースプロキシとか、&lt;br&gt;
業務でも使っているし、概念とかはわかってるけど、自分で構築したことはやっぱりない。&lt;/p&gt;
&lt;p&gt;自分で構築してみたいなーと思いつつもあたりまえだけど、サーバやネットワーク機器をそう簡単に調達もできない。&lt;br&gt;
お金も当然ない。&lt;/p&gt;
&lt;p&gt;というわけで、さくら&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/VPS&#34;&gt;VPS&lt;/a&gt;で仮想化つかってロードバランシングとか&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF%A5%EA%A5%F3%A5%B0&#34;&gt;クラスタリング&lt;/a&gt;とかリバースプロキシとか勉強しましょうという「サーバインフラ会」を友人と始めた。その第１回目である。&lt;/p&gt;
&lt;li&gt;第1回 サーバ複数台構成、Nginxでリバースプロキシ構築&lt;/li&gt;
&lt;li&gt;第2回 &lt;a href=&#34;https://blog.mosuke.tech/entry/2014/11/09/171436&#34;&gt;HAProxyでロードバランサ構築&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回 &lt;a href=&#34;https://blog.mosuke.tech/entry/2014/12/07/212156&#34;&gt;SoftEtherを使ってVPN構築&lt;/a&gt;&lt;/li&gt;</description>
    </item>
    
    <item>
      <title>CentOS7でのiptables設定方法について</title>
      <link>https://blog.mosuke.tech/entry/2014/09/20/180326/</link>
      <pubDate>Sat, 20 Sep 2014 18:03:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/09/20/180326/</guid>
      <description>&lt;p&gt;こんにちは、@mosuke5です。&lt;br&gt;
最近、VPSのOSをCentOS7にしましたが、なかなか手付かずでiptablesの設定を放置していました。
sshの最低限の設定はしていたましたが、ほんとうに良くないですので、みなさんはこういうことがないように気をつけてください。&lt;br&gt;
久しぶりに手が空いたので設定しようとしましたが、そもそも &lt;code&gt;/etc/sysconfig/iptables&lt;/code&gt; がない。
CentOS7からのsystemctlでiptablesのサービスを確認してもでてこない。さてどうやって設定したらいいのかCentOS6の脳みそで困ってしまいました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>D3.js、DBからのデータ連携方法の検討</title>
      <link>https://blog.mosuke.tech/entry/2014/09/15/135611/</link>
      <pubDate>Mon, 15 Sep 2014 13:56:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/09/15/135611/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
Web上でのデータのグラフ化にどんな方法をとっていますか？いろいろ検討して&lt;a href=&#34;https://d3js.org/&#34;&gt;D3.js&lt;/a&gt;が非常に良さそうだったので使ってみています。今回、データベースにあるデータを読み込ませる方法についていくつか検討してみました。&lt;/p&gt;
&lt;p&gt;例えば以下の状況を考えます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ArduinoをEthernetシールドを使ってネットワークへ繋げる</title>
      <link>https://blog.mosuke.tech/entry/2014/09/13/111537/</link>
      <pubDate>Sat, 13 Sep 2014 11:15:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/09/13/111537/</guid>
      <description>&lt;p&gt;もーすけです。前回はArduinoの入門の記事を書きました。&lt;br&gt;
今日は、Ethernetシールドを使ってネットワークへ繋げることをやってみます。
Arduinoは標準のままでは、PCとケーブルでつないでシリアル通信しかできません。
やはりデータの取得したあとにサーバに送ったり、サーバ上のデータを元に挙動を変えたり、ネットワーク通信は必須です。
というわけでEthernetシールドも買ったので活用していきます。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2014/07/21/231946/&#34; data-iframely-url=&#34;//cdn.iframe.ly/0bOcPc1&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>これだけは抑えておきたい、Arduino入門時に学ぶべきこと</title>
      <link>https://blog.mosuke.tech/entry/2014/07/21/231946/</link>
      <pubDate>Mon, 21 Jul 2014 23:19:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/07/21/231946/</guid>
      <description>&lt;body&gt;
&lt;p&gt;もーすけです。前々からArduino自体はもっていたし、ちょろっと触ったことはあったのだが、
最近に大学時代の研究室の仲間とArduino勉強会をやることになり、それに向けて友人と再入門したので入門プログラムを作ってみた。&lt;br&gt;
Arduino入門時にこれだけは知っておきたい事項をプログラム形式にまとめた。&lt;/p&gt;
&lt;p&gt;もちろん、不足部分もたくさんあるが、これだけわかれば楽しめるようになると思う。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ER図作成ツール MySQL Workbench を使ってみる</title>
      <link>https://blog.mosuke.tech/entry/2014/05/06/192424/</link>
      <pubDate>Tue, 06 May 2014 19:24:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/05/06/192424/</guid>
      <description>&lt;body&gt;
&lt;p&gt;表題の通りER図作成ツールというものを使ってみました。&lt;br&gt;
現代では、WebアプリケーションのフレームワークにDBマイグレーションのような機能を持ち、スクリプト的にDB構造を管理することが多いかもしれません。しかし、時としてER図を管理したい場合もあるのではないでしょうか。&lt;br&gt;
ER図とかテーブル構造はよくExcelでまとめて管理していましたが、規模が大きくなると辛いので試してみました。&lt;/p&gt;
&lt;p&gt;試してみようと思ったきっかけは、ソフトウエアデザインを読んでいてER図作成ツールなるものがでてきたので、便利そうと思ったからです。&lt;br&gt;
調べると主なフリーのER図作成ツールは以下があるようです。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;DBDesigner&lt;/li&gt;
&lt;li&gt;A5-SQLmk-2&lt;/li&gt;
&lt;li&gt;AmaterasERD&lt;/li&gt;
&lt;li&gt;MySQL Workbench&lt;/li&gt;
&lt;li&gt;ERMaster&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(参考) &lt;a href=&#34;http://treeapps.hatenablog.com/entry/20110505/p1&#34;&gt;http://treeapps.hatenablog.com/entry/20110505/p1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;この中でMacで使えそうなのがMySQL Workbenchしかなかったのでこちらを利用してみます。&lt;br&gt;
本当はMySQLといった製品に縛られないツールがよかったのだけど仕方ないですね。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>データベースの隔離性水準とはなにか</title>
      <link>https://blog.mosuke.tech/entry/2014/03/30/004337/</link>
      <pubDate>Sun, 30 Mar 2014 00:43:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/03/30/004337/</guid>
      <description>&lt;p&gt;こんにちは。@mosuke5です。&lt;br&gt;
少し前のブログに引き続きデータベーススペシャリストの勉強をしてその中で気になったことを調べたのでまとめます。
今回は「隔離性水準」について調べてみました。前回の記事はこちらです。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2014/02/28/232846/&#34; data-iframely-url=&#34;//cdn.iframe.ly/7pjb9WI&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>システム担当者が知るべきエンタープライズシステムのネットワーク構成</title>
      <link>https://blog.mosuke.tech/entry/2014/03/09/212520/</link>
      <pubDate>Sun, 09 Mar 2014 21:25:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/03/09/212520/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
本ブログでは、オンプレミス環境でエンタープライズシステムの運用を担当している初心者向けのネットワーク知識の勘所をお伝えするものです。
わたしは、学生の頃にWebアプリケーションの開発などのシステム開発に携わっており、その後にモバイル通信キャリアのエンタープライズシステムの開発・運用を担当しました。オンプレミスの環境でのシステムであり、システム担当者といえ最低限ネットワークの知識も必要でした。&lt;/p&gt;
&lt;p&gt;世の中のネットワークの書籍や情報では、ネットワークエンジニア向けの情報が多く、それぞれの技術の詳細についての情報はたくさんあります。一方で、業務としてシステム担当が知っておくべきネットワークの情報の関連性などに関する情報は非常に少ないです。
実践的な構成例を元に、システム担当者が知っておくべきネットワークの情報をまとめました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>INNER JOIN とWHERE結合の違いについて理解する</title>
      <link>https://blog.mosuke.tech/entry/2014/02/28/232846/</link>
      <pubDate>Fri, 28 Feb 2014 23:28:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/02/28/232846/</guid>
      <description>&lt;p&gt;こんにちは。@mosuke5です。&lt;br&gt;
近頃、&lt;a href=&#34;https://www.jitec.ipa.go.jp/1_11seido/db.html&#34;&gt;データベーススペシャリスト&lt;/a&gt;の資格試験の勉強をしています。理由は、普段システムの開発・運用を行っているのですが、障害がデータベース起因のことが非常に多いです。また社内にデータベースに詳しい人も少ないので、どうしてもベンダー頼みになってしまうことも多いからです。&lt;br&gt;
データベースの運用とは少しまた違うのですが、その第一歩としてデータベーススペシャリストを撮ろうと考えています。&lt;/p&gt;
&lt;h5 id=&#34;追記&#34;&gt;追記&lt;/h5&gt;
&lt;p&gt;その後無事に資格の取得できました。&lt;br&gt;
ちなみにIPA系はいつも&lt;a href=&#34;https://amzn.to/2Xeg1Yu&#34; target=&#34;_blank&#34;&gt;このシリーズ&lt;/a&gt;で勉強しています。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
