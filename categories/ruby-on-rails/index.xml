<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on Rails on Goldstine研究所</title>
    <link>https://blog.mosuke.tech/categories/ruby-on-rails/</link>
    <description>Recent content in Ruby on Rails on Goldstine研究所</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 26 May 2019 17:30:51 +0900</lastBuildDate>
    
	<atom:link href="https://blog.mosuke.tech/categories/ruby-on-rails/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[基礎] ElasticSerachなどの外部コンポーネントがあるときのテスト</title>
      <link>https://blog.mosuke.tech/entry/2019/05/26/elasticsearch-test/</link>
      <pubDate>Sun, 26 May 2019 17:30:51 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/05/26/elasticsearch-test/</guid>
      <description>&lt;p&gt;お久しぶりです。@mosuke5です。&lt;br /&gt;
新しい会社に入って１ヶ月ほど経ちましたが生きています。
今回は、ElasticSearchを題材にしますが外部コンポーネントを利用しているアプリケーションのテストについてです。
すごく初歩的なところですが、いくつか考えなければいけないポイントもあったのでまとめました。&lt;/p&gt;

&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;

&lt;p&gt;今回の題材は非常にシンプルな検索機能をもったアプリケーションです。
構成はアプリケーションはRailsで、検索エンジンを担うのがElastiCsearchという前提です。&lt;/p&gt;

&lt;p&gt;アプリケーションがもつmethodは３つで以下としています。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;GET &amp;lsquo;/&amp;rsquo;  =&amp;gt; &amp;lsquo;Hello&amp;rsquo;を返す&lt;/li&gt;
&lt;li&gt;GET &amp;lsquo;/search&amp;rsquo; =&amp;gt; GETパラメータ&amp;rsquo;q&amp;rsquo;のキーワードで検索した結果をjsonで返す&lt;/li&gt;
&lt;li&gt;POST &amp;lsquo;/update&amp;rsquo; =&amp;gt; 所定のjsonファイルをPOSTするとbulkでinsertされ、その結果をjsonで返す&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Docker Compose上でのRailsアプリケーションの開発フロー</title>
      <link>https://blog.mosuke.tech/entry/2018/05/02/rails-app-on-docker/</link>
      <pubDate>Wed, 02 May 2018 23:14:44 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/05/02/rails-app-on-docker/</guid>
      <description>&lt;p&gt;早いものGWも終わり一週間が経ってしまいました。&lt;br /&gt;
長期の連休になるとだいたい自分は趣味のアプリケーション開発をよくすすめています（ふだんからやりたいけどなかなかできない）。今年のGWも趣味アプリケーションの開発をしてました。&lt;/p&gt;

&lt;p&gt;いま作っているアプリケーションは自分の英語学習用のサービスなのですが(サービスについては別途どこかでご紹介したい)、新しい技術を実際に試す場としても利用しています。自分はいつも趣味アプリケーションで新しいことを試してみて、よかったらそれを職場にもっていくことが多いです。&lt;/p&gt;

&lt;p&gt;アプリケーションはRailsで書いているのですが、Railsの他にMySQLやNginx、ElasticSearch、Kibanaなど関連するコンポーネントが多いです。
そのため、Docker Composeを利用して動かすことにしています。Dockerは以前から使っていたのですが、実際にアプリケーションのせてとして開発・運用してみると、いろいろ問題があり試行錯誤することになりました。&lt;/p&gt;

&lt;p&gt;GWはその部分と主に格闘していて、最終的にそこそこ良い開発フローを整えることができました。今日はそのご紹介です。&lt;br /&gt;
※もちろん、現時点でのやり方であり、改善しているので現状と異なることも多いと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HerokuをRailsアプリのステージング環境として使う</title>
      <link>https://blog.mosuke.tech/entry/2016/03/28/181636/</link>
      <pubDate>Mon, 28 Mar 2016 18:16:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/03/28/181636/</guid>
      <description>趣味で作っているアプリ(Rails)があるのだが、はじめHerokuで運用しようと検討していたが、 データ量が多いためすぐにHobbyプランで</description>
    </item>
    
  </channel>
</rss>