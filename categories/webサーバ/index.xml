<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Webサーバ on Goldstine研究所</title>
    <link>https://blog.mosuke.tech/categories/web%E3%82%B5%E3%83%BC%E3%83%90/</link>
    <description>Recent content in Webサーバ on Goldstine研究所</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 04 Jun 2016 18:01:00 +0900</lastBuildDate>
    
	<atom:link href="https://blog.mosuke.tech/categories/web%E3%82%B5%E3%83%BC%E3%83%90/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginxの仕組みについて入門</title>
      <link>https://blog.mosuke.tech/entry/2016/06/04/180122/</link>
      <pubDate>Sat, 04 Jun 2016 18:01:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2016/06/04/180122/</guid>
      <description>普段Nginxを使ってはいるものの、その仕組やなぜNignxを使うべきなのかというところがあまりわかっていなかったので、 改めてNginxを入門しその仕組などについて調べてみた。
勉強不足もあって、間違ってることもあるかもしれないがその際は教えて下さい。
1. C10K問題 まず、Nginxを理解する上でC10K問題について知る必要がある。
C10K問題とは下記の問題のことだ。
ハードウェアの性能上は問題がなくても、クライアント数があまりにも多くなるとサーバがパンクする問題のこと。 C は「Client（クライアント）」の頭文字、10K は「1 万台」を意味する。「クライアント 1 万台問題」ともいわれる。
（C10K 問題とは - はてなキーワード より引用）
 2. 従来のWebサーバのアーキテクチャ  prefork Apacheのデフォルトのアーキテクチャなどで採用されている。
特徴としては、１リクエストに対して１プロセスが処理する。
すなわち同時接続が 1000であれば 1000個のプロセスが必要となる。

worker リクエストはスレッドが処理する。
スレッドは１プロセスのなかで複数立ち上げることができる。
プロセス数は少なくて済むが、同時接続が1000であれば1000個のスレッドが必要となる。
Apacheで指定可能なアーキテクチャの１つ。

いずれにしても、1000の同時接続があれば、1000のプロセスやスレッドが必要ということだ。
プロセス/スレッド数が多くなってくると「コンテキストスイッチ」が多く発生し、処理が遅くなってしまう。
 コンテキストスイッチとは コンテキストスイッチとは、コンピュータの処理装置（CPU）が現在実行している処理の流れ（プロセス、スレッド）を一時停止し、別のものに切り替えて実行を再開すること。
（コンテキストスイッチとは｜コンテキストスイッチング｜context switch - 意味/定義 ： IT用語辞典 より引用）
 3. Nginxのアーキテクチャ  NginxがC10K 問題を解決するために開発されたともいわれている。
上記のような課題を解決するようなアーキテクチャを採用している。

ワーカプロセスがリクエストを処理する。
前述のpreforkやworkerと決定的に違うところは、１つのワーカプロセスが複数のリクエストを処理するということだ。
また、マスタープロセスはワーカプロセスの立ち上げや、制御、管理などが主な仕事。
Nginxを終了あるいは再起動、設定ファイルを再読み込みして変更を反映するなど。
下記のような仕組みがNginxの高速化（C10K問題対応）を可能としている。
シングルスレッド 接続ごとにプロセスやスレッドを立ち上げていては、C10K問題に対応できない。
そこで、Nginxは１つのスレッドで処理を行うようにしている。
それにより、コンテキストスイッチと呼ばれるCPUの切り替え処理が発生しない。
正確に言うと、完全に１スレッドで処理するわけではなく図にあるようにワーカプロセス自体はマルチプロセス化できる。
イベント駆動 通常のプログラムは上から書かれた順に実行されますよね。
イベ ント駆動で動作するプログラムは何かしらのイベントが発生するまで待機し、発生したイベントの種類に応じて実行される。</description>
    </item>
    
  </channel>
</rss>