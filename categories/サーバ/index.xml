<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>サーバ on Goldstine研究所</title>
    <link>https://blog.mosuke.tech/categories/%E3%82%B5%E3%83%BC%E3%83%90/</link>
    <description>Recent content in サーバ on Goldstine研究所</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 02 Feb 2015 20:10:00 +0900</lastBuildDate>
    
	<atom:link href="https://blog.mosuke.tech/categories/%E3%82%B5%E3%83%BC%E3%83%90/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ansible、コマンド実行結果をokにする（冪等性を保つ方法）</title>
      <link>https://blog.mosuke.tech/entry/2015/02/02/201008/</link>
      <pubDate>Mon, 02 Feb 2015 20:10:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/02/02/201008/</guid>
      <description>&lt;p&gt;&lt;body&gt;
&lt;p&gt;最近は、Ansibleを使うことが非常に増えてきた。使って運用を回していくと、大したことではないのだが運用上少し困るようなことも多く出てきた。そのうちの一つである、アウトプットの結果の表示についてのチップスを紹介する。&lt;/p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xinetdを使ってLinux上のサービスを常時起動せずに利用する</title>
      <link>https://blog.mosuke.tech/entry/2015/01/02/013658/</link>
      <pubDate>Fri, 02 Jan 2015 01:36:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/01/02/013658/</guid>
      <description>&lt;p&gt;&lt;body&gt;
&lt;p&gt;使用頻度は低いが、常に可動させておきたいサービスをどう管理するか。使用頻度の低いサービスのデーモンをメモリに常駐させておくのはサーバのリソース効率が悪いというのは言うまでもないだろう。&lt;br&gt;
そこでスーパーサーバ(代表的なものにxinted)というたぐいのものを使うことで、使用頻度の低いサービスの窓口のサービスのみ起動しておき、要求があったときだけ特定のサービスを起動させることが可能だ。&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;スーパーサーバを実際に触ってみたのでメモする。&lt;/p&gt;

&lt;p&gt;スーパーサーバというと代表的なものにinetdとxinetdがあるが、&lt;br&gt;
xinetdはinetdの拡張版で、アクセス制御などの機能を搭載しているとのことだったので、今回はxinetdを設定してみることにした。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>