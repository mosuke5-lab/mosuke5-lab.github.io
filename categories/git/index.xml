<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Goldstine研究所</title>
    <link>https://blog.mosuke.tech/categories/git/index.xml</link>
    <description>Recent content on Goldstine研究所</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="https://blog.mosuke.tech/categories/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>後からGitレポジトリを共有設定に。sharedオプションの仕組みについて</title>
      <link>https://blog.mosuke.tech/entry/2014/11/20/230334/</link>
      <pubDate>Thu, 20 Nov 2014 23:03:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2014/11/20/230334/</guid>
      <description>&lt;p&gt;&lt;body&gt;
&lt;p&gt;Git&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%EC%A5%DD%A5%B8%A5%C8%A5%EA&#34;&gt;レポジトリ&lt;/a&gt;を作って、&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4%BF%CD&#34;&gt;複数人&lt;/a&gt;で開発をしていた。&lt;br&gt;
しかし、&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%EC%A5%DD%A5%B8%A5%C8%A5%EA&#34;&gt;レポジトリ&lt;/a&gt;の中に作成されるファイルやディレクトリが個人のグループになってしまい、&lt;br&gt;
Push, PullするときにPermission &lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/error&#34;&gt;error&lt;/a&gt;で怒られまくる。&lt;/p&gt;
&lt;p&gt;ユーザには共通のグループを作っていたのに…なんでだっけ…&lt;/p&gt;
&lt;p&gt;気づけば&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%EC%A5%DD%A5%B8%A5%C8%A5%EA&#34;&gt;レポジトリ&lt;/a&gt;を作るとき以下のようにしていた。&lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git init --bare 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;p&gt;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4%BF%CD&#34;&gt;複数人&lt;/a&gt;で共有するときには以下のようにするべきであった。&lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git init --bare --shared 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;p&gt;では、そもそもgitのsharedオプションをつけると何が裏で起こっているのか。&lt;br&gt;
調べると「&lt;b&gt;setgid&lt;/b&gt;」というキーワードに辿り着いた。&lt;br&gt;
setgidの権限を付けておくと、そのディレクトリに作成されたファイルの所有グループは、そのディレクトリの所有グループになる。&lt;/p&gt;
&lt;p&gt;以下のようにchmodでsetgidを付けることができる。&lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ chmod g+s dir_name 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;p&gt;setgidがつくとあまり馴染みのない権限がつく。&lt;br&gt;
「drwxrw&lt;span style=&#34;color: #ff40ff&#34;&gt;&lt;b&gt;s&lt;/b&gt;&lt;/span&gt;r-x」&lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -l 
drwxrwsr-x  4 user  group  136 11 16 22:49 test_dir 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;p&gt;そして、すでに共有設定なしで作ってしまった&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%EC%A5%DD%A5%B8%A5%C8%A5%EA&#34;&gt;レポジトリ&lt;/a&gt;では以下のように対応可能。&lt;br&gt;
（新しく&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%EC%A5%DD%A5%B8%A5%C8%A5%EA&#34;&gt;レポジトリ&lt;/a&gt;つくるのはめんどいので…）&lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;##Gigレポジトリ内のディレクトリに
$ chmod -R g+s ./branches
$ chmod -R g+s ./hooks
$ chmod -R g+s ./info
$ chmod -R g+s ./objects
$ chmod -R g+s ./refs
$ vim .git/config
  ##[core内に]以下を付け加えておいた
  [core]
       repositoryformatversion = 0 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/body&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>