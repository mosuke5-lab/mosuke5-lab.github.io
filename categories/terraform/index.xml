<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terraform on Goldstine研究所</title>
    <link>https://blog.mosuke.tech/categories/terraform/</link>
    <description>Recent content in Terraform on Goldstine研究所</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 25 Mar 2019 15:22:11 +0900</lastBuildDate>
    
	<atom:link href="https://blog.mosuke.tech/categories/terraform/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AnsibleのTerraform moduleを考察してみる</title>
      <link>https://blog.mosuke.tech/entry/2019/03/26/terraform-integrated-with-ansible/</link>
      <pubDate>Mon, 25 Mar 2019 15:22:11 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/03/26/terraform-integrated-with-ansible/</guid>
      <description>&lt;p&gt;気がつけば、2018年度も終了間際で時の流れの速さを実感しています。&lt;br /&gt;
はい。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;Ansibleのmodule(モジュール)でTerraformが知らぬ間にできていたので、
さっそく触ってみたのと、その有用性や使いみちについて考えてみました。&lt;br /&gt;
&lt;a href=&#34;https://docs.ansible.com/ansible/latest/modules/terraform_module.html&#34;&gt;terraform – Manages a Terraform deployment (and plans)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Terraformでクラウド環境のセットアップをして、その後にそのクラウド環境のサーバに対してプロビジョニングすることが一気通貫でできるようになります。素晴らしいことですね。
一方、こちらのツールを使ってみると、実現にあたっていろいろと工夫しなければ行けない点が出てきたのでご紹介していきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes上のリソースをTerraformで管理するメリットとデメリット</title>
      <link>https://blog.mosuke.tech/entry/2019/03/07/k8s-with-terraform/</link>
      <pubDate>Thu, 07 Mar 2019 01:06:27 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/03/07/k8s-with-terraform/</guid>
      <description>&lt;p&gt;@mosuke5です。早くも3月になってしまいました。&lt;br /&gt;
しかし、個人的にはこの2か月は非常に動きがあった2か月でしたのでいろいろ楽しかったです。&lt;/p&gt;

&lt;p&gt;さて、本題ですが、、&lt;br /&gt;
わたしの好きなTerraformを使ってKubernetesクラスタ上のリソースを管理するのをやってみたいと思います。&lt;br /&gt;
そもそもKubernetesをTeraformで管理するとなると2つのレイヤーの話があります。
今回は、後者のほうに重きを置いてお伝えします。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;KubernetesクラスターそのものをTerraformで管理する&lt;/li&gt;
&lt;li&gt;Kubernetesクラスター上のリソースをTerraformで管理する&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Terraformのimportの使い方と注意ポイント</title>
      <link>https://blog.mosuke.tech/entry/2018/06/20/terraform_import/</link>
      <pubDate>Wed, 20 Jun 2018 11:08:12 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/06/20/terraform_import/</guid>
      <description>&lt;p&gt;ここずっとTerraformの基本的な部分の投稿がつづいている@mosuke5です。&lt;br /&gt;
理由は、Terraformを最近結構触ることが多いのもあるが、今まであんまり使ってこなかった機能をきちんとキャッチアップして、より効率的にTerraformを活用できるようにしようと思っているからです。&lt;br /&gt;
と、まあ余談はおいておき、import機能をやっていきます。&lt;/p&gt;

&lt;p&gt;import機能についてはできることもなんとなくしっていたが、自分の手でやったことがなかったのでやってみようと思っています。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Terraformのbackend機能を利用してstateファイルを共有する</title>
      <link>https://blog.mosuke.tech/entry/2018/06/17/terraform-backend/</link>
      <pubDate>Sun, 17 Jun 2018 15:39:29 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/06/17/terraform-backend/</guid>
      <description>&lt;p&gt;Terraformのbackend機能について紹介します。&lt;br /&gt;
まずはbackend機能が必要な理由についてから説明していきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Terraform workspaceを利用する。環境ごとのリソース名の分岐など</title>
      <link>https://blog.mosuke.tech/entry/2018/06/16/terraform-workspaces/</link>
      <pubDate>Sat, 16 Jun 2018 18:27:35 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/06/16/terraform-workspaces/</guid>
      <description>&lt;p&gt;Terraformのバージョン0.9以降で追加された、workspace機能について自分の環境で使い始めたので、その使い方やtipsなどを残していきたいと思います。&lt;br /&gt;
workspaceは名前から推測できますが、同じTerraformのコードをワークスペース（環境）ごとに使い分けることのできる機能です。例えば、productionとdevelopmentの2つのworkspaceを作れば、同じTerraformコードを利用してこの2つの環境で別のリソースを作成していくことができます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Terraformで複数リージョンをまたいだリソース制御する</title>
      <link>https://blog.mosuke.tech/entry/2018/06/08/terraform_multi_provider/</link>
      <pubDate>Fri, 08 Jun 2018 15:03:10 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2018/06/08/terraform_multi_provider/</guid>
      <description>&lt;p&gt;Terraformを使って、リージョンをまたいでリソースを制御したくなることがありました。
Terraformではプロバイダーを指定する際に、リージョンを指定することが多く、異なるリージョンでリソース制御したい場合には工夫が必要です。&lt;/p&gt;

&lt;p&gt;なおこの記事はAlibaba Cloudを例にとっていますが、AWSなどでも同じことが可能ですので、あまりクラウドベンダーは気にしないでください。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Terraform×Rancherでマルチクラウドを一歩すすめる、を話してきた</title>
      <link>https://blog.mosuke.tech/entry/2017/07/14/master_cloud_malticloud/</link>
      <pubDate>Fri, 14 Jul 2017 15:33:38 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/07/14/master_cloud_malticloud/</guid>
      <description>&lt;p&gt;7月12日の&lt;a href=&#34;https://mastercloud.connpass.com/event/59832/&#34;&gt;MasterCloud#3&lt;/a&gt;で「Terraform×Rancherでマルチクラウドを一歩すすめる」という題で話してきました。&lt;br /&gt;
本記事ではスライドはもちろん、文面で補足しながら話してきた内容をまとめます。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>