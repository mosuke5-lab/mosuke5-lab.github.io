<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yapc on Goldstine研究所</title>
    <link>https://blog.mosuke.tech/categories/yapc/</link>
    <description>Recent content in Yapc on Goldstine研究所</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 01 Jul 2017 15:18:00 +0900</lastBuildDate>
    
	<atom:link href="https://blog.mosuke.tech/categories/yapc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>YAPC::Fukuoka前夜祭でLTしてきた。「Rancherでマルチクラウドをやってみる」</title>
      <link>https://blog.mosuke.tech/entry/2017/07/01/yapc_fukuoka/</link>
      <pubDate>Sat, 01 Jul 2017 15:18:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2017/07/01/yapc_fukuoka/</guid>
      <description>&lt;p&gt;YAPC::Fukuokaに参加してきた。&lt;br /&gt;
今回は前夜祭にも参加してLTもしてきたので報告する。&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;「本当に最適なインフラ選べてる？Rancherでマルチクラウドをやってみる（超入門編）」&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(個人的) YAPC::Asia 2015ふりかえり</title>
      <link>https://blog.mosuke.tech/entry/2015/08/22/223025/</link>
      <pubDate>Sat, 22 Aug 2015 22:30:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2015/08/22/223025/</guid>
      <description>「ブログを書くまでがYAPC」
というわけで、8/21, 22とYAPCに参加したので、そこでの学んだこと、気になったことなどを振り返ります。
しかし、YAPCで聞いた公演内容を淡々とまとめるなどはしません。
単なる内容のまとめであれば、公開されているスライドなどをみるのが一番だと思いますので。
以下３点を中心に振り返ってみます。
 インフラ関連セッションについて 発表を聞いてよかった、今の自分に一番必要だったことについて 興味を持ったことについて（CONBU）  インフラ関連セッションについて 意図的も半分くらいあるんだけど、なんとなくセッションを選んでいたら、インフラ関連のものが多くなりました。
 世界展開する大規模ウェブサービスのデプロイを支える技術 - YAPC::Asia Tokyo 2015 Consulと自作OSSを活用した100台規模のWebサービス運用 - YAPC::Asia Tokyo 2015 3分でサービスのOSを入れ替える技術 - YAPC::Asia Tokyo 2015 我々はどのように冗長化を失敗したのか - YAPC::Asia Tokyo 2015  デプロイについて 大規模サービスでのデプロイにおいて、一台一台のホストがgit cloneして、bundle installやらせてーとかやると、
時間もかかるし、並列的にgit cloneした際などgitサーバが負荷的に危なくなってくる。
なので、予めライブラリとかすべてインストールされたものをターボールなどにまとめておいて、
それをプルしてくる形式のデプロイについて多くの発表がありました。
このデプロイ方法、並列で数百MBのファイルをダウンロードしても落ちないストーレジ（ようはAWSのS3）を前提に構築されている感がありました。
（というかそう言っていた）
相変わらずAWSはせこいなーと思っています（笑）
うちの環境では真似するのは難しいなーと思う部分もありますが、
それ以前にシステムの規模や用途によってデプロイのあり方も多種多様になることを改めて考えさせられました。
自分の環境にあった最適なデプロイ形態を探す日々がまた始まりそうですが、良いヒントになりそうなのはまちがいなしです。
 式年遷宮インフラストラクチャ Kenjiさんの式年遷宮インフラストラクチャ。 この考え方、ぼくも一度考えたことはありますが、ここまで実践してみた経験談がきけたのは面白かった。
いざというときに切り替わらない、切り替えられないという問題に対して、
自動ではないが、「切替訓練」ということで、定期的に冗長化の系を切り替えることはしてもいいのかなーと思ったりしています。
consulについて 実は、上であげた４つのセッション全てで共通していたのがconsulを使っていた。
Consul by HashiCorpwww.consul.io
正直、consulについて、名前くらいしかしらなかったのに、ここまで利用されていたので、時代に乗り遅れている感を感じた。 でも利用用途をみていくと、iaas環境で力を発揮するっぽいので、概要と用途だけ押さえておくか…といったところ。
今月中の課題です。
発表を聞いてよかった、今の自分に一番必要だったことについて たくさん学びのあったなかで、なんだかんだいっても、koemuさんの発表が今の自分が一番考えていてることであり、
一番必要なことであったように感じた。
辛いことをやめる！から始まる業務改善とInfrastructure as Code - YAPC::Asia Tokyo 2015yapcasia.</description>
    </item>
    
  </channel>
</rss>