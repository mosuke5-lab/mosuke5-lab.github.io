<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Goldstine研究所</title>
    <link>https://blog.mosuke.tech/categories/devops/</link>
    <description>Recent content in Devops on Goldstine研究所</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 09 Dec 2024 00:00:00 +0900</lastBuildDate>
    <atom:link href="https://blog.mosuke.tech/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenShift、ACMを使って利用者への権限委譲しつつ無法地帯を避ける方法を考えよう</title>
      <link>https://blog.mosuke.tech/entry/2024/12/08/acm-governance/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2024/12/08/acm-governance/</guid>
      <description>&lt;p&gt;だいぶお久しぶりです。もーすけです。&lt;br&gt;&#xA;気がつけば技術記事を書くのは2022年12年ぶりとなります（汗）&#xA;子供が生まれてから、毎日送り迎えやら一緒に遊びにいったりやらをしていたらこんなにも月日が経っていました。おそろしいですね！！&lt;/p&gt;&#xA;&lt;p&gt;さて、2024年はみなさんにとってどんな技術トピックが話題だったでしょうか？&lt;/p&gt;&#xA;&lt;p&gt;OpenShiftのコンサルタントとして日々いろんなお客さんに接していると、&amp;ldquo;Platform Engineering&amp;rdquo; というキーワードを使って組織改善に取り組むケースが増えてきたなという印象です。&#xA;Platform Engineeringといえば、2023年頃から少しずつ話題に上がっていましたが、いよいよトライしていく企業さんが増えてきたなあと。&#xA;もちろんそれ以前もDevOpsとかいろんな別の言葉を使って語られてはきたんですが、丁度いい言葉ができたからなのか話題にあがることが増えてきています。&lt;/p&gt;&#xA;&lt;p&gt;今日は、そんなPlatform Engineeringを実践していく上での「アプリケーションチームへの権限委譲」のテクニックをひとつ紹介します。&lt;/p&gt;&#xA;&lt;p&gt;ちなみに、こちらの記事は &amp;ldquo;&lt;a href=&#34;https://qiita.com/advent-calendar/2024/openshift&#34; target=&#34;_blank&#34;&gt;OpenShift Advent Calendar 2024&lt;/a&gt;&amp;rdquo; の9日目の記事となります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る</title>
      <link>https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/</link>
      <pubDate>Tue, 01 Mar 2022 18:37:40 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;&#xA;最近Tektonをより実践に向けて検証することが多くなってきました。&#xA;今回は、ビルドの高速化に役立つキャッシュの方法について紹介します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて</title>
      <link>https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/</link>
      <pubDate>Mon, 24 Jan 2022 10:52:13 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;&#xA;このシリーズの中で&lt;a href=&#34;https://hub.tekton.dev/tekton/task/git-clone&#34;&gt;git-clone&lt;/a&gt;タスクを利用してきましたが、いままではパブリックなレポジトリを対象に扱ってきましたが、実運用では当然ながらプライベートレポジトリを活用するはずです。&#xA;プライベートレポジトリを使っていくにはどうしたらいいのか、その場合の挙動などを確認しておきます。&lt;/p&gt;&#xA;&lt;p&gt;Tektonパイプラインで、git-cloneタスクを使う場合、git-cloneタスクに実装される &lt;code&gt;ssh-directory&lt;/code&gt; 設定を使うか、Tektonで用意した認証の仕組みを使うかのどちらかになると思います。それぞれの方法について見ていきましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes環境についてTerratestでテストを書く</title>
      <link>https://blog.mosuke.tech/entry/2021/10/28/kubernetes-test-by-terratest/</link>
      <pubDate>Thu, 28 Oct 2021 23:11:43 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2021/10/28/kubernetes-test-by-terratest/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;&#xA;今回は&lt;a href=&#34;https://github.com/gruntwork-io/terratest&#34; target=&#34;_blank&#34;&gt;Terratest&lt;/a&gt; を用いたKubernetes環境のテストについて検討します。&lt;/p&gt;&#xA;&lt;p&gt;TerratestはGruntwork.ioが作成しているインフラのテスティングソフトウェアです。&#xA;もともとは、Terraformで作成したクラウド環境のテストとして発達がしましたが、いまの時代となってKubernetes環境やコンテナイメージもテストできるようになっています。&lt;/p&gt;&#xA;&lt;p&gt;Kubernetesマニフェストにより、宣言的にインフラ環境を表現できるようになってきているととはいえ、その結果が期待通りに動作しているのかは日々の悩みのタネであることはかわりません。&#xA;Terratestがこの悩みを解消するのにイケてそうなので調査してみます。&lt;/p&gt;&#xA;&lt;p&gt;かつて仮想サーバでアプリケーションを運用している時代に、Serverspecを用いてテスト駆動のインフラ構築を行っていてとても気持ちがよかったので、そのレイヤーが移ってきているとも考えられます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SREは何を目指せばいいか？Google流から大事なことを学ぼう。</title>
      <link>https://blog.mosuke.tech/entry/2021/07/21/sre/</link>
      <pubDate>Wed, 21 Jul 2021 17:48:41 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2021/07/21/sre/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;&#xA;今回はしばらくの間、積み読となっていた「&lt;a href=&#34;https://amzn.to/2TpNDTD&#34; target=&#34;_blank&#34;&gt;SRE サイトリライアビリティエンジニアリング&lt;/a&gt;」を読んだので、SREの生みの親が考えるその思想まとめます。（なんと購入したのは2018年3月で、3年4か月越しにまともに読むことになりました汗）&lt;/p&gt;&#xA;&lt;p&gt;いまや、多くの企業でSREを名乗る職種がでています。&#xA;しかし、名前を変えただけのことも多くあると思っているので、SREの真髄はどこにあるのか？我々はなにを考えなければないらないのか？探っていきたいと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>「ユニコーン企業のひみつ」を読んで、我々はなにをすればいいのだろうか？</title>
      <link>https://blog.mosuke.tech/entry/2021/06/06/competing-with-unicorns/</link>
      <pubDate>Sun, 06 Jun 2021 18:40:35 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2021/06/06/competing-with-unicorns/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;&#xA;本日は、2021年4月に発売された「&lt;a href=&#34;https://amzn.to/3fTPYyA&#34; target=&#34;_blank&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;」を読みましたので、書籍の内容や自分なりの考えをまとめてみます。&#xA;現代となっては、アメリカのGAFAをはじめとしたテック企業のビジネス脅威を感じないことはないと思います。&#xA;彼らに対抗するため、日本企業はどんなふうに戦えばいいのか？そんなヒントになる本です。&lt;/p&gt;&#xA;&lt;p&gt;この本は発売と同時に多くの方がレビューを書いているので、ぜひ他の人の書評もたくさん読んでみてください。&lt;/p&gt;</description>
    </item>
    <item>
      <title>カスタマイズしたJenkinsを作成する方法 on OpenShift</title>
      <link>https://blog.mosuke.tech/entry/2020/07/05/customized-jenkins-on-openshift/</link>
      <pubDate>Sun, 05 Jul 2020 23:00:50 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2020/07/05/customized-jenkins-on-openshift/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;&#xA;本日はRed Hatが提供しているKubernetesディストリビューションであるOpenShift上のJenkinsの管理に関するお話です。&#xA;OpenShift上でJenkinsを利用する際のプラグイン管理の方法やカスタマイズ方法などをご紹介します。&#xA;ハマリポイントもあり困っている方も見かけたのでお役に立てばと思います。&lt;/p&gt;&#xA;&lt;p&gt;Jenkins本体ではなくJenkins agnetのカスタマイズに関しては以前に下記ブログを書いてますのでこちらをご参照ください。&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://hatenablog-parts.com/embed?url=https%3A%2F%2Frheb.hatenablog.com%2Fentry%2Fopenshift-custom-jenkins-agent&#34; style=&#34;border: 0; width: 100%; height: 190px;&#34; allowfullscreen scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>Tekton 徹底解説、Operatorによるインストールとはじめの一歩（学習シリーズ01）</title>
      <link>https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/</link>
      <pubDate>Sun, 10 May 2020 15:15:21 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h5&gt;Tekton学習シリーズ&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;Tekton 徹底解説、Operatorによるインストールとはじめの一歩&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第4回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-task-with-pipelineresource/&#34;&gt;Tekton、TaskでPipelineResouceを利用したときの挙動を確認する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第5回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/07/tekton-pipeline/&#34;&gt;Tekton、TaskをまとめてPipelineとして実行する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第6回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/17/tekton-pipeline-with-workspace/&#34;&gt;Tekton、PipelineでWorkspaceを利用してTask間でデータを連携する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第7回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/20/tekton-catalog-and-image-build/&#34;&gt;Tekton、カタログをうまく活用してパイプラインを作る（イメージビルド）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第8回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/21/tekton-cluster-task-tektonhub/&#34;&gt;Tekton、ClusterTaskとTekton Hubを理解する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第9回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/22/tekton-deploy-app/&#34;&gt;Tekton、アプリケーションをKubernetesクラスタへデプロイする&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第10回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/06/tekton-trigger/&#34;&gt;Tekton、トリガーを使って外部イベントでパイプラインを実行する&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第11回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/04/09/tekton-trigger-interceptor/&#34;&gt;Tekton、interceptorを使ってイベントトリガーを進化させる&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第12回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/01/24/tekton-access-private-gitrepo/&#34;&gt;Tekton、プライベートなGitレポジトリを扱う方法と仕組みについて&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;第13回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2022/03/01/tekton-lib-cache/&#34;&gt;Tekton、ボリュームを使ってビルド・ライブラリダウンロードの高速化を図る&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;番外編: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/05/07/tekton-and-argocd&#34;&gt;TektonからArgo CDの同期をトリガーする。それぞれの使い分けの検討。&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/mosuke5&#34; target=&#34;_blank&#34;&gt;もーすけ&lt;/a&gt;です。&#xA;GWはみなさんいかがお過ごしでしたか？&lt;br&gt;&#xA;外に出れないGWという一生でもそんなことが2度あるかわかりませんが非常に大変な日々を過ごされたのではないかと思います。自分は、GWを使ってKubernetes Operatorの開発などに挑戦してみていました。&#xA;このあたりの話は別で書きたいと思いますが、Kubernetesのよさについてさらに理解を深めた気がします。&lt;/p&gt;&#xA;&lt;p&gt;さて、今日はCloud NativeなCI/CDツールと言われているTektonについて。&lt;br&gt;&#xA;Tekton学習シリーズということで入門者向けの連載企画をおこないました。第1回目は、Operatorによるインストール編です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>イメージのプルの効率化を考える。kubernetes-image-puller の紹介</title>
      <link>https://blog.mosuke.tech/entry/2020/04/28/kubernetes-image-puller/</link>
      <pubDate>Tue, 28 Apr 2020 17:17:54 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2020/04/28/kubernetes-image-puller/</guid>
      <description>&lt;p&gt;FF7リメイク、クリアしました。いまSwitchで原作のFF7をやり直しています。もーすけです。&lt;br&gt;&#xA;今日は&lt;a href=&#34;https://github.com/che-incubator/kubernetes-image-puller&#34; target=&#34;_blank&#34;&gt;kubernetes-image-puller&lt;/a&gt;というツールを発見し試してみたので、背景や課題感含めてご紹介していきます。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/che-incubator/kubernetes-image-puller&#34; data-iframely-url=&#34;//cdn.iframe.ly/VbiFtNx&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Jenkins pipelineで複数のOpenShiftクラスタを扱う</title>
      <link>https://blog.mosuke.tech/entry/2020/04/14/jenkins-pipeline-for-multi-cluster/</link>
      <pubDate>Tue, 14 Apr 2020 17:05:07 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2020/04/14/jenkins-pipeline-for-multi-cluster/</guid>
      <description>&lt;p&gt;もーすけです。今日はJenkinsを使ったKubernetes(OpenShift)環境でのデプロイ関連についてです。&lt;br&gt;&#xA;Jenkins pipelineで複数クラスタ（マルチクラスタ）を扱いたい場合の設定方法について確認したので共有します。&lt;/p&gt;&#xA;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;以前にskopeoを用いたコンテナイメージの別レジストリへのコピーする方法について書きました。&#xA;イメージを別レジストリへコピーする目的は、イメージをビルドしたクラスタと本番環境が別クラスタの場合などがあります。&#xA;複数のクラスタを利用する環境では、１つのJenkins pipelineから複数のOpenShiftのクラスタに対して操作するケースがでてきます。&#xA;やることは単純で、複数のクラスタの認証情報を用意して操作することになるわけですが、JenkinsのOpenShift Client Pluginを用いた方法についてメモしていきます。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/04/05/skopeo/&#34; data-iframely-url=&#34;//cdn.iframe.ly/SsqYHwS&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>KubernetesにおけるCI/CD実践の勘所まとめ</title>
      <link>https://blog.mosuke.tech/entry/2020/03/04/kubernetes-ci-cd/</link>
      <pubDate>Wed, 04 Mar 2020 18:14:26 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2020/03/04/kubernetes-ci-cd/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/mosuke5&#34; target=&#34;_blank&#34;&gt;もーすけ&lt;/a&gt;です。&lt;br&gt;&#xA;前回のブログでは「&lt;a href=&#34;https://amzn.to/2PraGZ8&#34; target=&#34;_blank&#34; onClick=&#34;ga(&#39;send&#39;,&#39;event&#39;,&#39;link&#39;,&#39;click&#39;,&#39;to-amz-cloudnativedevops&#39;);&#34;&gt;Kubernetesで実践するクラウドネイティブDevOps&lt;/a&gt;」の書籍を紹介しました。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/02/26/cloud-native-devops/&#34; data-iframely-url=&#34;//cdn.iframe.ly/0pYInqQ&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;こちらの反響もよかったこともあり、KubernetesにおけるCI/CD（継続的インテグレーションと継続的デリバリー）に焦点を絞って、いままでの経験も含めて大事なポイントをいくつかの切り口でまとめることにしました。&#xA;一部は書籍の内容とかぶる部分もあるのですが、わたしが普段Kubernetesでのアプリケーション運用に携わる中で大事だと思うことなど含めてご紹介します。&#xA;KubernetesにおけるCI/CDとしていますが、項目は必ずしもKubernetesに限った話ではありませんのでご了承ください。&lt;/p&gt;&#xA;&lt;p&gt;また、もっといろんなトピックを書きたいのですが、すべてのトピックを揃えると記事自体のボリュームも大きくなり公開も遅くなりそうだったので、基本的な内容のみ選んでみました。随時追加されていく（あるいは別記事？）可能性があります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>運用課題の指南書、Kubernetesで実践するクラウドネイティブDevOps</title>
      <link>https://blog.mosuke.tech/entry/2020/02/26/cloud-native-devops/</link>
      <pubDate>Wed, 26 Feb 2020 23:42:24 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2020/02/26/cloud-native-devops/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;&#xA;先日、O&amp;rsquo;REILLY Japanから &lt;a href=&#34;https://amzn.to/2PraGZ8&#34; target=&#34;_blank&#34; onClick=&#34;ga(&#39;send&#39;,&#39;event&#39;,&#39;link&#39;,&#39;click&#39;,&#39;to-amz-cloudnativedevops&#39;);&#34;&gt;Kubernetesで実践するクラウドネイティブDevOps&lt;/a&gt; という本が出版されました。&#xA;最近仕事でKubernetes上のアプリケーションに関するDevOpsやCI/CDによく携わっているのもあり、発売日に手にとりにいきました。&#xA;せっかくなので、こちらの本の紹介をしていきたいと思います。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/Kubernetes%25E3%2581%25A7%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2583%258D%25E3%2582%25A4%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596DevOps-John-Arundel/dp/4873119014&#34; data-iframely-url=&#34;//cdn.iframe.ly/j1izGzy?iframe=card-small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>本質を学ぶ、アジャイル・スクラム初心者におすすめの教材</title>
      <link>https://blog.mosuke.tech/entry/2020/02/23/basic-of-agile/</link>
      <pubDate>Sun, 23 Feb 2020 16:59:20 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2020/02/23/basic-of-agile/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;&#xA;わたしは普段、開発チームや情シス部門が業務効率化・スキルアップできるように支援を行っています。&#xA;その中でもここ1年程はアジャイルやスクラムについてたくさんのことを学びました。&lt;br&gt;&#xA;自分も以前はそうだったのですが、多くの人たちにとって「アジャイル開発」や「スクラム」は、表面的な手法として認識されているというのが現実です。実践や勉強を深めていくと、その本質は単なる手法ではないということがわかってくるものです。&#xA;開発を2週間区切りに行っていくものでもなければ、開発を速くするためものでもないことに気づくことでしょう。（結果として左のようなことは起きうります）&lt;br&gt;&#xA;本ブログは、アジャイルやスクラムをきちんと学んだことがない人、これから取り組もうとしている人、取り組んでいるけどイマイチ成果がでていない人向けに、どうすれば本質を学んで理解できるか、その参考となる情報やおすすめの書籍などをご紹介していきたいと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevOpsの本質を科学的に理解する。LeanとDevOpsの科学を読んで。</title>
      <link>https://blog.mosuke.tech/entry/2019/12/26/the-science-of-lean-software-and-devops/</link>
      <pubDate>Thu, 26 Dec 2019 11:29:20 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2019/12/26/the-science-of-lean-software-and-devops/</guid>
      <description>&lt;p&gt;おひさしぶりです。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;&#xA;最近&lt;a href=&#34;https://amzn.to/2tVOWN8&#34; target=&#34;_blank&#34;&gt;「LeanとDevOpsの科学」&lt;/a&gt;という本を読みました。&#xA;自分の周りの先輩方たちのあいだでは当たり前のようにこの本のコンテキストで会話がすすんでいるということもあり、読んでみたのがきっかけです。&#xA;実際に、読んでみるととても素晴らしい書籍であり、是非みなさんにも読んでほしいと思ったためこの記事を書くにいたりました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Datadog APMとトレーシングの仕組みについて</title>
      <link>https://blog.mosuke.tech/entry/2019/11/21/datadog-apm/</link>
      <pubDate>Thu, 21 Nov 2019 11:32:38 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2019/11/21/datadog-apm/</guid>
      <description>&lt;p&gt;こんにちは。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;&#xA;みなさん普段の監視はどのように行っていますか？Datadog使っていますか？&lt;/p&gt;&#xA;&lt;p&gt;最近&lt;a href=&#34;https://www.datadoghq.com/&#34;&gt;Datadog&lt;/a&gt;を触る機会が多いのですが、Datadogはobservabilityの3本柱ということで、メトリックとトレース(APM)とログ、この3つを統合した監視サービスであることを強くおしだしています。&#xA;3つの分野のそれぞれに対応したOSSやサービスは多いですが、統合されてシームレスに連携できる点はDatadogの非常に強いポイントと感じます。&#xA;さて、そんななかでDatadog APM (Application Perfomance Monitoring) が強力だったので紹介したいのと、その仕組みを探っていきましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DatadogのAlibaba Cloud integrationでできること</title>
      <link>https://blog.mosuke.tech/entry/2019/08/28/datadog-for-alibaba-cloud/</link>
      <pubDate>Wed, 28 Aug 2019 00:11:44 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2019/08/28/datadog-for-alibaba-cloud/</guid>
      <description>&lt;p&gt;仕事でDatadogを触る機会があり、フリートライアルのアカウントを作りました。&lt;br&gt;&#xA;ちょうどいい機会だったので、前々から試したいと思っていたAlibaba Cloudとの連携について試してみました。&#xA;この連携は2019年の3月くらいに開始したものです。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://www.datadoghq.com/blog/monitor-alibaba-cloud-datadog/&#34; data-iframely-url=&#34;//cdn.iframe.ly/bkZv6KL?iframe=card-small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Kubernetes上のリソースをAnsibleで管理する</title>
      <link>https://blog.mosuke.tech/entry/2019/08/21/ansible-for-k8s-resources/</link>
      <pubDate>Wed, 21 Aug 2019 19:36:45 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2019/08/21/ansible-for-k8s-resources/</guid>
      <description>&lt;p&gt;お久しぶりです。@mosuke5です。&lt;br&gt;&#xA;Kubernetes上のリソースをどのように管理していますか？&#xA;&lt;code&gt;kubectl apply -f manifest-file.yml&lt;/code&gt; のようにkubectlを使うことがまず多いのかなと思います。&#xA;自分もそのようにデプロイすることがおおいです。&#xA;今日はAnsibleを用いてKubernetes上のリソースを管理することを試してみたいと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>「リーンスタートアップ」を読んだ。計測することの重要性と難しさ</title>
      <link>https://blog.mosuke.tech/entry/2019/07/10/the-lean-startup/</link>
      <pubDate>Wed, 10 Jul 2019 18:08:06 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2019/07/10/the-lean-startup/</guid>
      <description>&lt;p&gt;会社のブログも含めて、やたら執筆ばかりしている&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;&#xA;前回の &lt;a href=&#34;https://blog.mosuke.tech/entry/2019/06/30/scram/&#34;&gt;&amp;quot;「スクラム」（ジェフ・サザーランド）を読んだ&amp;quot;&lt;/a&gt;に続いて、「リーンスタートアップ」という本を読んだのでそちらについての学びについてまとめます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;この書籍について&#34;&gt;この書籍について&lt;/h2&gt;&#xA;&lt;p&gt;この書籍は、アメリカシリコンバレーで起業家として活動していたエリック・リース氏が自らの起業体験を元に書かれた、「リーンスタートアップ」というスタートアップビジネスのマネジメント手法についてのものです。&#xA;彼が「リーンスタートアップ」という手法の提唱者になります。&#xA;スタートアップというも、その定義は広く、なにも「スタートアップベンチャー」だけを指し示しているものでもなく、&#xA;本書では &lt;strong&gt;「スタートアップとは、とてつもなく不確実な状態で新しい製品やサービスを創り出さなければならない人的組織である。」&lt;/strong&gt; と定義しています。&lt;/p&gt;&#xA;&lt;p&gt;そのため、会社のサイズや業界などに関係なく、上に当てはまる人にとってはとても有益な本です。&#xA;本書では、なぜスタートアップがうまくいかないのかにはじまり、科学的にどうしたらうまくまわせるかのエッセンスがつまっています。&#xA;新規プロジェクト・ビジネスでうまくいかなかった経験がある、これからやっていく予定がある人はぜひ一度読んでみてほしいです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>「スクラム」(ジェフ・サザーランド): 新しい仕事の仕方を学ぶ最良の本</title>
      <link>https://blog.mosuke.tech/entry/2019/06/30/scram/</link>
      <pubDate>Sun, 30 Jun 2019 15:59:32 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2019/06/30/scram/</guid>
      <description>&lt;p&gt;このブログで「読んだ」記事を書くのは実は初めてです。&lt;br&gt;&#xA;なので拙い書評になるかもしれませんが、これもこのブログに新しいコンテンツを提供するための第一歩としてやってみます。&lt;/p&gt;&#xA;&lt;p&gt;今回読んだのはこちらの「スクラム」という本です。&lt;/p&gt;&#xA;&lt;div class=&#34;amazlet-box&#34; style=&#34;margin-bottom:0px;&#34;&gt;&lt;div class=&#34;amazlet-image&#34; style=&#34;float:left;margin:0px 12px 1px 0px;&#34;&gt;&lt;a href=&#34;https://amzn.to/39EoJCX&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/31YRID0DRaL._SL160_.jpg&#34; alt=&#34;スクラム　仕事が４倍速くなる“世界標準”のチーム戦術&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-info&#34; style=&#34;line-height:120%; margin-bottom: 10px&#34;&gt;&lt;div class=&#34;amazlet-name&#34; style=&#34;margin-bottom:10px;line-height:120%&#34;&gt;&lt;a href=&#34;https://amzn.to/39EoJCX&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;スクラム　仕事が４倍速くなる“世界標準”のチーム戦術&lt;/a&gt;&lt;div class=&#34;amazlet-powered-date&#34; style=&#34;font-size:80%;margin-top:5px;line-height:120%&#34;&gt;posted with amazlet at 19.06.30&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-detail&#34;&gt;ジェフ・サザーランド &lt;br /&gt;早川書房 &lt;br /&gt;売り上げランキング: 15,652&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-sub-info&#34; style=&#34;float: left;&#34;&gt;&lt;div class=&#34;amazlet-link&#34; style=&#34;margin-top: 5px&#34;&gt;&lt;a href=&#34;https://amzn.to/39EoJCX&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;Amazon.co.jpで詳細を見る&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-footer&#34; style=&#34;clear: left&#34;&gt;&lt;/div&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>AnsibleのTerraform moduleを考察してみる</title>
      <link>https://blog.mosuke.tech/entry/2019/03/26/terraform-integrated-with-ansible/</link>
      <pubDate>Mon, 25 Mar 2019 15:22:11 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2019/03/26/terraform-integrated-with-ansible/</guid>
      <description>&lt;p&gt;気がつけば、2018年度も終了間際で時の流れの速さを実感しています。&lt;br&gt;&#xA;はい。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;/p&gt;&#xA;&lt;p&gt;Ansibleのmodule(モジュール)でTerraformが知らぬ間にできていたので、&#xA;さっそく触ってみたのと、その有用性や使いみちについて考えてみました。&lt;br&gt;&#xA;&lt;a href=&#34;https://docs.ansible.com/ansible/latest/modules/terraform_module.html&#34;&gt;terraform – Manages a Terraform deployment (and plans)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Terraformでクラウド環境のセットアップをして、その後にそのクラウド環境のサーバに対してプロビジョニングすることが一気通貫でできるようになります。素晴らしいことですね。&#xA;一方、こちらのツールを使ってみると、実現にあたっていろいろと工夫しなければ行けない点が出てきたのでご紹介していきます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes上のリソースをTerraformで管理するメリットとデメリット</title>
      <link>https://blog.mosuke.tech/entry/2019/03/07/k8s-with-terraform/</link>
      <pubDate>Thu, 07 Mar 2019 01:06:27 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2019/03/07/k8s-with-terraform/</guid>
      <description>&lt;p&gt;@mosuke5です。早くも3月になってしまいました。&lt;br&gt;&#xA;しかし、個人的にはこの2か月は非常に動きがあった2か月でしたのでいろいろ楽しかったです。&lt;/p&gt;&#xA;&lt;p&gt;さて、本題ですが、、&lt;br&gt;&#xA;わたしの好きなTerraformを使ってKubernetesクラスタ上のリソースを管理するのをやってみたいと思います。&lt;br&gt;&#xA;そもそもKubernetesをTeraformで管理するとなると2つのレイヤーの話があります。&#xA;今回は、後者のほうに重きを置いてお伝えします。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;KubernetesクラスターそのものをTerraformで管理する&lt;/li&gt;&#xA;&lt;li&gt;Kubernetesクラスター上のリソースをTerraformで管理する&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Terraformのimportの使い方と注意ポイント</title>
      <link>https://blog.mosuke.tech/entry/2018/06/20/terraform_import/</link>
      <pubDate>Wed, 20 Jun 2018 11:08:12 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2018/06/20/terraform_import/</guid>
      <description>&lt;p&gt;ここずっとTerraformの基本的な部分の投稿がつづいている@mosuke5です。&lt;br&gt;&#xA;理由は、Terraformを最近結構触ることが多いのもあるが、今まであんまり使ってこなかった機能をきちんとキャッチアップして、より効率的にTerraformを活用できるようにしようと思っているからです。&lt;br&gt;&#xA;と、まあ余談はおいておき、import機能をやっていきます。&lt;/p&gt;&#xA;&lt;p&gt;import機能についてはできることもなんとなくしっていたが、自分の手でやったことがなかったのでやってみようと思っています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terraformのbackend機能を利用してstateファイルを共有する</title>
      <link>https://blog.mosuke.tech/entry/2018/06/17/terraform-backend/</link>
      <pubDate>Sun, 17 Jun 2018 15:39:29 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2018/06/17/terraform-backend/</guid>
      <description>&lt;p&gt;Terraformのbackend機能について紹介します。&lt;br&gt;&#xA;まずはbackend機能が必要な理由についてから説明していきます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terraform workspaceを利用して環境毎のリソース名の変更を行う</title>
      <link>https://blog.mosuke.tech/entry/2018/06/16/terraform-workspaces/</link>
      <pubDate>Sat, 16 Jun 2018 18:27:35 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2018/06/16/terraform-workspaces/</guid>
      <description>&lt;p&gt;Terraformのバージョン0.9以降で追加された、workspace機能について自分の環境で使い始めたので、その使い方やtipsなどを残していきたいと思います。&lt;br&gt;&#xA;workspaceは名前から推測できますが、同じTerraformのコードをワークスペース（環境）ごとに使い分けることのできる機能です。例えば、productionとdevelopmentの2つのworkspaceを作れば、同じTerraformコードを利用してこの2つの環境で別のリソースを作成していくことができます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terraformで複数リージョンをまたいだリソース制御する</title>
      <link>https://blog.mosuke.tech/entry/2018/06/08/terraform_multi_provider/</link>
      <pubDate>Fri, 08 Jun 2018 15:03:10 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2018/06/08/terraform_multi_provider/</guid>
      <description>&lt;p&gt;Terraformを使って、リージョンをまたいでリソースを制御したくなることがありました。&#xA;Terraformではプロバイダーを指定する際に、リージョンを指定することが多く、異なるリージョンでリソース制御したい場合には工夫が必要です。&lt;/p&gt;&#xA;&lt;p&gt;なおこの記事はAlibaba Cloudを例にとっていますが、AWSなどでも同じことが可能ですので、あまりクラウドベンダーは気にしないでください。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Compose上でのRailsアプリケーションの開発フロー</title>
      <link>https://blog.mosuke.tech/entry/2018/05/02/rails-app-on-docker/</link>
      <pubDate>Wed, 02 May 2018 23:14:44 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2018/05/02/rails-app-on-docker/</guid>
      <description>&lt;p&gt;早いものGWも終わり一週間が経ってしまいました。&lt;br&gt;&#xA;長期の連休になるとだいたい自分は趣味のアプリケーション開発をよくすすめています（ふだんからやりたいけどなかなかできない）。今年のGWも趣味アプリケーションの開発をしてました。&lt;/p&gt;&#xA;&lt;p&gt;いま作っているアプリケーションは自分の英語学習用のサービスなのですが(サービスについては別途どこかでご紹介したい)、新しい技術を実際に試す場としても利用しています。自分はいつも趣味アプリケーションで新しいことを試してみて、よかったらそれを職場にもっていくことが多いです。&lt;/p&gt;&#xA;&lt;p&gt;アプリケーションはRailsで書いているのですが、Railsの他にMySQLやNginx、ElasticSearch、Kibanaなど関連するコンポーネントが多いです。&#xA;そのため、Docker Composeを利用して動かすことにしています。Dockerは以前から使っていたのですが、実際にアプリケーションのせてとして開発・運用してみると、いろいろ問題があり試行錯誤することになりました。&lt;/p&gt;&#xA;&lt;p&gt;GWはその部分と主に格闘していて、最終的にそこそこ良い開発フローを整えることができました。今日はそのご紹介です。&lt;br&gt;&#xA;※もちろん、現時点でのやり方であり、改善しているので現状と異なることも多いと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TerraformでCloudFlareのDNS設定を操る</title>
      <link>https://blog.mosuke.tech/entry/2018/01/01/terraform-dns/</link>
      <pubDate>Mon, 01 Jan 2018 07:34:20 +0000</pubDate>
      <guid>https://blog.mosuke.tech/entry/2018/01/01/terraform-dns/</guid>
      <description>&lt;p&gt;あけましておめでとうございます。今年も本ブログおよびmosuke5をよろしくお願いします。&lt;br&gt;&#xA;新年元旦のブログなので軽く。年末年始は普段できない開発をやっていて、そこでできたちょっとしたメモを。&lt;/p&gt;&#xA;&lt;p&gt;趣味で作っているサービスで、基盤はAWSを利用し、CloudFlareも利用したい理由もありDNSの設定などはRoute53ではなくCloudFlareで制御する必要があった。複数のサービスをまたいで設定を管理できるTerraformの出番なわけだが、その設定方法についてメモしておく。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vagrant×Ansible環境の３つのスタイルとそのメリット・デメリットについて</title>
      <link>https://blog.mosuke.tech/entry/2016/01/25/222150/</link>
      <pubDate>Mon, 25 Jan 2016 22:21:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2016/01/25/222150/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Vagrant&#34;&gt;Vagrant&lt;/a&gt;×Ansibleで開発環境を作っているみなさんは、&#xA;どんなふうにそれを実現していますか？&lt;/p&gt;&#xA;&lt;p&gt;きっといくつかのやり方、考え方があると思います。&lt;br&gt;&#xA;例えば、ご自身のPCにAnsibleをインストールして&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Vagrant&#34;&gt;Vagrant&lt;/a&gt;の仮想環境にプロビジョニングしているとか。&lt;br&gt;&#xA;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Vagrant&#34;&gt;Vagrant&lt;/a&gt;で立てた仮想環境にAnsibleを入れて実行するとか。&lt;/p&gt;</description>
    </item>
    <item>
      <title>AnsibleとServerspecの実行をRakeタスクにまとめる</title>
      <link>https://blog.mosuke.tech/entry/2015/12/17/192554/</link>
      <pubDate>Thu, 17 Dec 2015 19:25:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/12/17/192554/</guid>
      <description>&lt;p&gt;こんにちは&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;もーすけ&lt;/a&gt;です。&lt;br&gt;&#xA;私が趣味で開発しているシステムでは、Ansibleを使って、サーバ構築からアプリケーションのデプロイまで実行できるように管理しています。&#xA;そして、serverspecを使って、そのサーバに対するインフラテストも行っています。しかし、その運用にいくつか課題点がありました。&lt;/p&gt;&#xA;&lt;p&gt;その課題点についてと、課題点へ対策したことについて書きます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansible、実行速度高速化の実験。ControlMasterとPipeliningについて</title>
      <link>https://blog.mosuke.tech/entry/2015/12/01/181304/</link>
      <pubDate>Tue, 01 Dec 2015 18:13:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/12/01/181304/</guid>
      <description>&lt;body&gt;&#xA;Ansibleの実行速度に不満を持っている人は多いのではないだろうか。&lt;br&gt;&#xA;自分もそのひとりであったのだが、ControlMasterやpipeliningといった機能を使って高速化に成功した。&#xA;本ブログでは、その効果の実験を行ったので参考にしてください。</description>
    </item>
    <item>
      <title>serverspecを使ったインフラのテストを導入した理由と工夫している点</title>
      <link>https://blog.mosuke.tech/entry/2015/11/02/161744/</link>
      <pubDate>Mon, 02 Nov 2015 16:17:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/11/02/161744/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;※執筆後、業務でもserverspecを利用し始めたのもあり、業務レベルでの実践例も追記しました。&lt;/p&gt;&#xA;&lt;p&gt;運営中のVim::Factoryでserverspecを使ったインフラテストを導入したので、&#xA;導入理由や工夫している点、悩んでいる点について記述します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansibleを踏み台サーバ越しに実行する方法</title>
      <link>https://blog.mosuke.tech/entry/2015/09/25/232751/</link>
      <pubDate>Fri, 25 Sep 2015 23:27:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/09/25/232751/</guid>
      <description>&lt;body&gt;&#xA;Ansibleを使ってどんどん構築の自動化を進めている。  &#xA;すすめていくと、Ansibleを実行する端末からネットワーク的に直接届かないサーバに対してプロビジョニングしたいケースがでてくる。そこで、踏み台サーバ越しにAnsibleでプロビジョニングしていくことを試してみる。</description>
    </item>
    <item>
      <title>Packerやる前にKickstartはじめよう</title>
      <link>https://blog.mosuke.tech/entry/2015/07/31/211542/</link>
      <pubDate>Fri, 31 Jul 2015 21:15:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/07/31/211542/</guid>
      <description>&lt;body&gt;&#xA;&lt;h1&gt;1.はじめに&lt;/h1&gt;&#xA;&lt;p&gt;開発環境はVirualboxを使った&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Vagrant&#34;&gt;Vagrant&lt;/a&gt;を利用しているが、&lt;br&gt;&#xA;本番環境は&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/AWS&#34;&gt;AWS&lt;/a&gt;だったり&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/KVM&#34;&gt;KVM&lt;/a&gt;だったり違う仮想化機構で動作しているなんてことよくあると思います。&lt;br&gt;&#xA;そういう環境下でどのように開発環境と本番環境の差分をなくしていますか？&lt;/p&gt;&#xA;&lt;p&gt;わたしの場合、基本的にAnsibleを使ってプロビジョニングをしていますが、&lt;br&gt;&#xA;そのプロビジョニング前のベースが異なってしまって困ることがよくあります。&lt;br&gt;&#xA;一般に公開されているVagrantBox使ったら余計な設定が入っていたとか、すでにパッケージが入っていたとか…&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansible、ソースインストールする際のPalybookの書き方</title>
      <link>https://blog.mosuke.tech/entry/2014/11/16/153223/</link>
      <pubDate>Sun, 16 Nov 2014 15:32:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2014/11/16/153223/</guid>
      <description>&lt;p&gt;こんにちは。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;&#xA;最近、Ansibleを使い始めました、yumやapt-getでインストールできるものは記述も簡単でいいのですが、&#xA;どうしてもソースインストールが必要な場合があります。ソースコードでのインストールは結構手間がかかるので、ソースインストールを行う際のPlaybookの書き方と注意点をまとめました。&lt;/p&gt;&#xA;&lt;p&gt;まず、ソースインストールを行うには以下のフローを行うと仮定します。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ソースファイルの取得(tarで固められていると仮定)&lt;/li&gt;&#xA;&lt;li&gt;tarファイルの解凍&lt;/li&gt;&#xA;&lt;li&gt;解答してできたディレクトリへ移動&lt;/li&gt;&#xA;&lt;li&gt;configure&lt;/li&gt;&#xA;&lt;li&gt;make&lt;/li&gt;&#xA;&lt;li&gt;make install&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
  </channel>
</rss>
