<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Goldstine研究所</title>
    <link>https://blog.mosuke.tech/categories/kubernetes/</link>
    <description>Recent content in Kubernetes on Goldstine研究所</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 16 Dec 2020 19:21:02 +0900</lastBuildDate><atom:link href="https://blog.mosuke.tech/categories/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenShift on NVIDIA GPU（概要編）</title>
      <link>https://blog.mosuke.tech/entry/2020/12/16/openshift-on-nvidia-gpu/</link>
      <pubDate>Wed, 16 Dec 2020 19:21:02 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/12/16/openshift-on-nvidia-gpu/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日はOpenShiftにNVIDIA GPUのノードを追加して利用する方法2つのブログ（概要編と導入編）に分けて紹介したいと思います。
あまりまだ日本語での情報がないので、挑戦したいと考えている人の参考になればと思います。
また、非常に進化が速く、情報が古くなる可能性もあります。なるべく更新していきたいと思っていますが、最新情報は公式情報をみてください。。
導入編では、OpenShiftを取り扱いますが、他のKubernetesディストリビューションをお使いの方も参考になるところはあると思います。&lt;/p&gt;
&lt;p&gt;導入編： Comming soon&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>P2Pでコンテナイメージを配信できるDragonflyとAlibaba Cloudのなぞ</title>
      <link>https://blog.mosuke.tech/entry/2020/12/02/dragonfly/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/12/02/dragonfly/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
ここ最近、ワケアッて少しAlibaba Cloud関連のKubernetesについて調べています。
ちなみにこちらの記事は&lt;a href=&#34;https://qiita.com/advent-calendar/2020/alibabacloud&#34;&gt;Alibaba Cloud Adovent Calender 2020&lt;/a&gt;の2日目の投稿です。&lt;/p&gt;
&lt;p&gt;Alibaba Cloudの中の人をやめて、もう1年半以上たちますが、まだこうやって調べるとは思わなかったです。いまになっていろいろAlibaba Cloudが取り組んでいるコンテナ関連のことがよく理解できるようになってきました（笑）
本日はアリババ/Alibaba Cloudが開発するP2Pのファイル配信ソフトウェアのDragonflyについて少し書いてみたいと思います。（まだ調べ中のところもあるので許してください）&lt;/p&gt;
&lt;h2 id=&#34;dragonflyとは&#34;&gt;Dragonflyとは&lt;/h2&gt;
&lt;p&gt;Dragonflyは、アリババおよびAlibaba Cloudがメインとなって開発している、オープンソースのP2Pファイル配信の仕組みです。&lt;br&gt;
よくコンテナイメージの配信のためのソフトウェアといわれることもありますが、実態はコンテナイメージだけでなく、どんなファイルにも活用できるものです。
コンテナ時代より前からアリババが研究していた効率的なアプリケーションの配布、キャッシュの配布、ログの配布、画像の配布がもとになっています。
現代のクラウドネイティブの環境になってコンテナイメージの配布にも活用されてきているということです。
その目標は、クラウドネイティブのシナリオにおけるすべての配布問題に取り組むことです。現在、Dragonflyは以下の点に焦点を当てています。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/dragonflyoss/Dragonfly&#34; data-iframely-url=&#34;//cdn.iframe.ly/VOFvh8T&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>[Alibaba Cloud] KubernetesのProfessional managed clustersは何が違うのか？</title>
      <link>https://blog.mosuke.tech/entry/2020/11/29/ack-professional/</link>
      <pubDate>Sun, 29 Nov 2020 20:46:17 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/11/29/ack-professional/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
&lt;a href=&#34;https://www.alibabacloud.com/product/kubernetes&#34;&gt;Container Service for Kubernetes (ACK)&lt;/a&gt; では、新しくマネージドクラスタの中でサービスレベルを選べるようになりました。
&lt;a href=&#34;https://www.alibabacloud.com/help/doc-detail/173290.htm&#34;&gt;Professional managed clusters&lt;/a&gt;というものです。
このクラスターは通常のマネージドクラスタと比べて何が違うのでしょうか？
調べてみたのでまとめました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker Hubのダウンロード回数制限の対策を考える</title>
      <link>https://blog.mosuke.tech/entry/2020/11/18/docker-rate-limit/</link>
      <pubDate>Wed, 18 Nov 2020 17:32:21 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/11/18/docker-rate-limit/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
今日は最近開始されたDocker Hubのイメージダウンロードの回数制限について書きたいと思います。
動向だけはなんとなく追っていたのですが、先日に自分がこの問題に向き合わなければいけないケースに遭遇したため、残しておこうと思い立ちました。&lt;/p&gt;
&lt;h2 id=&#34;きっかけ&#34;&gt;きっかけ&lt;/h2&gt;
&lt;p&gt;本ブログの記事のビルドやデプロイには&lt;a href=&#34;https://app.wercker.com/&#34;&gt;Wecker&lt;/a&gt;というサービスを利用しています。
ある日、記事を投稿しようとしたところCIのビルドがコケて記事を投稿できませんでした。
エラーは以下のとおりで、調べるとDocker Hubのイメージダウンロードの回数制限に引っかかっていることがわかりました。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;fetch failed to pull image debian: API error (500): {&amp;quot;message&amp;quot;:&amp;quot;toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limit&amp;quot;}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.mosuke.tech/image/wercker-docker-rate-limit-error.png&#34; alt=&#34;docker-rate-limit-error&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【翻訳】Kubernetes as a serviceの謎を解く。Alibaba Cloudが1万個のKubernetesクラスタを管理する方法</title>
      <link>https://blog.mosuke.tech/entry/2020/11/17/how-to-manage-lots-of-k8s/</link>
      <pubDate>Tue, 17 Nov 2020 17:24:47 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/11/17/how-to-manage-lots-of-k8s/</guid>
      <description>&lt;p&gt;※本記事は、著者であるZhimin Tangの許可をとって翻訳した記事となります。(&lt;a href=&#34;https://www.cncf.io/blog/2019/12/12/demystifying-kubernetes-as-a-service-how-does-alibaba-cloud-manage-10000s-of-kubernetes-clusters/&#34;&gt;原文&lt;/a&gt;)&lt;br&gt;
また本記事の内容は、2020/12/11のAliEaters Tokyo #16にて発表しており、スライドは以下です。&lt;/p&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/ajzBW1pq1pgkpj&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/mosuke5/alibaba-cloud1kubernetes&#34; title=&#34;Alibaba Cloudが1万個のKubernetesクラスタを管理する方法&#34; target=&#34;_blank&#34;&gt;Alibaba Cloudが1万個のKubernetesクラスタを管理する方法&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;https://www.slideshare.net/mosuke5&#34; target=&#34;_blank&#34;&gt;Shinya Mori (@mosuke5)&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;2015年以来、Alibaba Cloud Container Service for Kubernetes（ACK）は、Alibaba Cloud上でもっとも急速に成長しているクラウドサービスの1つです。今日では、ACKは多数のAlibaba Cloudの顧客にサービスを提供しているだけでなく、Alibabaの社内インフラストラクチャやその他多くのAlibaba Cloudサービスをサポートしています。&lt;/p&gt;
&lt;p&gt;世界的なクラウドベンダーが提供する他の多くのコンテナサービスと同様に、ACKでは信頼性と可用性が最優先事項となっています。これらの目標を達成するために、セルベースでグローバルに利用可能なプラットフォームを構築し、数万個のKubernetesクラスタを稼働させています。&lt;/p&gt;
&lt;p&gt;今回のブログ記事では、クラウドインフラ上で大量のKubernetesクラスタを管理した経験と、その基盤となるプラットフォームの設計についてご紹介します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OperatorSDK for Ansible の開発。チュートリアルの次の一歩</title>
      <link>https://blog.mosuke.tech/entry/2020/10/10/develop-ansible-operator/</link>
      <pubDate>Sat, 10 Oct 2020 14:06:03 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/10/10/develop-ansible-operator/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日は、Kubernetes Operatorの開発に関する情報提供をしたいと思います。
Operatorってなに？ってかたやより内部実装を学びたい方はぜひこちらの書籍（&lt;a href=&#34;https://amzn.to/34SwsvS&#34;&gt;実践入門 Kubernetesカスタムコントローラーへの道&lt;/a&gt;）を参考にしてください。&lt;/p&gt;
&lt;p&gt;Operator開発にはOperatorSDKを利用するのが非常に便利です。Go, Ansible, Helmなどを用いて開発できるのですが、今回はAnsibleを使ったOperatorについて書きます。
OperatorSDKは便利ですが、まだまだ情報が少なく、ドキュメントのチュートリアルを実施したあとに何をすればいいのか？とっつきにくいさもあります。
というわけで、このブログでは、チュートリアル後に何をすればいいか？どんなことを確認していけばいいのか？という観点でまとめてみましたので、ぜひ参考にしてOperator開発を楽しんでください。&lt;/p&gt;
&lt;p&gt;まだチュートリアルをやっていないよ、というかたはこちらから済ましてみましょう。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://sdk.operatorframework.io/docs/building-operators/ansible/tutorial/&#34; data-iframely-url=&#34;//cdn.iframe.ly/2QAR3qE&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>KubernetesのPod内からの名前解決を検証する</title>
      <link>https://blog.mosuke.tech/entry/2020/09/09/kuubernetes-dns-test/</link>
      <pubDate>Wed, 09 Sep 2020 17:45:05 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/09/09/kuubernetes-dns-test/</guid>
      <description>&lt;p&gt;もーすけです。本日は最近おこなったトラブルシューティングの中で、自分がKubernetesのDNSまわりについて理解が乏しく手こずっていたのでその内容について簡単に書いていきたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;前提&#34;&gt;前提&lt;/h2&gt;
&lt;p&gt;これからcurlをhttpサーバに打ったり、digを行ったりしますが、Kubernetes内の下記のような環境で行ってます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.mosuke.tech/image/kubernetes-dns-test-overview.png&#34; alt=&#34;overview&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ZabbixでKubernetesの監視を検討する（Prometheus exporter, Kubernetes API）</title>
      <link>https://blog.mosuke.tech/entry/2020/08/27/zabbix-for-kubernetes/</link>
      <pubDate>Thu, 13 Aug 2020 18:40:35 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/08/27/zabbix-for-kubernetes/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/mosuke5&#34; target=&#34;_blank&#34;&gt;mosuke5&lt;/a&gt; です。
本日は、ZabbixでKubernetesの監視をどこまで頑張れるか考えてみたいと思います。
クラウドネイティブな環境ならPrometheusとそう単純に思うところですが、使い慣れたツールに統合したいことも当然ありますし、選択肢はいろいろあるべきですね。
どんな方法で実現できるのかみていきましょう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>コンテナイメージを軽くする方法と、その原理原則を考える</title>
      <link>https://blog.mosuke.tech/entry/2020/07/09/container-image-size/</link>
      <pubDate>Thu, 09 Jul 2020 18:50:01 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/07/09/container-image-size/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
先日、はじめてラーメン作りに挑戦しました。非常に美味しくできました。
ラーメン作りにも興味ある方はこちらのブログ（&lt;a href=&#34;https://note.com/morisan_life/n/n2f855f8e5a46&#34;&gt;初心者のための、家系ラーメン自作 徹底ガイド！&lt;/a&gt;）をご参照ください（笑）&lt;/p&gt;
&lt;p&gt;さて本題ですが、はじめてコンテナアプリケーションの開発に挑戦していると覚えることがたくさんあり、楽しさ反面大変さもおそらく感じるかと思います。
そんな覚えることがたくさんの中には、コンテナイメージは軽くしたほうがいいというものも含まれるかもしれません。
軽くしないと動かないわけではないので、はじめてコンテナ環境に挑戦している人はどうしても忘れがち、見落としがちなことかもしれません。
しかし、実際の運用を見据えると、軽量であるほうが断然よいです。&lt;br&gt;
その理由を理解すると、みなさんが「なぜコンテナに挑戦しているのか」思い出してくるのではないかと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>コンテナイメージの脆弱性のリスクと対策についてNIST SP 800-190に沿って考える</title>
      <link>https://blog.mosuke.tech/entry/2020/07/08/container-image-security/</link>
      <pubDate>Wed, 08 Jul 2020 21:10:32 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/07/08/container-image-security/</guid>
      <description>&lt;p&gt;少なくとも年内まで在宅勤務が確定しいるもーすけです。&lt;br&gt;
さすがに、出社方法などすべて忘れました（笑）&lt;/p&gt;
&lt;p&gt;はい、本日はコンテナイメージのセキュリティに関する考え方について書きます。&lt;br&gt;
新しくコンテナ環境を導入してみたいけど、セキュリティに対してどう考えたらいいかわからないといった声や、
実際にKubernetes使い始めたけど本当にこれで安全なの？といった不安の声が聞こえてきているのでまとめてみました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>カスタマイズしたJenkinsを作成する方法 on OpenShift</title>
      <link>https://blog.mosuke.tech/entry/2020/07/05/customized-jenkins-on-openshift/</link>
      <pubDate>Sun, 05 Jul 2020 23:00:50 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/07/05/customized-jenkins-on-openshift/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
本日はRed Hatが提供しているKubernetesディストリビューションであるOpenShift上のJenkinsの管理に関するお話です。
OpenShift上でJenkinsを利用する際のプラグイン管理の方法やカスタマイズ方法などをご紹介します。
ハマリポイントもあり困っている方も見かけたのでお役に立てばと思います。&lt;/p&gt;
&lt;p&gt;Jenkins本体ではなくJenkins agnetのカスタマイズに関しては以前に下記ブログを書いてますのでこちらをご参照ください。&lt;/p&gt;
&lt;iframe src=&#34;https://hatenablog-parts.com/embed?url=https%3A%2F%2Frheb.hatenablog.com%2Fentry%2Fopenshift-custom-jenkins-agent&#34; style=&#34;border: 0; width: 100%; height: 190px;&#34; allowfullscreen scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;</description>
    </item>
    
    <item>
      <title>Sock Shopを使ったサービスメッシュ体験のハンズオン</title>
      <link>https://blog.mosuke.tech/entry/2020/07/01/istio-sockshop/</link>
      <pubDate>Wed, 01 Jul 2020 23:00:53 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/07/01/istio-sockshop/</guid>
      <description>&lt;p&gt;おひさしぶりです。もーすけです。&lt;br&gt;
あっという間に６月が終わってしまい、６月はブログが書けませんでしたが、ブログで書きたいなと思うネタはいくつかありますので、時間のすきをみつけて書いていきたいと思います。&lt;/p&gt;
&lt;p&gt;以前に、Sock Shopを使ったマイクロサービスのハンズオン体験についてのブログを書きました。
このネタに、Istioを使ったサービスメッシュを適応するハンズオンを追加したのでお知らせします。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/01/22/sockshop/&#34; data-iframely-url=&#34;//cdn.iframe.ly/YDI2rVR&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>TektonのOperatorによるインストールとHello World</title>
      <link>https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/</link>
      <pubDate>Sun, 10 May 2020 15:15:21 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/mosuke5&#34; target=&#34;_blank&#34;&gt;もーすけ&lt;/a&gt;です。
GWはみなさんいかがお過ごしでしたか？&lt;br&gt;
外に出れないGWという一生でもそんなことが2度あるかわかりませんが非常に大変な日々を過ごされたのではないかと思います。自分は、GWを使ってKubernetes Operatorの開発などに挑戦してみていました。
このあたりの話は別で書きたいと思いますが、Kubernetesのよさについてさらに理解を深めた気がします。&lt;/p&gt;
&lt;p&gt;さて、今日はCloud NativeなCI/CDツールと言われているTektonについて。&lt;br&gt;
何回かに分けて書こうと思いますが、Operatorによるインストール編です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>イメージのプルの効率化を考える。kubernetes-image-puller の紹介</title>
      <link>https://blog.mosuke.tech/entry/2020/04/28/kubernetes-image-puller/</link>
      <pubDate>Tue, 28 Apr 2020 17:17:54 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/04/28/kubernetes-image-puller/</guid>
      <description>&lt;p&gt;FF7リメイク、クリアしました。いまSwitchで原作のFF7をやり直しています。もーすけです。&lt;br&gt;
今日は&lt;a href=&#34;https://github.com/che-incubator/kubernetes-image-puller&#34; target=&#34;_blank&#34;&gt;kubernetes-image-puller&lt;/a&gt;というツールを発見し試してみたので、背景や課題感含めてご紹介していきます。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/che-incubator/kubernetes-image-puller&#34; data-iframely-url=&#34;//cdn.iframe.ly/VbiFtNx&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Jenkins pipelineで複数のOpenShiftクラスタを扱う</title>
      <link>https://blog.mosuke.tech/entry/2020/04/14/jenkins-pipeline-for-multi-cluster/</link>
      <pubDate>Tue, 14 Apr 2020 17:05:07 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/04/14/jenkins-pipeline-for-multi-cluster/</guid>
      <description>&lt;p&gt;もーすけです。今日はJenkinsを使ったKubernetes(OpenShift)環境でのデプロイ関連についてです。&lt;br&gt;
Jenkins pipelineで複数クラスタ（マルチクラスタ）を扱いたい場合の設定方法について確認したので共有します。&lt;/p&gt;
&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;以前にskopeoを用いたコンテナイメージの別レジストリへのコピーする方法について書きました。
イメージを別レジストリへコピーする目的は、イメージをビルドしたクラスタと本番環境が別クラスタの場合などがあります。
複数のクラスタを利用する環境では、１つのJenkins pipelineから複数のOpenShiftのクラスタに対して操作するケースがでてきます。
やることは単純で、複数のクラスタの認証情報を用意して操作することになるわけですが、JenkinsのOpenShift Client Pluginを用いた方法についてメモしていきます。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/04/05/skopeo/&#34; data-iframely-url=&#34;//cdn.iframe.ly/SsqYHwS&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes、namespaceの分け方に迷った場合に考えること</title>
      <link>https://blog.mosuke.tech/entry/2020/04/09/kubernetes-namespace/</link>
      <pubDate>Thu, 09 Apr 2020 17:59:23 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/04/09/kubernetes-namespace/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
Kubernetes Lifeは順調でしょうか？&lt;br&gt;
今回は、すごく基本的なところなのですが、意外となやんでしまうnamespaceの切り方について考えてみようと思います。
よくご質問いただくこともあり、迷ってしまった場合に何を考えればいいか、そのポイントをまとめてみました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skopeoを利用したコンテナイメージのレジストリ間コピー</title>
      <link>https://blog.mosuke.tech/entry/2020/04/05/skopeo/</link>
      <pubDate>Sun, 05 Apr 2020 17:35:48 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/04/05/skopeo/</guid>
      <description>&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;
コロナでの在宅に非常にしんどくなってきました。&lt;br&gt;
ブログを書いて気を紛らわしていきたいと思います。
今回は軽めの話題でSkopeoを利用したコンテナイメージのレジストリ間のコピーについてです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubernetesのリソースの基本を今度こそ理解する</title>
      <link>https://blog.mosuke.tech/entry/2020/03/31/kubernetes-resource/</link>
      <pubDate>Tue, 31 Mar 2020 09:56:21 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/03/31/kubernetes-resource/</guid>
      <description>&lt;p&gt;こんにちは。&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;もーすけ&lt;/a&gt;です。&lt;br&gt;
コロナによる在宅勤務を行っている人も多いと思いますが、在宅は捗っていますか？
テレビからYouTubeなどを使って、カフェの雑音などを流しておくと家の中でも雰囲気はがらっと変わって集中できたりします。
イヤホンなどで流すよりも部屋全体に流れるようにテレビなどでやるとおすすめです。ぜひトライしてみてください。&lt;/p&gt;
&lt;p&gt;今日は、Kubernetesのリソースの基本についてまとめました。&lt;br&gt;
なんとなくでマニフェストのリソースを設定してアプリケーションがエラーになってしまってトラブルシュートに困ったことのある方もおそらくおおいのではないでしょうか。
今回は最低限ここだけは抑えておいたほうがいいだろう、と個人的に感じているリソースの４点（コンテナのへのリソース割り当て, QoS Class, LimitRange、ResourceQuota）についてまとめました。機会あれば別の観点もご紹介したいともいます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KubernetesにおけるCI/CD実践の勘所まとめ</title>
      <link>https://blog.mosuke.tech/entry/2020/03/04/kubernetes-ci-cd/</link>
      <pubDate>Wed, 04 Mar 2020 18:14:26 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/03/04/kubernetes-ci-cd/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/mosuke5&#34; target=&#34;_blank&#34;&gt;もーすけ&lt;/a&gt;です。&lt;br&gt;
前回のブログで「&lt;a href=&#34;https://amzn.to/2PraGZ8&#34; target=&#34;_blank&#34; onClick=&#34;ga(&#39;send&#39;,&#39;event&#39;,&#39;link&#39;,&#39;click&#39;,&#39;to-amz-cloudnativedevops&#39;);&#34;&gt;Kubernetesで実践するクラウドネイティブDevOps&lt;/a&gt;」の書籍を紹介しました。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/02/26/cloud-native-devops/&#34; data-iframely-url=&#34;//cdn.iframe.ly/0pYInqQ&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;こちらの反響もよかったこともあり、KubernetesにおけるCI/CD（継続的インテグレーションと継続的デリバリー）に焦点を絞って、いままでの経験も含めて大事なポイントをいくつかの切り口でまとめることにしました。
一部は書籍の内容とかぶる部分もあるのですが、わたしが普段Kubernetesでのアプリケーション運用に携わる中で大事だと思うことなど含めてご紹介していきます。
KubernetesにおけるCI/CDとしていますが、項目は必ずしもKubernetesに限った話ではありませんのでご了承ください。&lt;/p&gt;
&lt;p&gt;また、もっといろんなトピックを書きたいのですが、すべてのトピックを揃えると記事自体のボリュームも大きくなり公開も遅くなりそうだったので、基本的な内容のみ選んでみました。随時追加されていく（あるいは別記事？）可能性があります。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>運用課題の指南書、Kubernetesで実践するクラウドネイティブDevOps</title>
      <link>https://blog.mosuke.tech/entry/2020/02/26/cloud-native-devops/</link>
      <pubDate>Wed, 26 Feb 2020 23:42:24 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/02/26/cloud-native-devops/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
先日、O&amp;rsquo;REILLY Japanから &lt;a href=&#34;https://amzn.to/2PraGZ8&#34; target=&#34;_blank&#34; onClick=&#34;ga(&#39;send&#39;,&#39;event&#39;,&#39;link&#39;,&#39;click&#39;,&#39;to-amz-cloudnativedevops&#39;);&#34;&gt;Kubernetesで実践するクラウドネイティブDevOps&lt;/a&gt; という本が出版されました。
最近仕事でKubernetes上のアプリケーションに関するDevOpsやCI/CDによく携わっているのもあり、発売日に手にとりにいきました。
せっかくなので、こちらの本の紹介をしていきたいと思います。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/Kubernetes%25E3%2581%25A7%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2583%258D%25E3%2582%25A4%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596DevOps-John-Arundel/dp/4873119014&#34; data-iframely-url=&#34;//cdn.iframe.ly/j1izGzy?iframe=card-small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Sock Shopを使ったマイクロサービス体験のハンズオン</title>
      <link>https://blog.mosuke.tech/entry/2020/01/22/sockshop/</link>
      <pubDate>Wed, 22 Jan 2020 14:44:04 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2020/01/22/sockshop/</guid>
      <description>&lt;p&gt;あけましておめでとうございます。&lt;a href=&#34;https://twitter.com/mosuke5&#34; target=&#34;_blank&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
マイクロサービスの実際の体験や研修を探したことがありますでしょうか。
残念ながら、実際に手を動かしなら学ぶトレーニングや研修は多く存在しませんが、
マイクロサービスのデモアプリケーションとして&lt;a href=&#39;https://microservices-demo.github.io/&#39; target=&#39;_blank&#39;&gt;Sock Shop&lt;/a&gt;が有名で、これはトレーニングに最適です。&lt;/p&gt;
&lt;p&gt;日本語でもたくさんのSock Shopの紹介やインストール記事がでています。しかし、自分もそうだったのですが、なんとなく起動して動かして、終わりとなっているものがおおく、どんな観点でこのSock Shopをいじっていけばいいかの情報が足りないと感じました。
機会があり、Sock Shopをさわるタイミングがあったので、実際にどんなデータ構造になっているのか、マイクロサービスゆえの課題など、Sock Shopから少しでも多くの学びが得られるようにこの記事を書きます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes上のリソースをAnsibleで管理する</title>
      <link>https://blog.mosuke.tech/entry/2019/08/21/ansible-for-k8s-resources/</link>
      <pubDate>Wed, 21 Aug 2019 19:36:45 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/08/21/ansible-for-k8s-resources/</guid>
      <description>&lt;p&gt;お久しぶりです。@mosuke5です。&lt;br&gt;
Kubernetes上のリソースをどのように管理していますか？
&lt;code&gt;kubectl apply -f manifest-file.yml&lt;/code&gt; のようにkubectlを使うことがまず多いのかなと思います。
自分もそのようにデプロイすることがおおいです。
今日はAnsibleを用いてKubernetes上のリソースを管理することを試してみたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sidecar方式のFluentdでCloudWatch logsへログを集約することについての検討</title>
      <link>https://blog.mosuke.tech/entry/2019/07/12/sidecar-fluentd-to-cloudwatchlogs/</link>
      <pubDate>Fri, 12 Jul 2019 12:57:59 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/07/12/sidecar-fluentd-to-cloudwatchlogs/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;br&gt;
Kubernetes上でのアプリケーションのロギングについてFluentdを使ってどうできるか考えていきます。
今回はサイドカー方式という方法を使ってFluentdでAWS CloudWatch logsへ集約することについてやってみました。&lt;/p&gt;
&lt;p&gt;FluentdとAWSの連携については、以前にそういえばこんなものもかきましたので、参考にしてください。自分も復習で見返しました。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2017/09/03/fluentd_to_dynamodb/&#34; data-iframely-url=&#34;//cdn.iframe.ly/fUX8Gqb&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>CKADを取得の対策や試験当日の対応について</title>
      <link>https://blog.mosuke.tech/entry/2019/07/08/ckad/</link>
      <pubDate>Mon, 08 Jul 2019 09:12:22 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/07/08/ckad/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;@mosuke5&lt;/a&gt;です。&lt;a href=&#34;https://www.cncf.io/certification/ckad/&#34; target=&#34;_blank&#34;&gt;CKAD(Certified Kubernetes Application Developer)&lt;/a&gt;を受けてきました。&lt;br&gt;
すでに多くのCKA/CKADの合格レポートや体験記がでておりますが、
それでも自分が実際に受けてみるまで不安な要素も多くあったので、
そのあたりを払拭するべくこの記事を書きたいと思います。&lt;/p&gt;
&lt;p&gt;2019年7月5日にCKADを受験して無事に合格しました。&lt;br&gt;
スコアは89%と案外高く(66%で合格)、驚きでもあったのですが、その体験をこれから受験する人にもシェアできればと思います。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.mosuke.tech/image/ckad-certificate.png&#34; alt=&#34;ckad-certificate&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kustomizeで環境ごとに異なるマニフェストを作る</title>
      <link>https://blog.mosuke.tech/entry/2019/06/21/kustomize/</link>
      <pubDate>Fri, 21 Jun 2019 10:57:12 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/06/21/kustomize/</guid>
      <description>&lt;p&gt;ブログの更新頻度が落ちていますが、サボっているわけではないです。。
はい。mosuke5です。&lt;/p&gt;
&lt;p&gt;やはりKubernetesマニフェストのテンプレートエンジンは必要だ、と気づいてしまったので、マニフェストを生成できるツールを探していました。
そこで、Kustomizeを試しみたのでアウトプットとして残しておきます。使ってみた上でハマったポイントや注意すべき点なども含めて書きたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes上のリソースをTerraformで管理するメリットとデメリット</title>
      <link>https://blog.mosuke.tech/entry/2019/03/07/k8s-with-terraform/</link>
      <pubDate>Thu, 07 Mar 2019 01:06:27 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/03/07/k8s-with-terraform/</guid>
      <description>&lt;p&gt;@mosuke5です。早くも3月になってしまいました。&lt;br&gt;
しかし、個人的にはこの2か月は非常に動きがあった2か月でしたのでいろいろ楽しかったです。&lt;/p&gt;
&lt;p&gt;さて、本題ですが、、&lt;br&gt;
わたしの好きなTerraformを使ってKubernetesクラスタ上のリソースを管理するのをやってみたいと思います。&lt;br&gt;
そもそもKubernetesをTeraformで管理するとなると2つのレイヤーの話があります。
今回は、後者のほうに重きを置いてお伝えします。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;KubernetesクラスターそのものをTerraformで管理する&lt;/li&gt;
&lt;li&gt;Kubernetesクラスター上のリソースをTerraformで管理する&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Virtual Kubeletとは何か。Alibaba Cloud上で実際に動かして検証する</title>
      <link>https://blog.mosuke.tech/entry/2019/02/03/virtual-kubelet/</link>
      <pubDate>Sun, 03 Feb 2019 15:49:10 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2019/02/03/virtual-kubelet/</guid>
      <description>&lt;p&gt;はい、@mosuke5です。&lt;br&gt;
ここ最近、会社でも少しずつKubernetesに関するはなしなどもでてきており、自分の興味ある分野だったこともあり本腰いれて遊んでおります。
そのなかで、Alibaba CloudもProviderを出しているという、&lt;a href=&#34;https://github.com/virtual-kubelet/virtual-kubelet&#34;&gt;Virtual Kubelet&lt;/a&gt;について気になったので、実際に動かして概念の整理と使いどころについて考えてみました。&lt;/p&gt;
&lt;p&gt;例ではAlibaba CloudのKubernetesとECIを使っていますが、基本的な考え方は同じですので、Virtual Kubeletについて勉強したい人はぜひ読んでみてください。&lt;/p&gt;
&lt;h5 id=&#34;2019310-追記&#34;&gt;2019/3/10 追記&lt;/h5&gt;
&lt;p&gt;こちらの記事の内容についてはSlideShareにしていくつかのイベントで発表しています。&lt;a href=&#34;https://www.slideshare.net/mosuke5/virtualkubeletalibaba-cloud-133164822&#34;&gt;こちらもご参照&lt;/a&gt;ください。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
