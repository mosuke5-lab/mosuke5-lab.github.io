<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ポートフォワード on Goldstine研究所</title>
    <link>https://mosuke.tech/categories/%E3%83%9D%E3%83%BC%E3%83%88%E3%83%95%E3%82%A9%E3%83%AF%E3%83%BC%E3%83%89/</link>
    <description>Recent content in ポートフォワード on Goldstine研究所</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 13 Aug 2015 00:04:00 +0900</lastBuildDate>
    
	<atom:link href="https://mosuke.tech/categories/%E3%83%9D%E3%83%BC%E3%83%88%E3%83%95%E3%82%A9%E3%83%AF%E3%83%BC%E3%83%89/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>デスクトップUbuntuにVNC接続。ついでにSSHローカルポートフォワードの復習。</title>
      <link>https://mosuke.tech/entry/2015/08/13/000440/</link>
      <pubDate>Thu, 13 Aug 2015 00:04:00 +0900</pubDate>
      
      <guid>https://mosuke.tech/entry/2015/08/13/000440/</guid>
      <description>完全に自分のための備忘録。内容はわりと薄め。
やったこと 最近、自作したPCにUbuntuをいれて使っているのだけど、
デスクトップPCなので、部屋でしか操作することができません。
他の部屋からノートPCでUbuntuを触れたらいいなーと思いその環境を整えることをしました。
主にやったことは以下の通りです。
  VNCサーバ構築について ノートPC（Mac）からのVNC接続について  SSHローカルポートフォワードを使ってのセキュアな接続について   UbuntuでのVNCサーバ構築について 今回利用しているUbuntuは「Ubuntu Desktop 14.04」です。
また、VNCの実現は標準でインストールされているvinoを使って行いました。
ご存知の方も多くいるかもしれませんが、vinoでのVNCは簡易的なもので、サーバ側のユーザがログアウトしていると使えません。
ですので、会社などでの利用には耐えないと思います。
ユーザーをログアウトせずにロック状態にしていれば使えます。
まずはデスクトップ共有の設定をします。
「デスクトップの共有」のアプリケーションを起動します。 
接続毎に要求するようにすると、サーバ側で毎度許可が必要なので、オフにします。
パスワードの設定はしておきましょう。
同じLANをつかんでる人に簡単に奪われてしまいますので。

ちょっと詳細な意味を把握していないのですが、
下記を実行しないとMacで接続すると「互換性のないバージョンです」的なこといわれました…すいません。
$ gsettings set org.gnome.Vino require-encryption false  設定ができたら、きちんとサーバとしてVNC接続を待ち受けているか確認します。
% sudo lsof -i:5900 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME vino-serv 24414 mosuke5 13u IPv6 156661 0t0 TCP *:5900 (LISTEN) vino-serv 24414 mosuke5 14u IPv4 156662 0t0 TCP *:5900 (LISTEN) % ps -ef | grep vino mosuke5 24414 24226 0 12:30 ?</description>
    </item>
    
    <item>
      <title>SSHポートフォワード、https接続をするときに間違えやすいこと</title>
      <link>https://mosuke.tech/entry/2015/02/11/172123/</link>
      <pubDate>Wed, 11 Feb 2015 17:21:00 +0900</pubDate>
      
      <guid>https://mosuke.tech/entry/2015/02/11/172123/</guid>
      <description>SSHローカルフォワードの話。
前回は簡単に実践してみたというのを書いたのだが、今度は実際に使ってみてハマった部分があったのでメモ。
SSHでローカルポートフォワードを実際に試す - Goldstine研究所
1. やりたいこと httpsでしか接続を許可していないサーバへ、SSHローカルフォワーディングを使って接続しようした。
（直接疎通性がないためにポートフォワーディングする必要があった。）
2. 行ったこと httpsでしか接続ができないので、ローカル端末のポート5000を接続したいサーバのポート443に飛ばせばおっけーと思って、
下記のようにssh接続とブラウザから接続を行った。
ssh -L5000:web-host:443 user@ssh-host  ※web-host: 今回httpsで接続したサーバ
※ssh-host: ssh接続先サーバ
これでローカルフォワーディングの設定は終わったので、ブラウザから以下に接続するだけで終わりだと思っていた。
http://localhost:5000  が、接続不可…なぜでしょう？
3. 何が間違いだったか 正しくは以下で接続をしなければいけない。httpsが必要。
https://localhost:5000  よーく考えればアタリマエのこと。
URLのはじめの&amp;lt;http(s)&amp;gt;の部分はプロトコルで最後の&amp;lt;:5000&amp;gt;の部分はポート番号。
httpsは443のポートを一般的に使うが、ポート443がhttpsというわけではない。
あたりまえのことだし知っていることなんだけど、見落としがちかもしれない。</description>
    </item>
    
    <item>
      <title>SSHでローカルポートフォワードを実際に試す</title>
      <link>https://mosuke.tech/entry/2014/12/31/170545/</link>
      <pubDate>Wed, 31 Dec 2014 17:05:00 +0900</pubDate>
      
      <guid>https://mosuke.tech/entry/2014/12/31/170545/</guid>
      <description>SSH・・・
いろんなことができる&amp;rdquo;らしい&amp;rdquo;ということは知っていたし、
例えばポートフォワーディングなんていうこともできるのも知っている。
でもそれがどんなものなのか自分の手で試したことはないし、
なんとなくただのサーバログインツールとして利用していた。
サーバインフラ技術に興味を持つようになっていろんなことを勉強していると、
ポートフォワーディングは必須な技術であることも感じ、
年末の持て余す時間を使ってSSHのローカルポートフォワードを試してみたのでメモする。
環境とやりたいこと 
ローカルPCからexample.jpは以下で接続できる状態。
[local pc] $ ssh username@example.jp  またWebサーバのポート番号は80で、VPSのホストサーバからはWebサーバへ接続できる。
CUIなのでわかりづらいがcurlを打つとHello Worldが返ってきている。
[example.jp] $ curl 192.168.33.10 &amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Hello World! Virtual Web Server&amp;lt;/h1&amp;gt; &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;  ローカルポートフォワードの実行 ローカルPCから以下を実行する。
以下のコマンドは、
ローカルPCのポート8888での接続はexample.jpからみて「192.168.33.10のポート80」に飛ばす
といったもの。
[local pc] $ ssh -L8888:192.168.33.10:80 username@example.jp  この状態でブラウザからhttp://localhost:8888にアクセスすると
なんと、ローカルホストにつないだはずが、example.jp上の仮想Webサーバのhtmlがうつっているではないか…

セキュリティはどうなの？ ローカルの端末からhttpで仮想のWebサーバに接続しているけど、セキュリティはだいじょうぶなのだろうか？
http通信だから暗号化はされていないのだろうか？
なんて疑問もあるが、それは問題ない。
SSHでローカルPCからリモートホスト(example.jp)までトンネルをはり、
そのなかをhttpで通信しているから全く問題なしといえる。
ローカルポートフォワードを利用する場合は、おそらく表には出したくないけど、
ローカルから接続したいなどの要件の時に使うと思うけど、SSHできちんと暗号化しているので安心。
最後に SSHでできることはこの他にもたくさんある。
ポートフォワードだけみても他にも「リモートポートフォワード」や「ダイナミックポートフォワード」などがある。
リモートポートなどはいまぱっと試せる環境がなかったのでおいおい実践してみる…
SSHをただのログインツールだけに留めるのは今年で終わりにしよう…</description>
    </item>
    
  </channel>
</rss>