<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2021 on Goldstine研究所</title>
    <link>https://blog.mosuke.tech/archive/2021/</link>
    <description>Recent content in 2021 on Goldstine研究所</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 06 Mar 2021 22:43:43 +0900</lastBuildDate><atom:link href="https://blog.mosuke.tech/archive/2021/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tekton、Tasksにパラメータを設定する</title>
      <link>https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/</link>
      <pubDate>Sat, 06 Mar 2021 22:43:43 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params/</guid>
      <description>&lt;p&gt;Tekton学習シリーズ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;TektonのOperatorによるインストールとHello World&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
今回はTektonのTaskにパラメータを引き渡す方法についてみていきます。
前回までは、Taskにべた書きしたコマンドを実行しましたが、パラメータ指定し変数化する方法を確認します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tekton、TaskのStepの実行順序について確認する</title>
      <link>https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/</link>
      <pubDate>Sat, 06 Mar 2021 16:34:41 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/</guid>
      <description>&lt;p&gt;Tekton学習シリーズ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34;&gt;TektonのOperatorによるインストールとHello World&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第2回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-multi-steps-task/&#34;&gt;Tekton、TaskのStepの実行順序について確認する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第3回: &lt;a href=&#34;https://blog.mosuke.tech/entry/2021/03/06/tekton-task-with-params&#34;&gt;Tekton、Taskにパラメータを引き渡す&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前回、TektonのOperatorを使ったインストールについて解説しました。
今回は、もうすこしTaskの動きを確認してみます。具体的には、Task内のStepの役割や、複数のStepがある場合の実行順序の制御方法などについて確認してみます。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/05/10/tekton-operator/&#34; data-iframely-url=&#34;//cdn.iframe.ly/aQ48OK3&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Redis on Kubernetesの検討ポイントとredis-ha Helm chart</title>
      <link>https://blog.mosuke.tech/entry/2021/03/03/redis-on-kubernetes/</link>
      <pubDate>Wed, 03 Mar 2021 11:40:54 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/03/redis-on-kubernetes/</guid>
      <description>&lt;p&gt;もーすけです。最近は、お金の勉強ばかりしてます。&lt;br&gt;
住宅ローンをきっかけに、いままでやってきた株や投資信託のポートフォリオを見直して、確定申告やら、税金やら。。これまた学びがいのあるジャンルで楽しくて勉強しています。&lt;/p&gt;
&lt;p&gt;今回は、インメモリDBである&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;をKubernetesにデプロイ・運用するための方針や方法にについてまとめます。&lt;br&gt;
いまとなってはRedisを検討することはめずらしくなくなりましたよね。セッションやキャッシュの保管先、ランキングデータの管理などさまざまなところで利用されているかと思います。そんなRedisをKubernetesで使う場合に考えるポイントを簡単に説明します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenShiftでCA証明書を追加することについての検証</title>
      <link>https://blog.mosuke.tech/entry/2021/03/01/openshift-add-user-ca/</link>
      <pubDate>Mon, 01 Mar 2021 18:47:31 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/03/01/openshift-add-user-ca/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
最近検証したOpenShiftへのCA証明書を追加することについてです。
どういうケースでCA証明書の追加が必要かというと、自己証明書で運用されているレジストリとかプロキシに接続しなければいけないケースなどです。
たとえば以下のようなケースでしょうか。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;非インターネット環境でのOpenShiftのインストールでミラーレジストリを構築した場合（ミラーレジストリの証明書が必要なケース）&lt;/li&gt;
&lt;li&gt;OpenShift外にプライベートのコンテナレジストリを構築していて使っている場合（上とほぼ同義）&lt;/li&gt;
&lt;li&gt;インターネットに出るのにプロキシを経由する必要があり、その証明書が必要な場合&lt;/li&gt;
&lt;li&gt;社内のセキュリティでTLS復号化装置（SSL可視化ソリューションとかよばれるもの）を導入しており、その機器の証明書をインストールしなければならない場合&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;このときの証明書の追加の動きについて確認したので見ていきたいと思います。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jaegerを使った分散トレーシングの検証 on Kubernetes (1)</title>
      <link>https://blog.mosuke.tech/entry/2021/02/08/jaeger-operator/</link>
      <pubDate>Mon, 08 Feb 2021 17:04:05 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/02/08/jaeger-operator/</guid>
      <description>&lt;p&gt;もーすけです。&lt;br&gt;
過去にDatadogでAPMを少し検証したり、トレーニングの中でJaegerを触ったりしましたが、正直ちゃんとわかっていなかったので、改めてJaegerというか分散トレーシングについて検証してみたいと思います。&lt;/p&gt;
&lt;p&gt;今回はKubernetes上にJaegerを構築するので、&lt;a href=&#34;https://www.jaegertracing.io/docs/1.21/operator/&#34;&gt;Jaeger Operatorをインストール&lt;/a&gt;して利用します。
今回はOpenShiftにて検証していますが、他のKubernetesディストリビューションでも同じように利用可能です。&lt;code&gt;oc&lt;/code&gt; は &lt;code&gt;kubectl&lt;/code&gt; と置き換えて読んでください。
検証環境は下記のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenShift: 4.4&lt;/li&gt;
&lt;li&gt;Jaeger: 1.17&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>新形式のCKAを受験し合格しました。受験の教訓紹介。</title>
      <link>https://blog.mosuke.tech/entry/2021/02/07/cka/</link>
      <pubDate>Sun, 07 Feb 2021 11:57:42 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/02/07/cka/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;
本日は、ついに？ようやく？&lt;a href=&#34;https://training.linuxfoundation.org/ja/certification/certified-kubernetes-administrator-cka/&#34;&gt;CKA（Certified Kubernetes Administorator）&lt;/a&gt;をとりましたのでその報告です。
いまさらのCKA取得に関することなので、CKAとはなんなのか？とかそのあたりについては本ブログでは割愛します。ぜひ他のブログを参照してください。
どちらかというと、個人的なモチベーションや準備したこと、受験に関する教訓（失敗談）などを中心にまとめたいと思います。
1年半ほど前にCKADをとったときのブログは以下です。合わせて読んでみてください。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2019/07/08/ckad/&#34; data-iframely-url=&#34;//cdn.iframe.ly/mmfuBDQ&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes上のアプリケーションをtcpdumpでデバッグする</title>
      <link>https://blog.mosuke.tech/entry/2021/01/31/network-debug-on-containers/</link>
      <pubDate>Sun, 31 Jan 2021 12:10:51 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/01/31/network-debug-on-containers/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。休日はもっぱら住宅購入の検討で忙しいマンです。&lt;br&gt;
さて、本日は、Kubernetesのアプリケーションのデバッグに関して書きます。&lt;/p&gt;
&lt;p&gt;Kubernetesで運用中のアプリケーションの障害対応で、ネットワーク関連のデバッグをしたいことはよくあります。
このブログでは具体的にtcpdumpを取得したいという場面を想定して書きます。
コンテナアプリケーションの開発・運用をしていると、&lt;strong&gt;イメージのサイズを小さく保っておきたい&lt;/strong&gt;と思うはずです。
その理由についてはいろいろとありますが、イメージの展開のスピードを高めることで、デプロイや障害時の復旧を早めるなどが代表的なところです。（関連するトピックとして「&lt;a href=&#34;https://blog.mosuke.tech/entry/2020/07/09/container-image-size/&#34;&gt;コンテナイメージを軽くする方法と、その原理原則を考える&lt;/a&gt;」も読んでみてください。）&lt;/p&gt;
&lt;p&gt;それゆえに、アプリケーションの動作に必要なライブラリ以外は入れないことが多く、デバッグツールを除外しておくことが多いでしょう。
しかし、障害発生時にいざtcpdumpやstrace, ping ,digなどを打ちたいと思ってもインストールされておらず困ることがあります。
そんな場面に遭遇しても焦らないようにあらかじめ対応策を頭に入れて練習しておきましょう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>分散システム構築の良書「データ指向アプリケーションデザイン」を動画で解説する</title>
      <link>https://blog.mosuke.tech/entry/2021/01/24/designing-data-intensive-applications/</link>
      <pubDate>Sun, 24 Jan 2021 22:14:44 +0900</pubDate>
      
      <guid>https://blog.mosuke.tech/entry/2021/01/24/designing-data-intensive-applications/</guid>
      <description>&lt;p&gt;あけましておめでとうございます（いまさらｗ）。もーすけです。&lt;br&gt;
最近は&lt;a href=&#34;https://amzn.to/3c3QSXS&#34;&gt;呪術廻戦&lt;/a&gt;にハマっています。ぜひまだ見てない方見てみてください！&lt;/p&gt;
&lt;p&gt;さて本題ですが、新年はじめの投稿はデータ指向アプリケーションデザインという書籍についてです。
最近読んだ中で一番良かった本ではないかと思っています。
実は、勤めている会社内でこの書籍の輪読会を行っていて、自分が12章（最終章）を担当しました。
12章はこの本の一番言いたいことが書いてある章でもあったので、本の魅力を理解してもらうのにもしかして役立つのでは！？と思い、この書籍の紹介しつつ、輪読会で発表した内容を動画で解説していきたいと思います。&lt;/p&gt;
&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%258C%2587%25E5%2590%2591%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3-%25E2%2580%2595%25E4%25BF%25A1%25E9%25A0%25BC%25E6%2580%25A7%25E3%2580%2581%25E6%258B%25A1%25E5%25BC%25B5%25E6%2580%25A7%25E3%2580%2581%25E4%25BF%259D%25E5%25AE%2588%25E6%2580%25A7%25E3%2581%25AE%25E9%25AB%2598%25E3%2581%2584%25E5%2588%2586%25E6%2595%25A3%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25AE%25E5%258E%259F%25E7%2590%2586-Martin-Kleppmann/dp/4873118700/ref=as_li_ss_tl?__mk_ja_JP=%25E3%2582%25AB%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%258A&amp;amp;crid=2BPOJXMM3HRBI&amp;amp;dchild=1&amp;amp;keywords=%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%258C%2587%25E5%2590%2591%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3&amp;amp;qid=1609856555&amp;amp;s=books&amp;amp;sprefix=%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%258C%2587%25E5%2590%2591,stripbooks,322&amp;amp;sr=1-1&amp;amp;linkCode=sl1&amp;amp;tag=mosuke5-22&amp;amp;linkId=efa0699587a4390b39b0c36390972d1b&amp;amp;language=ja_JP&#34; data-iframely-url=&#34;//cdn.iframe.ly/wFy8hQ0?iframe=card-small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
  </channel>
</rss>
