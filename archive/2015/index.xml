<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2015 on Goldstine研究所</title>
    <link>https://blog.mosuke.tech/archive/2015/</link>
    <description>Recent content in 2015 on Goldstine研究所</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 28 Dec 2015 15:00:00 +0900</lastBuildDate>
    <atom:link href="https://blog.mosuke.tech/archive/2015/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2015年振り返り</title>
      <link>https://blog.mosuke.tech/entry/2015/12/28/150042/</link>
      <pubDate>Mon, 28 Dec 2015 15:00:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/12/28/150042/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;去年に続き、2015年で技術分野でなにがあったか簡単に振り返りました。&lt;br&gt;&#xA;&lt;a href=&#34;https://blog.mosuke.tech/entry/2015/01/01/161826&#34;&gt;2014年を思い返して… - Goldstine研究所&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1&gt;1. &lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Vim&#34;&gt;Vim&lt;/a&gt;::Factoryの開発と公開&lt;/h1&gt;&#xA;&lt;p&gt;&lt;span itemscope itemtype=&#34;http://schema.org/Photograph&#34;&gt;&lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/m/mosuke5/20151227/20151227172616.png&#34; alt=&#34;f:id:mosuke5:20151227172616p:plain:w300&#34; title=&#34;f:id:mosuke5:20151227172616p:plain:w300&#34; class=&#34;hatena-fotolife&#34; style=&#34;width:300px&#34; itemprop=&#34;image&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;2014年の秋から@mogulla3と定期的にインフラ関連技術の勉強会をやってきていて、&lt;br&gt;&#xA;はじめはインプットの勉強会だけを主にやってきていたのですが、&lt;br&gt;&#xA;サービスを作る中でインフラ関連技術を駆使し勉強したいと思うようなっていました。&lt;br&gt;&#xA;そこで、今年は「&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/vim&#34;&gt;vim&lt;/a&gt;の設定をブラウザ上で即体感できるサービス &lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Vim&#34;&gt;Vim&lt;/a&gt;::Factory」の開発をしました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>AnsibleとServerspecの実行をRakeタスクにまとめる</title>
      <link>https://blog.mosuke.tech/entry/2015/12/17/192554/</link>
      <pubDate>Thu, 17 Dec 2015 19:25:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/12/17/192554/</guid>
      <description>&lt;p&gt;こんにちは&lt;a href=&#34;https://twitter.com/mosuke5&#34;&gt;もーすけ&lt;/a&gt;です。&lt;br&gt;&#xA;私が趣味で開発しているシステムでは、Ansibleを使って、サーバ構築からアプリケーションのデプロイまで実行できるように管理しています。&#xA;そして、serverspecを使って、そのサーバに対するインフラテストも行っています。しかし、その運用にいくつか課題点がありました。&lt;/p&gt;&#xA;&lt;p&gt;その課題点についてと、課題点へ対策したことについて書きます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansible、実行速度高速化の実験。ControlMasterとPipeliningについて</title>
      <link>https://blog.mosuke.tech/entry/2015/12/01/181304/</link>
      <pubDate>Tue, 01 Dec 2015 18:13:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/12/01/181304/</guid>
      <description>&lt;body&gt;&#xA;Ansibleの実行速度に不満を持っている人は多いのではないだろうか。&lt;br&gt;&#xA;自分もそのひとりであったのだが、ControlMasterやpipeliningといった機能を使って高速化に成功した。&#xA;本ブログでは、その効果の実験を行ったので参考にしてください。</description>
    </item>
    <item>
      <title>serverspecを使ったインフラのテストを導入した理由と工夫している点</title>
      <link>https://blog.mosuke.tech/entry/2015/11/02/161744/</link>
      <pubDate>Mon, 02 Nov 2015 16:17:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/11/02/161744/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;※執筆後、業務でもserverspecを利用し始めたのもあり、業務レベルでの実践例も追記しました。&lt;/p&gt;&#xA;&lt;p&gt;運営中のVim::Factoryでserverspecを使ったインフラテストを導入したので、&#xA;導入理由や工夫している点、悩んでいる点について記述します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansibleを踏み台サーバ越しに実行する方法</title>
      <link>https://blog.mosuke.tech/entry/2015/09/25/232751/</link>
      <pubDate>Fri, 25 Sep 2015 23:27:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/09/25/232751/</guid>
      <description>&lt;body&gt;&#xA;Ansibleを使ってどんどん構築の自動化を進めている。  &#xA;すすめていくと、Ansibleを実行する端末からネットワーク的に直接届かないサーバに対してプロビジョニングしたいケースがでてくる。そこで、踏み台サーバ越しにAnsibleでプロビジョニングしていくことを試してみる。</description>
    </item>
    <item>
      <title>デスクトップUbuntuにVNC接続。SSHを活用してセキュアに接続する</title>
      <link>https://blog.mosuke.tech/entry/2015/08/13/000440/</link>
      <pubDate>Thu, 13 Aug 2015 00:04:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/08/13/000440/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;こんにちは。もーすけです。&lt;br&gt;UbuntuのデスクトップにVNCを使ってリモートデスクトップを行う方法を紹介します。またその際に、SSHを活用してセキュアに接続することを行ってみます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Packerやる前にKickstartはじめよう</title>
      <link>https://blog.mosuke.tech/entry/2015/07/31/211542/</link>
      <pubDate>Fri, 31 Jul 2015 21:15:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/07/31/211542/</guid>
      <description>&lt;body&gt;&#xA;&lt;h1&gt;1.はじめに&lt;/h1&gt;&#xA;&lt;p&gt;開発環境はVirualboxを使った&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Vagrant&#34;&gt;Vagrant&lt;/a&gt;を利用しているが、&lt;br&gt;&#xA;本番環境は&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/AWS&#34;&gt;AWS&lt;/a&gt;だったり&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/KVM&#34;&gt;KVM&lt;/a&gt;だったり違う仮想化機構で動作しているなんてことよくあると思います。&lt;br&gt;&#xA;そういう環境下でどのように開発環境と本番環境の差分をなくしていますか？&lt;/p&gt;&#xA;&lt;p&gt;わたしの場合、基本的にAnsibleを使ってプロビジョニングをしていますが、&lt;br&gt;&#xA;そのプロビジョニング前のベースが異なってしまって困ることがよくあります。&lt;br&gt;&#xA;一般に公開されているVagrantBox使ったら余計な設定が入っていたとか、すでにパッケージが入っていたとか…&lt;/p&gt;</description>
    </item>
    <item>
      <title>DockerとWebSocketを使って、vimの設定をブラウザで即体感できるサービスを作った</title>
      <link>https://blog.mosuke.tech/entry/2015/07/19/135844/</link>
      <pubDate>Sun, 19 Jul 2015 13:58:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/07/19/135844/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;※ブログのドメイン変更によりはてブが消えてしまいましたが、450はてぶくらいついてました。&lt;a href=&#34;http://b.hatena.ne.jp/entry/mosuke5.hateblo.jp/entry/2015/07/19/135844&#34; target=&#34;_blank&#34;&gt;こちらが当時の痕跡&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;2014年の秋から`@mogulla3`と定期的にインフラ関連技術の勉強会をやってきましたが、&lt;br&gt;&#xA;インプットの勉強会だけでは飽き足らず、いつしかサービスを作る中でインフラ関連技術を駆使し勉強したいと思うように…&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgreSQL環境でFuelPHPのDBマイグレーションを使う</title>
      <link>https://blog.mosuke.tech/entry/2015/06/17/212852/</link>
      <pubDate>Wed, 17 Jun 2015 21:28:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/06/17/212852/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;今更&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/FuelPHP&#34;&gt;FuelPHP&lt;/a&gt;感はあるのだが、&lt;br&gt;&#xA;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/postgresql&#34;&gt;postgresql&lt;/a&gt;利用時の&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/FuelPHP&#34;&gt;FuelPHP&lt;/a&gt;のmigration導入について、注意点をまとめた。&lt;br&gt;&#xA;でも、結論は納得がいっていない。&lt;/p&gt;&#xA;&lt;h1&gt;0. 前提&lt;/h1&gt;&#xA;&lt;p&gt;下記の環境で行ったものです。&lt;br&gt;&#xA;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/PHP&#34;&gt;PHP&lt;/a&gt;: 5.5.7&lt;br&gt;&#xA;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/FuelPHP&#34;&gt;FuelPHP&lt;/a&gt;: 1.7&lt;br&gt;&#xA;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Postgresql&#34;&gt;Postgresql&lt;/a&gt;: 9.4&lt;/p&gt;&#xA;&lt;h1&gt;1. テーブル&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%CA%B8%BB%FA%A5%B3%A1%BC%A5%C9&#34;&gt;文字コード&lt;/a&gt;の問題&lt;/h1&gt;&#xA;&lt;h1&gt;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%BB%F6%BE%DD&#34;&gt;事象&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;p&gt;公式サイトのサンプルの通りはじめに&lt;code&gt;app/migrations/001_example.php&lt;/code&gt;を作り、migrationを実行した。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ajaxの嫌いだった部分をJsRenderで心地良くした</title>
      <link>https://blog.mosuke.tech/entry/2015/06/13/231917/</link>
      <pubDate>Sat, 13 Jun 2015 23:19:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/06/13/231917/</guid>
      <description>&lt;body&gt;&#xA;&lt;h1&gt;1. はじめに&lt;/h1&gt;&#xA;&lt;p&gt;ぼくはフロントエンドは本業ではありません。&lt;br&gt;&#xA;jsはあまり好きではありません。&lt;br&gt;&#xA;そして&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Ajax&#34;&gt;Ajax&lt;/a&gt;通信後にhtmlをアウトプットする際にjsの変数の中にhtmlを書いていく&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&#34;&gt;ソースコード&lt;/a&gt;がもっと好きではありません。(後述)&lt;br&gt;&#xA;それをJSテンプレートエンジンを使ってシンプルにしてみたって話です。&#xA;（JsRenderの使い方を書いたものではありません。）&lt;/p&gt;</description>
    </item>
    <item>
      <title>sinatra-assetpackをproduction環境で使う時にの注意点</title>
      <link>https://blog.mosuke.tech/entry/2015/05/08/174732/</link>
      <pubDate>Fri, 08 May 2015 17:47:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/05/08/174732/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Sinatra&#34;&gt;Sinatra&lt;/a&gt;アプリケーションで、JSファイルを圧縮する&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/sinatra&#34;&gt;sinatra&lt;/a&gt;-assetpackを利用していて、&lt;br&gt;&#xA;production環境で動作させようとしたら動かなくなってしまった問題について調査した。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansibleで最新のMySQLをインストールする。MySQL-shared-compatの役割。</title>
      <link>https://blog.mosuke.tech/entry/2015/04/15/171127/</link>
      <pubDate>Wed, 15 Apr 2015 17:11:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/04/15/171127/</guid>
      <description>&lt;p&gt;CentOS 6.5環境でAnsibleを使って最新のMySQLのセットアップをしようと思った際にハマったことをまとめた。&lt;br&gt;&#xA;本質的にはAnsibleというよりLinux RPMパッケージのはなし。&#xA;非常に簡単なサンプルコードも載せて解説します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SSHエージェントフォワード後に他のユーザでgit cloneする(鍵を使う)ことに関する考察</title>
      <link>https://blog.mosuke.tech/entry/2015/04/05/212518/</link>
      <pubDate>Sun, 05 Apr 2015 21:25:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/04/05/212518/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/SSH&#34;&gt;SSH&lt;/a&gt;のエージェントフォワードした後に、接続したユーザとは別のユーザでgit cloneしたいことがあった。&lt;br&gt;&#xA;それについて調べていく中で学習したことや検討したことについてまとめた。&lt;/p&gt;&#xA;&lt;h1&gt;0. 前提&lt;/h1&gt;&#xA;&lt;p&gt;ローカルのPC(&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Mac&#34;&gt;Mac&lt;/a&gt;)上で、&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Vagrant&#34;&gt;Vagrant&lt;/a&gt;を使用してCentOS7の仮想サーバ(testsv)を立ち上げている。&lt;/p&gt;&#xA;&lt;p&gt;&amp;lt;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9&#34;&gt;IPアドレス&lt;/a&gt;&amp;gt;&lt;br&gt;&#xA;ローカルPC：192.168.33.1&lt;br&gt;&#xA;仮想サーバ：192.168.33.100&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ruby, thin(bundler利用)を使った環境でのアプリの自動起動設定</title>
      <link>https://blog.mosuke.tech/entry/2015/02/22/211316/</link>
      <pubDate>Sun, 22 Feb 2015 21:13:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/02/22/211316/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;bunlderを使ったWebアプリをプロダクション環境で動かすときに、アプリの起動をどうやって実現しているだろうか。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Apache&#34;&gt;Apache&lt;/a&gt; Passengerを使う場合には、&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/Apache&#34;&gt;Apache&lt;/a&gt;の起動がアプリの起動につながるので、&#xA;アプリの起動はあまり気にしなかったかもしれない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SFTPにもFTPのような転送モードの選択が必要なのか</title>
      <link>https://blog.mosuke.tech/entry/2015/02/17/220526/</link>
      <pubDate>Tue, 17 Feb 2015 22:05:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/02/17/220526/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/FTP&#34;&gt;FTP&lt;/a&gt;やSFTPでの転送モードの話。&lt;/p&gt;&#xA;&lt;p&gt;ついこの前、&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/WinSCP&#34;&gt;WinSCP&lt;/a&gt;を利用していた隣の席の人が転送モードを選んでいて、&lt;br&gt;&#xA;「SFTPには転送モードはないはずなのに、転送モードを選んでいる！？」&lt;br&gt;&#xA;と疑問に思ったので確認してまとめた。&lt;/p&gt;&#xA;&lt;h2&gt;&#xA;&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/FTP&#34;&gt;FTP&lt;/a&gt;のバイナリーモードと&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/%A5%A2%A5%B9%A5%AD%A1%BC&#34;&gt;アスキー&lt;/a&gt;モード&lt;/h2&gt;&#xA;&lt;p&gt;入社しはじめの頃、それまでSFTPしかほとんど使ったことなかったので、&lt;br&gt;&#xA;先輩に「&lt;a class=&#34;keyword&#34; href=&#34;http://d.hatena.ne.jp/keyword/FTP&#34;&gt;FTP&lt;/a&gt;ではバイナリーモードを使って…」と言われて、意味が理解できなかったときがあったのを思い出す。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SSHポートフォワードを通してhttps接続をするときの注意点</title>
      <link>https://blog.mosuke.tech/entry/2015/02/11/172123/</link>
      <pubDate>Wed, 11 Feb 2015 17:21:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/02/11/172123/</guid>
      <description>&lt;p&gt;こんにちは、もーすけです。&lt;br&gt;&#xA;SSHローカルフォワードを使いこなしてますか？SSHを制するものはインフラを制するとも言われています。最近良く使っているのですが、ローカルポートフォワードでhttps接続をする際に間違えやすいポイントがあるので紹介します。&lt;/p&gt;&#xA;&lt;p&gt;下記は、以前に書いたSSHのローカルポートフォワードに関する記事です。まず基本的な概念や使い方を知りたい方は書きを参照してください。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://blog.mosuke.tech/entry/2014/12/31/170545/&#34; data-iframely-url=&#34;//cdn.iframe.ly/wDM0LAq&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>dockerで特定ユーザでログインした状態のシェル環境を提供する</title>
      <link>https://blog.mosuke.tech/entry/2015/01/24/213255/</link>
      <pubDate>Sat, 24 Jan 2015 21:32:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/01/24/213255/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;dockerの一般的な利用の仕方ではあまり想定されないケースかもしれないが、&lt;br&gt;&#xA;特定のユーザでログインした状態のコンテナを作りたいという場面に遭遇した。&lt;/p&gt;</description>
    </item>
    <item>
      <title>xinetdを使ってLinux上のサービスを常時起動せずに利用する</title>
      <link>https://blog.mosuke.tech/entry/2015/01/02/013658/</link>
      <pubDate>Fri, 02 Jan 2015 01:36:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/01/02/013658/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;使用頻度は低いが、常に可動させておきたいサービスをどう管理するか。使用頻度の低いサービスのデーモンをメモリに常駐させておくのはサーバのリソース効率が悪いというのは言うまでもないだろう。&lt;br&gt;&#xA;そこでスーパーサーバ(代表的なものにxinted)というたぐいのものを使うことで、使用頻度の低いサービスの窓口のサービスのみ起動しておき、要求があったときだけ特定のサービスを起動させることが可能だ。&lt;/p&gt;&#xA;&lt;p&gt;スーパーサーバを実際に触ってみたのでメモする。&lt;/p&gt;&#xA;&lt;p&gt;スーパーサーバというと代表的なものにinetdとxinetdがあるが、&lt;br&gt;&#xA;xinetdはinetdの拡張版で、アクセス制御などの機能を搭載しているとのことだったので、今回はxinetdを設定してみることにした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2014年を思い返して…</title>
      <link>https://blog.mosuke.tech/entry/2015/01/01/161826/</link>
      <pubDate>Thu, 01 Jan 2015 16:18:00 +0900</pubDate>
      <guid>https://blog.mosuke.tech/entry/2015/01/01/161826/</guid>
      <description>&lt;body&gt;&#xA;&lt;p&gt;2015年になってしまいました。&lt;br&gt;&#xA;2014年に技術分野で印象に残ってること３つを思い返してみる。&lt;br&gt;&lt;/p&gt;&#xA;&lt;h1&gt;1. インフラ会&lt;/h1&gt;&#xA;&lt;p&gt;@mogulla3と軽いノリで始めたインフラ会。&lt;br&gt;&#xA;普段触らない、あるいは触ったとしてもすでに構築された環境で触ることの多いインフラ技術について&lt;br&gt;&#xA;土日を使って自らの手で構築してみるといった会。&lt;br&gt;&#xA;10月くらいから初めて以下を実際にやってみた。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
